/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import t from"../../../core/Accessor.js";import{d as i,a as s,i as o,e as r}from"../../../chunks/maybe.js";import{property as n}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/lang.js";import"../../../chunks/ensureType.js";import{subclass as a}from"../../../core/accessorSupport/decorators/subclass.js";import{d as l}from"../../../chunks/defaultUnit.js";import{A as c}from"../../../chunks/AnalysisView3D.js";import{M as p}from"../../../chunks/interfaces3.js";import u from"../../../core/Handles.js";import{L as m}from"../../../chunks/Logger.js";import{b as h,t as d}from"../../../chunks/quantityUtils.js";import{when as g,watch as y,syncAndInitial as j}from"../../../core/reactiveUtils.js";import{h as v,v as _,s as b,n as f,d as w,k,w as S,_ as L,o as P,b as C,W as O,g as E}from"../../../chunks/mathUtils.js";import{geodesicLength as D}from"../../../geometry/geometryEngine.js";import M from"../../../geometry/Polyline.js";import{canProjectWithoutEngine as V,projectPointToVector as z,projectPointToWGS84ComparableLonLat as A}from"../../../geometry/projection.js";import{c as x,S as T,W as U}from"../../../chunks/projectionEllipsoid.js";import{isSupported as R,geodesicLengths as G,inverseGeodeticSolver as I}from"../../../geometry/support/geodesicUtils.js";import{a as F,l as N}from"../../../chunks/projectionUtils.js";import{U as W,s as q}from"../../../chunks/UnitNormalizer.js";import"../../../intl.js";import{f as H,a as B,b as Q,c as X,d as J}from"../../../chunks/quantityFormatUtils.js";import{d as $,g as K}from"../../../chunks/screenUtils.js";import{j as Y,c as Z}from"../../../chunks/unitUtils.js";import{f as ee}from"../../../chunks/vec2.js";import{f as te}from"../../../chunks/vec4f32.js";import{V as ie,a as se}from"../../../chunks/interfaces4.js";import{L as oe,G as re,E as ne,m as ae}from"../../../chunks/Segment.js";import{L as le}from"../../../chunks/LineVisualElement.js";import{c as ce}from"../../../chunks/mat4f64.js";import{c as pe}from"../../../chunks/vec4f64.js";import{s as ue}from"../../../chunks/vectorStacks.js";import{O as me}from"../../../chunks/Object3DVisualElement.js";import{G as he}from"../../../chunks/GeometryUtil.js";import{g as de,D as ge,M as ye,a as je,R as ve}from"../../../chunks/Material.js";import{n as _e}from"../../../chunks/InterleavedLayout.js";import{S as be,a as fe,b as we,F as ke,D as Se,R as Le,c as Pe,P as Ce,d as Oe,G as Ee}from"../../../chunks/glUtil3D.js";import{T as De}from"../../../chunks/basicInterfaces.js";import{R as Me}from"../../../chunks/RenderSlot.js";import{V as Ve}from"../../../chunks/VertexAttribute.js";import{p as ze}from"../../../chunks/ShaderTechniqueConfiguration.js";import{m as Ae,b as xe,o as Te,a as Ue,d as Re}from"../../../chunks/OrderIndependentTransparency.js";import{C as Ge,P as Ie}from"../../../chunks/enums.js";import{R as Fe}from"../../../chunks/RightAngleQuadVisualElement.js";import{c as Ne}from"../../../chunks/lineStippleUtils.js";import{o as We}from"../../../chunks/locale.js";import{f as qe}from"../../../chunks/messages.js";import"../../../chunks/get.js";import"../../../chunks/utils.js";import"../../../chunks/handleUtils.js";import"../../../chunks/metadata.js";import"../../../chunks/ArrayPool.js";import"../../../chunks/tracking.js";import"../../../chunks/watch.js";import"../../../core/scheduling.js";import"../../../chunks/nextTick.js";import"../../../core/promiseUtils.js";import"../../../core/Error.js";import"../../../chunks/object.js";import"../../../config.js";import"../../../chunks/string.js";import"../../../core/Promise.js";import"../../../core/Collection.js";import"../../../core/Evented.js";import"../../../chunks/shared.js";import"../../../chunks/SimpleObservable.js";import"../../../chunks/common.js";import"../../../chunks/geometryEngineBase.js";import"../../../chunks/hydrated.js";import"../../../geometry/Extent.js";import"../../../geometry/Geometry.js";import"../../../core/JSONSupport.js";import"../../../chunks/reader.js";import"../../../geometry/SpatialReference.js";import"../../../chunks/writer.js";import"../../../geometry/Point.js";import"../../../core/accessorSupport/decorators/cast.js";import"../../../geometry/support/webMercatorUtils.js";import"../../../chunks/Ellipsoid.js";import"../../../geometry/Multipoint.js";import"../../../chunks/zmUtils.js";import"../../../geometry/Polygon.js";import"../../../chunks/extentUtils.js";import"../../../chunks/mat4.js";import"../../../chunks/pe.js";import"../../../chunks/assets.js";import"../../../request.js";import"../../../kernel.js";import"../../../core/urlUtils.js";import"../../../chunks/aaBoundingRect.js";import"../../../chunks/geodesicConstants.js";import"../../../geometry/support/GeographicTransformation.js";import"../../../geometry/support/GeographicTransformationStep.js";import"../../../chunks/zscale.js";import"../../../chunks/jsonMap.js";import"../../../geometry.js";import"../../../chunks/typeUtils.js";import"../../../geometry/support/jsonUtils.js";import"../../../chunks/ElevationProvider.js";import"../../../chunks/number2.js";import"../../../chunks/unitFormatUtils.js";import"../../../chunks/byteSizeEstimations.js";import"../../../chunks/Cyclical.js";import"../../../chunks/VisualElement.js";import"../../../chunks/viewUtils.js";import"../../../chunks/elevationInfoUtils.js";import"../../../chunks/unitConversionUtils.js";import"../../../chunks/lengthUtils.js";import"../../../chunks/projector.js";import"../../../chunks/widgetUtils.js";import"../../../chunks/TextOverlayItem.js";import"../../../chunks/mathUtils2.js";import"../../../chunks/lineUtils.js";import"../../../chunks/triangulationUtils.js";import"../../../chunks/earcut.js";import"../../../chunks/deduplicate.js";import"../../../chunks/ViewingMode.js";import"../../../chunks/compilerUtils.js";import"../../../chunks/CameraSpace.glsl.js";import"../../../chunks/sphere.js";import"../../../chunks/ray.js";import"../../../chunks/Util.js";import"../../../chunks/vec2f64.js";import"../../../chunks/utils4.js";import"../../../chunks/doublePrecisionUtils.js";import"../../../chunks/Octree.js";import"../../../chunks/frustum.js";import"../../../chunks/plane.js";import"../../../chunks/aaBoundingBox.js";import"../../../chunks/dehydratedFeatures.js";import"../../../chunks/quantizationUtils.js";import"../../../layers/support/Field.js";import"../../../chunks/enumeration.js";import"../../../chunks/domains.js";import"../../../layers/support/CodedValueDomain.js";import"../../../layers/support/Domain.js";import"../../../layers/support/InheritedDomain.js";import"../../../layers/support/RangeDomain.js";import"../../../chunks/fieldType.js";import"../../../Graphic.js";import"../../../PopupTemplate.js";import"../../../layers/support/fieldUtils.js";import"../../../chunks/arcadeOnDemand.js";import"../../../popup/content.js";import"../../../popup/content/AttachmentsContent.js";import"../../../popup/content/Content.js";import"../../../popup/content/CustomContent.js";import"../../../popup/content/ExpressionContent.js";import"../../../popup/ElementExpressionInfo.js";import"../../../popup/content/FieldsContent.js";import"../../../popup/FieldInfo.js";import"../../../popup/support/FieldInfoFormat.js";import"../../../chunks/date.js";import"../../../popup/content/MediaContent.js";import"../../../popup/content/BarChartMediaInfo.js";import"../../../popup/content/mixins/ChartMediaInfo.js";import"../../../popup/content/mixins/MediaInfo.js";import"../../../popup/content/support/ChartMediaInfoValue.js";import"../../../popup/content/support/ChartMediaInfoValueSeries.js";import"../../../chunks/chartMediaInfoUtils.js";import"../../../popup/content/ColumnChartMediaInfo.js";import"../../../popup/content/ImageMediaInfo.js";import"../../../popup/content/support/ImageMediaInfoValue.js";import"../../../popup/content/LineChartMediaInfo.js";import"../../../popup/content/PieChartMediaInfo.js";import"../../../popup/content/TextContent.js";import"../../../popup/ExpressionInfo.js";import"../../../popup/LayerOptions.js";import"../../../popup/RelatedRecordsInfo.js";import"../../../popup/support/RelatedRecordsInfoFieldOrder.js";import"../../../support/actions/ActionBase.js";import"../../../chunks/Identifiable.js";import"../../../support/actions/ActionButton.js";import"../../../support/actions/ActionToggle.js";import"../../../symbols.js";import"../../../symbols/CIMSymbol.js";import"../../../symbols/Symbol.js";import"../../../Color.js";import"../../../chunks/colorUtils.js";import"../../../symbols/ExtrudeSymbol3DLayer.js";import"../../../symbols/Symbol3DLayer.js";import"../../../chunks/utils2.js";import"../../../symbols/edges/Edges3D.js";import"../../../chunks/materialUtils.js";import"../../../chunks/opacityUtils.js";import"../../../symbols/edges/SketchEdges3D.js";import"../../../symbols/edges/SolidEdges3D.js";import"../../../chunks/Symbol3DMaterial.js";import"../../../symbols/FillSymbol.js";import"../../../symbols/SimpleLineSymbol.js";import"../../../symbols/LineSymbol.js";import"../../../symbols/LineSymbolMarker.js";import"../../../chunks/lineMarkers.js";import"../../../symbols/FillSymbol3DLayer.js";import"../../../symbols/patterns/LineStylePattern3D.js";import"../../../symbols/patterns/StylePattern3D.js";import"../../../chunks/utils3.js";import"../../../chunks/colors.js";import"../../../chunks/symbolLayerUtils3D.js";import"../../../symbols/Font.js";import"../../../symbols/IconSymbol3DLayer.js";import"../../../chunks/persistableUrlUtils.js";import"../../../symbols/LabelSymbol3D.js";import"../../../symbols/Symbol3D.js";import"../../../chunks/collectionUtils.js";import"../../../portal/Portal.js";import"../../../core/Loadable.js";import"../../../portal/PortalQueryParams.js";import"../../../portal/PortalQueryResult.js";import"../../../portal/PortalUser.js";import"../../../portal/PortalFolder.js";import"../../../portal/PortalGroup.js";import"../../../symbols/LineSymbol3DLayer.js";import"../../../symbols/LineStyleMarker3D.js";import"../../../core/Clonable.js";import"../../../symbols/ObjectSymbol3DLayer.js";import"../../../symbols/PathSymbol3DLayer.js";import"../../../symbols/TextSymbol3DLayer.js";import"../../../symbols/WaterSymbol3DLayer.js";import"../../../chunks/Thumbnail.js";import"../../../chunks/Symbol3DVerticalOffset.js";import"../../../symbols/callouts/Callout3D.js";import"../../../symbols/callouts/LineCallout3D.js";import"../../../symbols/LineSymbol3D.js";import"../../../symbols/MarkerSymbol.js";import"../../../symbols/MeshSymbol3D.js";import"../../../symbols/PictureFillSymbol.js";import"../../../chunks/urlUtils.js";import"../../../symbols/PictureMarkerSymbol.js";import"../../../symbols/PointSymbol3D.js";import"../../../symbols/PolygonSymbol3D.js";import"../../../symbols/SimpleFillSymbol.js";import"../../../symbols/SimpleMarkerSymbol.js";import"../../../symbols/TextSymbol.js";import"../../../symbols/WebStyleSymbol.js";import"../../../chunks/interfaces2.js";import"../../../chunks/vec2f32.js";import"../../../chunks/FramebufferObject.js";import"../../../chunks/VertexArrayObject.js";import"../../../chunks/Texture.js";import"../../../chunks/context-util.js";import"../../../chunks/NestedMap.js";import"../../../chunks/Camera.js";import"../../../chunks/lineSegment.js";import"../../../chunks/geometryDataUtils.js";import"../../../chunks/triangle.js";import"../../../chunks/Matrix4Uniform.js";import"../../../chunks/quatf64.js";import"../../../chunks/vec3f32.js";import"../../../chunks/Intersector.js";import"../../../chunks/boundedPlane.js";import"../../../chunks/verticalOffsetUtils.js";import"../../../chunks/mat3.js";import"../../../chunks/quat.js";import"../../../chunks/glUtil.js";import"../../../chunks/VertexElementDescriptor.js";import"../../../chunks/MemCache.js";import"../../../chunks/requestImageUtils.js";import"../../../chunks/floatRGBA.js";import"../../../chunks/Scheduler.js";import"../../../chunks/debugFlags.js";import"../../../chunks/BufferView.js";import"../../../chunks/types.js";import"../../../chunks/mat4f32.js";import"../../../chunks/ColorMaterial.js";import"../../../chunks/VertexColor.glsl.js";const He=m.getLogger("esri.views.3d.analysis.DirectLineMeasurement.DirectLineMeasurementController");let Be=class extends t{constructor(e){super(e),this._unitNormalizer=new W,this._handles=new u,this._tempStartPosition=v(),this._tempEndPosition=v(),this._tempCornerPosition=v()}initialize(){this._handles.add(g((()=>this.view?.ready),(()=>this._initialize()),{once:!0,sync:!0,initial:!0}))}destroy(){this._handles=i(this._handles)}_initialize(){const e=this.view.spatialReference,t=x(e),i=t===T?U:t;this._sphericalPCPF=i;const s=V(e,i);this._unitNormalizer.spatialReference=s?i:e,this._handles.add([y((()=>({viewData:this.viewData,startPoint:this.analysis.startPoint})),(({viewData:e,startPoint:t})=>{e.elevationAlignedStartPoint=this._applyProjectionAndElevationAlignment(t)}),j),y((()=>({viewData:this.viewData,endPoint:this.analysis.endPoint})),(({viewData:e,endPoint:t})=>{e.elevationAlignedEndPoint=this._applyProjectionAndElevationAlignment(t)}),j),y((()=>({result:this._computedResult,viewData:this.viewData})),(({result:e,viewData:t})=>{t.result=e}),j)])}_applyProjectionAndElevationAlignment(e){if(s(e))return e;const t=F(e,this.view.spatialReference,this.view.elevationProvider);return s(t)?(N(this.analysis,e.spatialReference,He),null):t}get _computedResult(){const{elevationAlignedStartPoint:e,elevationAlignedEndPoint:t,measurementMode:i}=this.viewData;if(s(e)||s(t))return null;const o=this._euclideanDistances(e,t),r=this._geodesicDistance(e,t,o.horizontal.value),n=i===p.Geodesic||i===p.Auto&&o.horizontal.value>1e5?"geodesic":"euclidean";return{mode:n,distance:"euclidean"===n?o.direct:r,directDistance:o.direct,horizontalDistance:o.horizontal,verticalDistance:o.vertical,geodesicDistance:r}}_euclideanDistances(e,t){const i=e.clone();i.z=t.z;const s=this._tempStartPosition,o=this._tempEndPosition,r=this._tempCornerPosition,n=this.view.spatialReference,a=this._sphericalPCPF,l=V(n,a)?a:n;z(e,s,l),z(t,o,l),z(i,r,l);const c=_(s,o),p=_(r,o),u=Math.abs(t.z-e.z),m=e=>this._unitNormalizer.normalizeDistance(e),d=m(c),g=m(p),y=m(u);return{direct:h(d,"meters"),horizontal:h(g,"meters"),vertical:h(y,"meters")}}_geodesicDistance(e,t,i){const s=e.spatialReference,r=new M({spatialReference:s});r.addPath([e,t]);const n=s.isGeographic&&R(s)?G([r],"meters")[0]:s.isWebMercator?D(r,"meters"):null,a=o(n)?n:this._fallbackGeodesicDistance(e,t,i);return h(a,"meters")}_fallbackGeodesicDistance(e,t,i){if(A(e,Qe)&&A(t,Xe)){const e={distance:0};return I(e,Qe,Xe),e.distance}return i}};e([n()],Be.prototype,"view",void 0),e([n()],Be.prototype,"analysis",void 0),e([n()],Be.prototype,"viewData",void 0),e([n()],Be.prototype,"_computedResult",null),Be=e([a("esri.views.3d.analysis.DirectLineMeasurement.DirectLineMeasurementController")],Be);const Qe=v(),Xe=v(),Je=Object.freeze(Object.defineProperty({__proto__:null,build:function(e){const t=new be;fe(t,e),t.vertex.uniforms.add(new we("width",(e=>e.width))),t.attributes.add(Ve.POSITION,"vec3"),t.attributes.add(Ve.NORMAL,"vec3"),t.attributes.add(Ve.UV0,"vec2"),t.attributes.add(Ve.AUXPOS1,"float"),t.varyings.add("vtc","vec2"),t.varyings.add("vlength","float"),t.varyings.add("vradius","float"),t.vertex.code.add(de`void main(void) {
vec3 bitangent = normal;
vtc = uv0;
vlength = auxpos1;
vradius = 0.5 * width;
vec4 pos = view * vec4(position + vradius * bitangent * uv0.y, 1.0);
gl_Position = proj * pos;
}`),t.fragment.uniforms.add([new we("outlineSize",(e=>e.outlineSize)),new ke("outlineColor",(e=>e.outlineColor)),new we("stripeLength",(e=>e.stripeLength)),new ke("stripeEvenColor",(e=>e.stripeEvenColor)),new ke("stripeOddColor",(e=>e.stripeOddColor))]);const i=1/Math.sqrt(2);return t.fragment.code.add(de`
    const float INV_SQRT2 = ${de.float(i)};

    vec4 arrowColor(vec2 tc, float len) {
      float d = INV_SQRT2 * (tc.x - abs(tc.y));
      d = min(d, INV_SQRT2 * (len - tc.x - abs(tc.y)));
      d = min(d, 1.0 - abs(tc.y));

      if (d < 0.0) {
        return vec4(0.0);
      } else if (d < outlineSize) {
        return outlineColor;
      } else {
        return fract(0.5 / stripeLength * tc.x * vradius) >= 0.5 ? stripeOddColor : stripeEvenColor;
      }
    }

    void main(void) {
      vec2 ntc = vec2(vtc.x / vradius, vtc.y);
      vec4 color = arrowColor(ntc, vlength / vradius);
      if (color.a == 0.0) {
        discard;
      }
      gl_FragColor = color;
    }
  `),t}},Symbol.toStringTag,{value:"Module"}));class $e extends Pe{constructor(e,t,i){super(e,t,i)}initializeProgram(e){const t=$e.shader.get().build(this.configuration);return new Ce(e.rctx,t,ge)}_setPipelineState(e){const t=e===De.NONE,i=this.configuration;return Ae({blending:i.transparent?t?xe:Te(e):null,polygonOffset:this.configuration.polygonOffsetEnabled&&{factor:0,units:-4},depthTest:{func:Ge.LESS},depthWrite:Ue,colorWrite:Re})}initializePipeline(){return this._setPipelineState(this.configuration.transparencyPassType)}get primitiveType(){return Ie.TRIANGLE_STRIP}}$e.shader=new Le(Je,(()=>Promise.resolve().then((()=>Je))));class Ke extends Se{constructor(){super(...arguments),this.polygonOffsetEnabled=!1,this.transparent=!1,this.transparencyPassType=De.NONE}}e([ze()],Ke.prototype,"polygonOffsetEnabled",void 0),e([ze()],Ke.prototype,"transparent",void 0),e([ze({count:De.COUNT})],Ke.prototype,"transparencyPassType",void 0);class Ye extends ye{constructor(e){super(e,new et),this.techniqueConfig=new Ke}getConfiguration(e,t){return this.techniqueConfig.polygonOffsetEnabled=this.parameters.polygonOffset,this.techniqueConfig.transparent=this.parameters.stripeEvenColor[3]<1||this.parameters.stripeOddColor[3]<1||this.parameters.outlineColor[3]<1,this.techniqueConfig.transparencyPassType=t?.transparencyPassType??De.NONE,this.techniqueConfig}dispose(){}intersect(){}requiresSlot(e){return e===Me.OPAQUE_MATERIAL}createGLMaterial(e){return e.output===Oe.Color?new Ze(e):null}createBufferWriter(){return new at}}class Ze extends Ee{beginSlot(e){return this.ensureTechnique($e,e)}}class et extends je{constructor(){super(...arguments),this.width=32,this.outlineSize=.2,this.outlineColor=[1,.5,0,1],this.stripeLength=1,this.stripeEvenColor=[1,1,1,1],this.stripeOddColor=[1,.5,0,1],this.polygonOffset=!1}}const tt=_e().vec3f(Ve.POSITION).vec3f(Ve.NORMAL).vec2f(Ve.UV0).f32(Ve.AUXPOS1),it=v(),st=v(),ot=v(),rt=v(),nt=v();class at{constructor(){this.vertexBufferLayout=tt}allocate(e){return this.vertexBufferLayout.createBuffer(e)}elementCount(e){return 2*(e.indices.get(Ve.POSITION).length/2+1)}write(e,t,i,s){const o=t.vertexAttributes.get(Ve.POSITION).data,r=t.vertexAttributes.get(Ve.NORMAL).data,n=o.length/3,a=t&&t.indices&&t.indices.get(Ve.POSITION);a&&a.length!==2*(n-1)&&console.warn("MeasurementArrowMaterial does not support indices");const l=it,c=st,p=ot,u=rt,m=nt,h=e.transformation,d=e.invTranspTransformation,g=i.position,y=i.normal,j=i.uv0;let v=0;for(let e=0;e<n;++e){const t=3*e;if(b(l,o[t],o[t+1],o[t+2]),e<n-1){const t=3*(e+1);b(c,o[t],o[t+1],o[t+2]),b(m,r[t],r[t+1],r[t+2]),f(m,m),w(p,c,l),f(p,p),k(u,m,p),f(u,u)}const i=_(l,c);h&&d&&(S(l,l,h),S(c,c,h),S(u,u,d));const a=s+2*e,L=a+1;g.setVec(a,l),g.setVec(L,l),y.setVec(a,u),y.setVec(L,u),j.set(a,0,v),j.set(a,1,-1),j.set(L,0,v),j.set(L,1,1),e<n-1&&(v+=i)}const L=i.auxpos1;for(let e=0;e<2*n;++e)L.set(s+e,v)}}class lt extends me{constructor(e){super(e),this._parameters=ct,this._handles=null,this._origin=v(),this._originTransform=ce(),this._arrowCenter=v(),this._renderOccluded=ve.OccludeAndTransparent,this._geometry=null,this._stripeLength=1,this._stripesEnabled=!0,this._opacity=1,this.applyProps(e)}get renderOccluded(){return this._renderOccluded}set renderOccluded(e){e!==this._renderOccluded&&(this._renderOccluded=e,this._arrowMaterial&&this._arrowMaterial.setParameters({renderOccluded:e}))}get geometry(){return this._geometry}set geometry(e){this._geometry=e,this._geometryChanged()}get stripeLength(){return this._stripeLength}set stripeLength(e){this._stripeLength=e,this.attached&&this._arrowMaterial.setParameters({stripeLength:this._stripeLength})}get stripesEnabled(){return this._stripesEnabled}set stripesEnabled(e){if(this._stripesEnabled=e,this.attached){const e=this.opacity,{arrowStripeEvenColor:t,arrowStripeOddColor:i}=this._parameters,s=L(pt,this._stripesEnabled?t:i,e);this._arrowMaterial.setParameters({stripeEvenColor:s})}}get opacity(){return this._opacity}set opacity(e){e!==this._opacity&&(this._opacity=e,this._updateArrowOpacity())}createExternalResources(){const{arrowStripeEvenColor:e,arrowStripeOddColor:t,arrowOutlineColor:i}=this._parameters,s=this._stripesEnabled?e:t;this._arrowMaterial=new Ye({outlineColor:i,stripeEvenColor:s,stripeOddColor:t,renderOccluded:this.renderOccluded,polygonOffset:!0}),this._handles=new u,this._handles.add(y((()=>this.view.state.camera),(()=>{this._viewChanged()})))}destroyExternalResources(){this._arrowMaterial=null,this._handles.destroy(),this._handles=null}forEachExternalMaterial(e){e(this._arrowMaterial)}createGeometries(e){if(s(this._geometry)||s(this._geometry.startRenderSpace)||s(this._geometry.endRenderSpace))return;const t=this._createArrowGeometry(this._geometry.startRenderSpace,this._geometry.endRenderSpace,this._origin,this._geometry);e.addGeometry(t,this._arrowMaterial,this._originTransform),this._viewChanged()}_createArrowGeometry(e,t,i,s){const o=this.view.renderCoordsHelper,r=[],n=[],a=(e,t)=>{const s=ue.get();w(s,e,i),r.push(s),n.push(t)};if("euclidean"===s.type){s.eval(.5,this._arrowCenter);const i=ue.get();o.worldUpAtPosition(this._arrowCenter,i),a(e,i),a(t,i)}else{s.eval(.5,this._arrowCenter);const e=this._parameters.arrowSubdivisions+1&-2;for(let t=0;t<e;++t){const i=t/(e-1),r=ue.get(),n=ue.get();s.eval(i,r),o.worldUpAtPosition(r,n),a(r,n)}}return he.createPolylineGeometry(r,n)}_geometryChanged(){this.recreateGeometry()}_viewChanged(){if(this.view.ready&&this.attached&&o(this._geometry)){const e=this.view.state.camera.computeScreenPixelSizeAt(this._arrowCenter);this._arrowMaterial.setParameters({width:this._parameters.arrowWidth*e})}}_updateArrowOpacity(){const e=this.opacity,{arrowStripeEvenColor:t,arrowStripeOddColor:i,arrowOutlineColor:s}=this._parameters,o=L(pt,this._stripesEnabled?t:i,e),r=L(ut,s,e),n=L(mt,i,e);this._arrowMaterial.setParameters({stripeEvenColor:o,outlineColor:r,stripeOddColor:n})}}const ct={arrowWidth:16,arrowOutlineColor:[1,.5,0,1],arrowOutlineWidth:.2,arrowStripeEvenColor:[1,1,1,1],arrowStripeOddColor:[1,.5,0,1],arrowStripeLength:16,arrowSubdivisions:128},pt=pe(),ut=pe(),mt=pe();var ht;!function(e){e[e.Pending=0]="Pending",e[e.Ready=1]="Ready",e[e.Destroyed=2]="Destroyed"}(ht||(ht={}));let dt=class extends t{constructor(e){super(e),this._params={...yt},this._handles=new u,this._segmentVisualElement=null,this._triangleVisualElement=null,this._rightAngleQuad=null,this._projectedGeodesicLine=null,this._geodesicStartHint=null,this._geodesicEndHint=null,this._segmentLabel=null,this._verticalLabel=null,this._horizontalLabel=null,this._startPosition=v(),this._endPosition=v(),this._cornerPosition=v(),this._startPositionAtSeaLevel=v(),this._endPositionAtSeaLevel=v(),this._triangleOrientationOverride=null,this.messages=null,this.loadingMessages=!0,this.visualElementOrientation=ie.Auto,this.triangleCollapseRatioThreshold=.03}get visible(){return this.analysisView.visible}get viewMode(){const{elevationAlignedStartPoint:e,elevationAlignedEndPoint:t}=this.analysisView;if(s(e)||s(t)||e.equals(t))return se.None;const i=this.analysisView.result;if(s(i))return se.Direct;if("geodesic"===i.mode)return this._requiresGeodesicGuideAt(this._startPosition)||this._requiresGeodesicGuideAt(this._endPosition)?se.ProjectedGeodesic:se.Direct;const{verticalDistance:o,horizontalDistance:r}=i,n=o.value,a=r.value;return Math.min(n/a,a/n)<this.triangleCollapseRatioThreshold?se.Direct:se.Triangle}get actualVisualizedMeasurement(){if(s(this.analysisView.result))switch(this.analysisView.measurementMode){case p.Auto:case p.Euclidean:default:return"euclidean";case p.Geodesic:return"geodesic"}return this.analysisView.result.mode}get allowVisualElementsOrientationChange(){return s(this._triangleOrientationOverride)}set allowVisualElementsOrientationChange(e){s(this._triangleOrientationOverride)!==e&&(s(this._triangleOrientationOverride)?this._triangleOrientationOverride=this._actualVisualElementsOrientation:this._triangleOrientationOverride=null)}get labels(){const e="geodesic"===this.actualVisualizedMeasurement;return{direct:this._segmentLabel,horizontal:e?this._segmentLabel:this._horizontalLabel,vertical:this._verticalLabel}}initialize(){const e=this._params,t={attached:!0,view:this.view};this._segmentVisualElement=new lt({...t,geometry:null,renderOccluded:ve.OccludeAndTransparent}),this._triangleVisualElement=new le({...t,width:e.triangleLineWidth,color:e.triangleColor,renderOccluded:ve.OccludeAndTransparent}),this._rightAngleQuad=new Fe({...t,color:gt,renderOccluded:ve.OccludeAndTransparent});const i={...t,polygonOffset:!0,renderOccluded:ve.OccludeAndTransparent};this._projectedGeodesicLine=new le({...i,width:e.geodesicProjectionLineWidth,color:e.geodesicProjectionLineColor,stipplePattern:Ne(e.guideStippleLengthPixels)}),this._geodesicStartHint=new le({...i,width:e.guideLineWidth,color:e.geodesicProjectionLineColor,stipplePattern:Ne(e.guideStippleLengthPixels)}),this._geodesicEndHint=new le({...i,width:e.guideLineWidth,color:e.geodesicProjectionLineColor,stipplePattern:Ne(e.guideStippleLengthPixels)}),this._segmentLabel=new oe({...t,fontSize:e.direcLabelFontSize}),this._verticalLabel=new oe({...t,fontSize:e.verticalLabelFontSize}),this._horizontalLabel=new oe({...t,fontSize:e.horizontalLabelFontSize}),this._handles.add([y((()=>{const{elevationAlignedStartPoint:e,elevationAlignedEndPoint:t}=this.analysisView,i=this.view;return{view:i,camera:i.state.camera,viewMode:this.viewMode,elevationAlignedStartPoint:e,elevationAlignedEndPoint:t,orientation:this._actualVisualElementsOrientation,visualizedMeasurement:this.actualVisualizedMeasurement,stripeLength:this._measurementArrowStripeLength}}),(e=>this._updateGeometryAndViewMode(e)),j),y((()=>({visible:this.visible,viewMode:this.viewMode})),(e=>this._updateVisualElementVisibility(e)),j),y((()=>({text:this._labelsText,visualizedMeasurement:this.actualVisualizedMeasurement})),(e=>this._updateLabelText(e)),j),y((()=>({visible:this.visible,viewMode:this.viewMode})),(e=>this._updateLabelVisibility(e)),j),y((()=>this._measurementArrowStripeLength),(e=>this._updateSegmentStripeLength(e)),j),We((async()=>this._updateMessageBundle()))]),this._updateMessageBundle()}destroy(){this._handles=i(this._handles),this._segmentVisualElement=i(this._segmentVisualElement),this._triangleVisualElement=i(this._triangleVisualElement),this._rightAngleQuad=i(this._rightAngleQuad),this._projectedGeodesicLine=i(this._projectedGeodesicLine),this._geodesicStartHint=i(this._geodesicStartHint),this._geodesicEndHint=i(this._geodesicEndHint),this._segmentLabel=i(this._segmentLabel),this._verticalLabel=i(this._verticalLabel),this._horizontalLabel=i(this._horizontalLabel),this.set("view",null)}_updateVisualElementVisibility({visible:e,viewMode:t}){if(this._segmentVisualElement.visible=!1,this._triangleVisualElement.visible=!1,this._rightAngleQuad.visible=!1,this._projectedGeodesicLine.visible=!1,this._geodesicStartHint.visible=!1,this._geodesicEndHint.visible=!1,e)switch(t){case se.None:break;case se.Direct:this._segmentVisualElement.visible=!0;break;case se.Triangle:this._segmentVisualElement.visible=!0,this._triangleVisualElement.visible=!0,this._rightAngleQuad.visible=!0;break;case se.ProjectedGeodesic:this._segmentVisualElement.visible=!0,this._projectedGeodesicLine.visible=!0,this._geodesicStartHint.visible=!0,this._geodesicEndHint.visible=!0}}_updateGeometryAndViewMode({view:e,camera:t,viewMode:i,elevationAlignedStartPoint:o,elevationAlignedEndPoint:r,orientation:n,visualizedMeasurement:a,stripeLength:l}){const c=e.renderCoordsHelper;if(s(c)||s(o)||s(r)||o.equals(r))return;let p=this._startPosition,u=this._endPosition;c.toRenderCoords(o,p),c.toRenderCoords(r,u);const m=n===ie.AboveSegment?1:-1,h=m*(c.getAltitude(u)-c.getAltitude(p));h<0&&(p=this._endPosition,u=this._startPosition);const d="geodesic"===a?new re(this._startPosition,this._endPosition,c.spatialReference):new ne(this._startPosition,this._endPosition);switch(this._segmentVisualElement.geometry=d,this._updateSegmentStripeLength(l),i){case se.Direct:this._updateSegment(d,n);break;case se.Triangle:this._updateSegmentAndTriangle({view:e,camera:t,segment:d,orientation:n,startPosition:p,endPosition:u,deltaSign:m,altitudeDelta:h});break;case se.ProjectedGeodesic:this._updateSegmentAndProjection({view:e,orientation:n,startPosition:p,endPosition:u})}}_updateSegment(e,t){this._segmentLabel.anchor=t===ie.AboveSegment?"top":"bottom",this._segmentLabel.geometry={type:"segment",segment:e,sampleLocation:"center"}}_updateSegmentAndTriangle({view:{renderCoordsHelper:e},camera:t,segment:i,orientation:s,startPosition:o,endPosition:r,deltaSign:n,altitudeDelta:a}){const l=this._cornerPosition;e.worldUpAtPosition(o,l),P(l,l,n*Math.abs(a)),C(l,l,o),this._triangleVisualElement.geometry=[[[o[0],o[1],o[2]],[l[0],l[1],l[2]],[r[0],r[1],r[2]]]],this._rightAngleQuad.geometry={previous:o,center:l,next:r};const c=new ne(o,l),p=new ne(l,r),u=function(e,t,i,s,o){const r=vt,n=_t;o.projectToRenderScreen(i,r),o.projectToRenderScreen(t,n);const a={segment:"bottom",horizontal:"top",vertical:r[0]<n[0]?"left":"right"};{const s=bt,r=ft;if(q(e,i,s,o),q(e,t,r,o),ee(s,r)>=jt){const e=Math.sign(s[1])===Math.sign(r[1]);a.segment=e?ae(a.vertical):a.vertical}else{const e=wt;q(i,t,e,o),ee(e,r)>=jt&&(a.segment=Math.sign(e[0])===Math.sign(r[0])?ae(a.horizontal):a.horizontal)}}if(s===ie.BelowSegment){const e=e=>"top"===e?"bottom":"top";a.segment=e(a.segment),a.horizontal=e(a.horizontal),a.vertical=e(a.vertical)}return a}(o,r,l,s,t);this._segmentLabel.anchor=u.segment,this._segmentLabel.geometry={type:"segment",segment:i,sampleLocation:"center"},this._verticalLabel.geometry={type:"segment",segment:c,sampleLocation:"center"},this._verticalLabel.anchor=u.vertical,this._horizontalLabel.geometry={type:"segment",segment:p,sampleLocation:"center"},this._horizontalLabel.anchor=u.horizontal}_updateSegmentAndProjection({view:{renderCoordsHelper:e},orientation:t,startPosition:i,endPosition:s}){e.setAltitude(this._startPositionAtSeaLevel,0,i),e.setAltitude(this._endPositionAtSeaLevel,0,s);const o=new re(this._startPositionAtSeaLevel,this._endPositionAtSeaLevel,e.spatialReference);this._projectedGeodesicLine.setGeometryFromSegment(o),this._geodesicStartHint.setGeometryFromSegment(new ne(this._startPositionAtSeaLevel,i)),this._geodesicEndHint.setGeometryFromSegment(new ne(this._endPositionAtSeaLevel,s)),this._segmentLabel.geometry={type:"segment",segment:o,sampleLocation:"center"},this._segmentLabel.anchor=t===ie.AboveSegment?"top":"bottom"}_updateLabelText({text:e,visualizedMeasurement:t}){o(e)?(this._segmentLabel.text="euclidean"===t?e.euclideanDistance:e.geodesicDistance,this._horizontalLabel.text=e.horizontalDistance,this._verticalLabel.text=e.verticalDistance):(this._segmentLabel.text=null,this._horizontalLabel.text=null,this._verticalLabel.text=null),this.notifyChange("labels")}_updateLabelVisibility({visible:e,viewMode:t}){const i=this._segmentLabel,s=this._horizontalLabel,o=this._verticalLabel;if(i.visible=!1,s.visible=!1,o.visible=!1,e)switch(t){case se.Direct:i.visible=!0;break;case se.Triangle:i.visible=!0,s.visible=!0,o.visible=!0;break;case se.ProjectedGeodesic:i.visible=!0;case se.None:}}get _labelsText(){if(this.destroyed)return null;const e=this.messages,t=this.analysisView.result;if(s(t)||s(e))return null;const{directDistance:i,horizontalDistance:o,verticalDistance:r,geodesicDistance:n}=t,a=this.analysisView.unit,l=e=>({euclideanDistance:"",geodesicDistance:"",horizontalDistance:"",verticalDistance:"",...e});switch(a){case"metric":return l({euclideanDistance:i&&X(e,i),geodesicDistance:n&&X(e,n),horizontalDistance:o&&X(e,o),verticalDistance:r&&J(e,r)});case"imperial":return l({euclideanDistance:i&&B(e,i),geodesicDistance:n&&B(e,n),horizontalDistance:o&&B(e,o),verticalDistance:r&&Q(e,r)});default:return l({euclideanDistance:i&&H(e,i,a),geodesicDistance:n&&H(e,n,a),horizontalDistance:o&&H(e,o,a),verticalDistance:r&&H(e,r,a)})}}_updateSegmentStripeLength(e){const t=this._segmentVisualElement;o(e)?(t.stripeLength=e,t.stripesEnabled=!0):t.stripesEnabled=!1}get _actualVisualElementsOrientation(){if(o(this._triangleOrientationOverride))return this._triangleOrientationOverride;const e=this.visualElementOrientation;return e===ie.Auto?this.view.state.camera.aboveGround?ie.AboveSegment:ie.BelowSegment:e}_requiresGeodesicGuideAt(e){const t=this.view;if(!t?.state)return!1;const i=t.state.camera,s=t.renderCoordsHelper,o=i.computeScreenPixelSizeAt(e);return s.getAltitude(e)/o>=10}get _measurementArrowStripeLength(){const{result:e,unit:t}=this.analysisView;if(s(e))return null;let i=null;const o=e.directDistance;switch(t){case"metric":i=o&&d(o,"meters");break;case"imperial":i=o&&d(o,Y(o.value,o.unit));break;default:i=o&&d(o,t)}return s(i)?null:O(i.value/30)*Z(1,i.unit,"meters")}_updateMessageBundle(){this.loadingMessages=!0,qe("esri/core/t9n/Units").then((e=>{this.messages=e})).finally((()=>{this.loadingMessages=!1}))}get testData(){return{labels:this.labels,stripeLength:this._segmentVisualElement?.stripeLength}}};e([n()],dt.prototype,"_triangleOrientationOverride",void 0),e([n()],dt.prototype,"messages",void 0),e([n()],dt.prototype,"view",void 0),e([n()],dt.prototype,"analysis",void 0),e([n()],dt.prototype,"analysisView",void 0),e([n()],dt.prototype,"loadingMessages",void 0),e([n()],dt.prototype,"visible",null),e([n()],dt.prototype,"viewMode",null),e([n()],dt.prototype,"actualVisualizedMeasurement",null),e([n()],dt.prototype,"visualElementOrientation",void 0),e([n()],dt.prototype,"triangleCollapseRatioThreshold",void 0),e([n()],dt.prototype,"allowVisualElementsOrientationChange",null),e([n()],dt.prototype,"labels",null),e([n()],dt.prototype,"_labelsText",null),e([n()],dt.prototype,"_actualVisualElementsOrientation",null),e([n()],dt.prototype,"_measurementArrowStripeLength",null),dt=e([a("esri.views.3d.analysis.DirectLineMeasurement.DirectLineMeasurementVisualization")],dt);const gt=te(1,.5,0,.75),yt={laserLineGlowColor:[1,.5,0],laserLineGlowWidth:8,laserLineGlowFalloff:8,laserLineInnerColor:[1,1,1],laserLineInnerWidth:.75,laserLineGlobalAlpha:.75,laserLineEnabled:!0,handleColor:[1,.5,0],handleOpacity:.5,handleRadius:5,triangleColor:gt,triangleLineWidth:3,triangleCornerSize:32,triangleSubdivisions:128,arrowWidth:16,arrowOutlineColor:[1,.5,0,1],arrowOutlineWidth:.2,arrowStripeEvenColor:[1,1,1,1],arrowStripeOddColor:[1,.5,0,1],arrowStripeLength:16,arrowSubdivisions:128,geodesicProjectionLineWidth:2,geodesicProjectionLineColor:gt,guideLineWidth:2,guideLineColor:gt,guideStippleLengthPixels:6,labelDistance:25,direcLabelFontSize:16,horizontalLabelFontSize:12,verticalLabelFontSize:12},jt=Math.cos(E(12)),vt=$(),_t=$(),bt=K(),ft=K(),wt=K();let kt=class extends(c(t)){constructor(e){super(e),this.type="direct-line-measurement-view-3d",this.analysis=null,this.result=null,this.measurementMode=p.Auto,this.elevationAlignedStartPoint=null,this.elevationAlignedEndPoint=null}initialize(){const e=this.view,t=this.analysis;this._analysisVisualization=new dt({view:e,analysis:t,analysisView:this}),this._analysisController=new Be({view:e,analysis:t,viewData:this})}destroy(){this._analysisController=i(this._analysisController),this._analysisVisualization=i(this._analysisVisualization)}get updating(){return!!this._analysisVisualization?.loadingMessages}get viewMode(){return this._analysisVisualization.viewMode}get actualVisualizedMeasurement(){return this._analysisVisualization.actualVisualizedMeasurement}get visualElementOrientation(){return this._analysisVisualization.visualElementOrientation}set visualElementOrientation(e){this._analysisVisualization.visualElementOrientation=e}get allowVisualElementsOrientationChange(){return this._analysisVisualization.allowVisualElementsOrientationChange}set allowVisualElementsOrientationChange(e){this._analysisVisualization.allowVisualElementsOrientationChange=e}get triangleCollapseRatioThreshold(){return this._analysisVisualization.triangleCollapseRatioThreshold}set triangleCollapseRatioThreshold(e){this._analysisVisualization.triangleCollapseRatioThreshold=e}get directLabelText(){return this._analysisVisualization.labels.direct.text}get horizontalLabelText(){return this._analysisVisualization.labels.horizontal.text}get verticalLabelText(){return this._analysisVisualization.labels.vertical.text}get unit(){return r(this.analysis.unit,this._defaultUnit)}get testData(){return this.destroyed?{labels:null,stripeLength:null,visualization:null,controller:null}:{...this._analysisVisualization?.testData,visualization:this._analysisVisualization,controller:this._analysisController}}};e([n()],kt.prototype,"updating",null),e([n({readOnly:!0})],kt.prototype,"type",void 0),e([n({constructOnly:!0,nonNullable:!0})],kt.prototype,"analysis",void 0),e([n()],kt.prototype,"result",void 0),e([n()],kt.prototype,"measurementMode",void 0),e([n()],kt.prototype,"elevationAlignedStartPoint",void 0),e([n()],kt.prototype,"elevationAlignedEndPoint",void 0),e([n({readOnly:!0})],kt.prototype,"viewMode",null),e([n({readOnly:!0})],kt.prototype,"actualVisualizedMeasurement",null),e([n()],kt.prototype,"visualElementOrientation",null),e([n()],kt.prototype,"allowVisualElementsOrientationChange",null),e([n()],kt.prototype,"triangleCollapseRatioThreshold",null),e([n({readOnly:!0})],kt.prototype,"directLabelText",null),e([n({readOnly:!0})],kt.prototype,"horizontalLabelText",null),e([n({readOnly:!0})],kt.prototype,"verticalLabelText",null),e([n()],kt.prototype,"_analysisVisualization",void 0),e([n()],kt.prototype,"_analysisController",void 0),e([n()],kt.prototype,"unit",null),e([n(l)],kt.prototype,"_defaultUnit",void 0),kt=e([a("esri.views.3d.analysis.DirectLineMeasurementAnalysisView3D")],kt);const St=kt;export{St as default};
