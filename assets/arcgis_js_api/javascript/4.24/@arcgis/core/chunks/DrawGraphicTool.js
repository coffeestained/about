/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{_ as e}from"./tslib.es6.js";import t from"../Graphic.js";import{clone as r,e as i}from"../core/lang.js";import a from"../core/Evented.js";import{HandleOwnerMixin as o}from"../core/HandleOwner.js";import{m as s}from"./handleUtils.js";import{o as n,a as l,d as p,i as c,u as h}from"./maybe.js";import{property as u}from"../core/accessorSupport/decorators/property.js";import"./ensureType.js";import{subclass as d}from"../core/accessorSupport/decorators/subclass.js";import y from"../layers/GraphicsLayer.js";import"../geometry.js";import{f as m}from"./unitUtils.js";import g from"../geometry/Circle.js";import{simplify as f,distance as x}from"../geometry/geometryEngine.js";import v,{u as w,i as O,j as M}from"../geometry/Polygon.js";import{j as _}from"../geometry/SpatialReference.js";import{m as V,c as b}from"./surfaceCoordinateSystems.js";import G from"../geometry/Multipoint.js";import j from"../geometry/Polyline.js";import R from"../geometry/Point.js";import{I as C}from"./dragEventPipeline.js";function T(e,t){const r=new R({x:e[0],y:e[1],spatialReference:t});return e.length>2&&(r.z=e[2]),r}function U(e,t,r){const i=new j({paths:e,spatialReference:t});return r&&w(i),i}function S(e,t,a,o=!0){const s=r(e);s.forEach((e=>{const t=e[0],r=e[e.length-1];i(t,r)&&1!==e.length||e.push(e[0])}));let n=new v({rings:s,spatialReference:t});return n.rings.forEach((e=>{O(e,!1,!1)||e.reverse()})),a&&w(n),o&&n.isSelfIntersecting&&_(t)&&(n=f(n)),n}function z(e,t,r){const i=t.mapToLocalMultiple(e),a=[],o={x:i[0].x,y:i[0].y},s=i[1].x,l=i[1].y,p=Math.round(s-o.x),c=Math.round(l-o.y),h=Math.max(Math.abs(p),Math.abs(c));if(r){const e={x:o.x+h,y:o.y+h},t={x:o.x-h,y:o.y-h};a.push(V(e.x,t.y),V(t.x,t.y),V(t.x,e.y),V(e.x,e.y))}else{const e={x:p>0?o.x+h:o.x-h,y:c>0?o.y+h:o.y-h};a.push(V(o.x,o.y),V(e.x,o.y),V(e.x,e.y),V(o.x,e.y))}return S([n(a.map((e=>t.localToMap(e))))],t.spatialReference,t.doUnnormalization,!0)}function L(e,t,r,i){const a=t.mapToLocalMultiple(e);let o=null,s=null;if(r)o=a[0],s=a[1];else{const e=a[0],t=a[1],r=Math.round(t.x-e.x),i=Math.round(t.y-e.y),n=Math.max(Math.abs(r),Math.abs(i));o=V(r>0?e.x+n/2:e.x-n/2,i>0?e.y+n/2:e.y-n/2),s=V(Math.abs(r)>Math.abs(i)?o.x-n/2:o.x,Math.abs(r)>Math.abs(i)?o.y:o.y-n/2)}const n=t.localToMap(o),p=t.localToMap(s);if(l(n)||l(p))return null;t.doUnnormalization&&M([[n,p]],t.spatialReference);const c=T(n,t.spatialReference),h=T(p,t.spatialReference),u=m(t.spatialReference);let d=0;if(_(t.spatialReference))d=u*x(c,h,null);else{const e=o.x-s.x,t=o.y-s.y;d=u*Math.sqrt(e*e+t*t)*(i||1)}const y=new g({center:c,radius:d,radiusUnit:"meters",spatialReference:t.spatialReference});return S(y.rings,y.spatialReference,!1)}let k=class extends(o(a.EventedMixin(C))){constructor(e){super(e),this._graphic=null,this.defaultZ=0,this.geometryType=null,this.hasZ=!0,this.mode=null,this.snappingManager=null,this.snapToScene=!1}initialize(){this.internalGraphicsLayer=new y({listMode:"hide",internal:!0}),this.view.map.layers.add(this.internalGraphicsLayer),this.drawOperation=this.makeDrawOperation(),this.handles.add([this.drawOperation.on("vertex-add",(e=>this.onVertexAdd(e))),this.drawOperation.on("vertex-remove",(e=>this.onVertexRemove(e))),this.drawOperation.on("vertex-update",(e=>this.onVertexUpdate(e))),this.drawOperation.on("cursor-update",(e=>this.onCursorUpdate(e))),this.drawOperation.on("complete",(e=>this.onComplete(e)))]),this.finishToolCreation()}destroy(){this.drawOperation=p(this.drawOperation),this._destroyAllVisualisations(),this.view.map.remove(this.internalGraphicsLayer),this.internalGraphicsLayer=p(this.internalGraphicsLayer),this._set("view",null)}get canRedo(){return this.drawOperation.canRedo}get canUndo(){return this.drawOperation.canUndo}set centered(e){this._set("centered",e),this._updateGraphic()}set enabled(e){this.drawOperation.interactive=e,this._set("enabled",e)}set forceUniformSize(e){this._set("forceUniformSize",e),this._updateGraphic()}get graphic(){return this._graphic}set graphicSymbol(e){this._set("graphicSymbol",e),c(this._graphic)&&(this._graphic.symbol=e)}get updating(){return this.drawOperation?.updating??!1}completeCreateOperation(){this.drawOperation.complete()}onInputEvent(e){this.drawOperation.onInputEvent(e)}redo(){this.drawOperation.redo()}reset(){}undo(){this.drawOperation.undo()}_createGraphic(e){this._graphic=new t({...this.graphicProperties,geometry:e,symbol:this.graphicSymbol}),this.internalGraphicsLayer.add(this._graphic),this.handles.add(this.initializeGraphic(this._graphic)),this.notifyChange("graphic"),this.handles.add(s((()=>{c(this._graphic)&&(this.internalGraphicsLayer.remove(this._graphic),this._graphic=p(this._graphic))})),P)}_destroyAllVisualisations(){this.handles.remove(A.outline),this.handles.remove(A.regularVertices),this.handles.remove(A.activeVertex),this.handles.remove(P)}_getCreateOperationGeometry(e={operationComplete:!1}){if(null==this.drawOperation||0===this.drawOperation.numVertices)return null;const t=this.drawOperation.stagedVertex,r=this.drawOperation.committedVertices,i=r.slice();c(t)&&i.push(this.drawOperation.coordinateHelper.pointToArray(t));const a=c(t)?this.drawOperation.coordinateHelper.pointToArray(t):r.splice(-1)[0],o={regularVertices:null,activeVertex:null,full:null,outline:null},s=i.length,l=this.view.spatialReference,p="3d"===this.view.type&&"global"===this.view.viewingMode;switch(this.geometryType){case"point":o.regularVertices=r,o.activeVertex=a,o.full=this.drawOperation.coordinateHelper.arrayToPoint(i[0]);break;case"multipoint":o.regularVertices=r,o.activeVertex=a,s>0&&(o.full=function(e,t){return new G({points:e,spatialReference:t})}(i,l));break;case"polyline":o.regularVertices=r,o.activeVertex=a,s>0&&(o.full=U([i],l,p));break;case"polygon":o.regularVertices=r,o.activeVertex=a,s>0&&(o.full=S([i],l,p,!0));break;case"circle":if(s>0){const t=b(this.view,i[0]);if(1===s&&e.operationComplete){const e=i[0],r=t.makeMapPoint(e[0]+I*this.view.resolution,e[1]);o.full=L([e,r],t,!0)}else 2===s&&(o.full=this.forceUniformSize?L(i,t,this.centered):function(e,t,r){const i=t.mapToLocalMultiple(e),a=i[0],o=i[1],s=Math.round(o.x-a.x),l=Math.round(o.y-a.y),p=V(r?a.x:a.x+s/2,r?a.y:a.y+l/2),c=r?s:s/2,h=r?l:l/2,u=[],d=2*Math.PI/60;for(let e=0;e<60;e++){const t=Math.cos(e*d),r=Math.sin(e*d),i=V(c*t+p.x,h*r+p.y);u.push(i)}return u.push(u[0]),S([n(u.map((e=>t.localToMap(e))))],t.spatialReference,t.doUnnormalization,!1)}(i,t,this.centered))}break;case"rectangle":if(s>0){const t=b(this.view,i[0]);if(1===s&&e.operationComplete){const e=i[0],r=t.makeMapPoint(e[0]+I*this.view.resolution,e[1]);o.full=z([e,r],t,!0)}else 2===s&&(o.full=this.forceUniformSize?z(i,t,this.centered):function(e,t,r){let i=t.mapToLocalMultiple(e);if(1===i.length){const e=48,t=i[0];i=[V(t.x-e,t.y+e),V(t.x+e,t.y-e),V(t.x+e,t.y-e),V(t.x-e,t.y+e)]}const a=[],o={x:i[0].x,y:i[0].y},s={x:i[1].x,y:i[1].y};if(r){const e=Math.round(s.x-o.x),t=Math.round(s.y-o.y);a.push(V(o.x-e,o.y-t),V(s.x,o.y-t),V(s.x,s.y),V(o.x-e,s.y))}else a.push(V(o.x,o.y),V(s.x,o.y),V(s.x,s.y),V(o.x,s.y));return S([n(a.map((e=>t.localToMap(e))))],t.spatialReference,t.doUnnormalization,!0)}(i,t,this.centered))}break;default:return null}switch(this.geometryType){case"point":case"multipoint":break;case"polyline":case"polygon":s>1&&(o.outline=U([i],l,p));break;case"circle":case"rectangle":c(o.full)&&"polygon"===o.full.type&&(o.outline=S(o.full.rings,l,p))}return o}initializeGraphic(e){return null}onComplete(e){this._updateGraphic();let t=null;if(this.drawOperation.isCompleted){const e=this._getCreateOperationGeometry({operationComplete:!0});c(e)&&(l(this._graphic)?this._createGraphic(e.full):this._graphic.geometry=e.full,t=h(this._graphic).clone())}this.emit("complete",{graphic:t,...e})}onCursorUpdate(e){this._updateGraphic(),this.emit("cursor-update",e)}onDeactivate(){this.drawOperation.isCompleted||this.drawOperation.cancel()}onVertexAdd(e){this._updateGraphic(),this.emit("vertex-add",e)}onVertexRemove(e){this._updateGraphic(),this.emit("vertex-remove",e)}onVertexUpdate(e){this._updateGraphic(),this.emit("vertex-update",e)}_updateGraphic(){const e=this._getCreateOperationGeometry();l(e)?this._destroyAllVisualisations():(c(e.outline)?this.handles.add(this.onOutlineChanged(e.outline),A.outline):this.handles.remove(A.outline),c(e.regularVertices)?this.handles.add(this.onRegularVerticesChanged(e.regularVertices),A.regularVertices):this.handles.remove(A.regularVertices),c(e.activeVertex)?this.handles.add(this.onActiveVertexChanged(e.activeVertex),A.activeVertex):this.handles.remove(A.activeVertex),c(e.full)?l(this._graphic)?this._createGraphic(e.full):this._graphic.geometry=e.full:this.handles.remove(P))}};e([u({value:!0})],k.prototype,"centered",null),e([u({nonNullable:!0})],k.prototype,"defaultZ",void 0),e([u()],k.prototype,"drawOperation",void 0),e([u({value:!0})],k.prototype,"enabled",null),e([u({value:!0})],k.prototype,"forceUniformSize",null),e([u({constructOnly:!0})],k.prototype,"geometryType",void 0),e([u()],k.prototype,"graphic",null),e([u({constructOnly:!0})],k.prototype,"graphicProperties",void 0),e([u()],k.prototype,"graphicSymbol",null),e([u({constructOnly:!0})],k.prototype,"hasZ",void 0),e([u({constructOnly:!0})],k.prototype,"mode",void 0),e([u()],k.prototype,"snappingManager",void 0),e([u()],k.prototype,"snapToScene",void 0),e([u({readOnly:!0})],k.prototype,"type",void 0),e([u({readOnly:!0})],k.prototype,"updating",null),e([u({constructOnly:!0,nonNullable:!0})],k.prototype,"view",void 0),k=e([d("esri.views.draw.DrawGraphicTool")],k);const P="create-operation-graphic",A={outline:"outline-visual",regularVertices:"regular-vertices-visual",activeVertex:"active-vertex-visual"};function E(e){switch(e){case"point":case"polyline":case"polygon":case"multipoint":return e;case"circle":case"rectangle":return"segment";default:return null}}const I=48;export{k as D,E as g};
