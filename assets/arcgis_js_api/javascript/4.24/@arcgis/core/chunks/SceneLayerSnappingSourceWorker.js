/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{_ as t}from"./tslib.es6.js";import{a as o,e as s}from"./maybe.js";import{throwIfAborted as e}from"../core/promiseUtils.js";import"./Logger.js";import"./ensureType.js";import"../core/lang.js";import"../core/accessorSupport/decorators/property.js";import{subclass as i}from"../core/accessorSupport/decorators/subclass.js";import{h as r,a8 as p,b as m,v as n,q as a}from"./mathUtils.js";import{c,f as j,i as d}from"./lineSegment.js";import{e as l,q as u,c as g}from"./sphere.js";import{S as h}from"./QueryEngineResult.js";import{O as f}from"./Octree.js";import{e as y}from"./EdgeProcessingWorker.js";import"../core/Error.js";import"./object.js";import"../config.js";import"./string.js";import"./get.js";import"./utils.js";import"./handleUtils.js";import"./metadata.js";import"./tracking.js";import"./common.js";import"./vectorStacks.js";import"./nextTick.js";import"./byteSizeEstimations.js";import"./quatf64.js";import"./mat4f64.js";import"./vec2f64.js";import"./vec4f64.js";import"./mat4.js";import"./ray.js";import"../geometry/Polygon.js";import"./writer.js";import"../geometry/Extent.js";import"../geometry/Geometry.js";import"../core/JSONSupport.js";import"../core/Accessor.js";import"./ArrayPool.js";import"./watch.js";import"../core/scheduling.js";import"./reader.js";import"../geometry/SpatialReference.js";import"../geometry/Point.js";import"../core/accessorSupport/decorators/cast.js";import"../geometry/support/webMercatorUtils.js";import"./Ellipsoid.js";import"./extentUtils.js";import"./zmUtils.js";import"./quantizationUtils.js";import"../geometry/support/jsonUtils.js";import"../geometry/Multipoint.js";import"../geometry/Polyline.js";import"./ItemCache.js";import"./MemCache.js";import"../core/sql/WhereClause.js";import"./_commonjsHelpers.js";import"./utils11.js";import"./generateRendererUtils.js";import"./jsonMap.js";import"./colorRamps.js";import"../rest/support/AlgorithmicColorRamp.js";import"../Color.js";import"./colorUtils.js";import"./enumeration.js";import"../rest/support/ColorRamp.js";import"../rest/support/MultipartColorRamp.js";import"../symbols/Symbol.js";import"./projectionSupport.js";import"../geometry/projection.js";import"./unitUtils.js";import"./projectionEllipsoid.js";import"./SimpleObservable.js";import"./pe.js";import"./assets.js";import"../request.js";import"../kernel.js";import"../core/urlUtils.js";import"./aaBoundingRect.js";import"./geodesicConstants.js";import"../geometry/support/GeographicTransformation.js";import"../geometry/support/GeographicTransformationStep.js";import"./zscale.js";import"./json.js";import"./utils18.js";import"../geometry/support/normalizeUtils.js";import"./normalizeUtilsCommon.js";import"../geometry.js";import"./typeUtils.js";import"./featureConversionUtils.js";import"./OptimizedGeometry.js";import"./OptimizedFeatureSet.js";import"../layers/support/fieldUtils.js";import"./arcadeOnDemand.js";import"./frustum.js";import"./plane.js";import"./mathUtils2.js";import"./Util.js";import"./deduplicate.js";import"./InterleavedLayout.js";import"./BufferView.js";import"./vec2.js";import"./types.js";import"./VertexAttribute.js";import"./glUtil.js";import"./enums.js";import"./VertexElementDescriptor.js";let _=class{constructor(){this._idToComponent=new Map,this._components=new f((t=>t.bounds)),this._edges=new f((t=>t.bounds)),this._tmpLineSegment=c(),this._tmpP1=r(),this._tmpP2=r(),this._tmpP3=r(),this.remoteClient=null}async fetchCandidates(t,o){await Promise.resolve(),e(o),await this._ensureEdgeLocations(t,o);const s=[];return this._edges.forEachNeighbor((o=>this._addCandidates(t,o,s)),t.bounds),{result:{candidates:s}}}async _ensureEdgeLocations(t,e){const i=[];if(this._components.forEachNeighbor((t=>{if(o(t.info)){const{id:o,uid:s}=t;i.push({id:o,uid:s})}}),t.bounds),!i.length)return;const r={components:i},p=await this.remoteClient.invoke("fetchAllEdgeLocations",r,s(e,{}));for(const t of p.components)this._setFetchEdgeLocations(t)}async add(t){const o=new C(t.id,t.bounds);return this._idToComponent.set(o.id,o),this._components.add([o]),{result:{}}}async remove(t){const o=this._idToComponent.get(t.id);if(o){const t=[];this._edges.forEachNeighbor((s=>{s.component===o&&t.push(s)}),o.bounds),this._edges.remove(t),this._components.remove([o]),this._idToComponent.delete(o.id)}return{result:{}}}_setFetchEdgeLocations(t){const s=this._idToComponent.get(t.id);if(o(s)||t.uid!==s.uid)return;const e=y.createView(t.locations),i=new Array(e.count),a=r(),c=r();for(let o=0;o<e.count;o++){const r=g(),j=l(r);e.position0.getVec(o,a),e.position1.getVec(o,c),p(j,j,a,.5),p(j,j,c,.5),m(j,j,t.origin),r[3]=n(j,a);const d=new E(s,o,r);i[o]=d}this._edges.add(i);const{objectIds:j,origin:d}=t;s.info={locations:e,objectIds:j,origin:d}}_addCandidates(t,o,s){const{locations:e,origin:i,objectIds:r}=o.component.info,p=e.position0.getVec(o.index,this._tmpP1),n=e.position1.getVec(o.index,this._tmpP2);m(p,p,i),m(n,n,i);const a=r[e.componentIndex.get(o.index)];this._addEdgeCandidate(t,a,p,n,s),this._addVertexCandidate(t,a,p,s),this._addVertexCandidate(t,a,n,s)}_addEdgeCandidate(t,o,s,e,i){if(!(t.types&h.EDGE))return;const r=l(t.bounds),p=j(s,e,this._tmpLineSegment),m=d(p,r,this._tmpP3);if(!u(t.bounds,m))return null;i.push({type:"edge",objectId:o,target:a(m),distance:n(r,m),start:a(s),end:a(e)})}_addVertexCandidate(t,o,s,e){if(!(t.types&h.VERTEX))return;const i=l(t.bounds);if(!u(t.bounds,s))return null;e.push({type:"vertex",objectId:o,target:a(s),distance:n(i,s)})}};function b(){return new _}_=t([i("esri.views.interactive.snapping.featureSources.sceneLayerSource.SceneLayerSnappingSourceWorker")],_);class C{constructor(t,o){this.id=t,this.bounds=o,this.info=null,this.uid=++C.uid}}C.uid=0;class E{constructor(t,o,s){this.component=t,this.index=o,this.bounds=s}}export{_ as SceneLayerSnappingSourceWorker,b as default};
