/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{downloadBlobAsFile as e}from"../core/urlUtils.js";import{eachAlways as t}from"../core/promiseUtils.js";import s from"../geometry/Point.js";import{o as r}from"./ensureType.js";import{a as i,i as o}from"./maybe.js";import{e as n,f as a}from"./quat.js";import{I as h,e as c,d as f}from"./quatf64.js";import{s as l,d as u,k as p,n as m,h as d,z as g,Z as E,q as w,O as A}from"./mathUtils.js";import y from"../geometry/support/MeshMaterialMetallicRoughness.js";import{c as _}from"./georeference.js";import{D as T,f as b}from"./enums.js";import{i as x,a as R,b as N,e as S}from"./imageutils.js";import{a as O}from"../core/lang.js";import"../config.js";import"./object.js";import"../core/Error.js";import"./Logger.js";import"./string.js";import"./tslib.es6.js";import"../core/accessorSupport/decorators/property.js";import"./get.js";import"./utils.js";import"./handleUtils.js";import"./metadata.js";import"../core/accessorSupport/decorators/cast.js";import"./reader.js";import"../core/accessorSupport/decorators/subclass.js";import"./tracking.js";import"./writer.js";import"../geometry/Geometry.js";import"../core/JSONSupport.js";import"../core/Accessor.js";import"./ArrayPool.js";import"./watch.js";import"../core/scheduling.js";import"./nextTick.js";import"../geometry/SpatialReference.js";import"../geometry/support/webMercatorUtils.js";import"./Ellipsoid.js";import"./common.js";import"../Color.js";import"./colorUtils.js";import"../geometry/support/MeshMaterial.js";import"../geometry/support/MeshTexture.js";import"./persistableUrlUtils.js";import"./screenshotUtils.js";import"./unitUtils.js";import"./jsonMap.js";import"./projectionEllipsoid.js";import"./mat4.js";import"./mat4f64.js";import"./mat3.js";import"../geometry/projection.js";import"./SimpleObservable.js";import"../geometry/Extent.js";import"../geometry/Multipoint.js";import"./zmUtils.js";import"./pe.js";import"./assets.js";import"../request.js";import"../kernel.js";import"../geometry/Polygon.js";import"./extentUtils.js";import"../geometry/Polyline.js";import"./aaBoundingRect.js";import"./geodesicConstants.js";import"../geometry/support/GeographicTransformation.js";import"../geometry/support/GeographicTransformationStep.js";import"./zscale.js";import"./axisAngleDegrees.js";import"./BufferView.js";import"./vec2.js";import"./vec3.js";import"./projection.js";var M,B,j,I,C,L,z,V;!function(e){e[e.JSON=1313821514]="JSON",e[e.BIN=5130562]="BIN"}(M||(M={}));class F{constructor(e,t){if(!e)throw new Error("GLB requires a JSON gltf chunk");this.length=F.HEADER_SIZE,this.length+=F.CHUNK_HEADER_SIZE;const s=this._textToArrayBuffer(e);if(this.length+=this._alignTo(s.byteLength,4),t&&(this.length+=F.CHUNK_HEADER_SIZE,this.length+=t.byteLength,t.byteLength%4))throw new Error("Expected BIN chunk length to be divisible by 4 at this point");this.buffer=new ArrayBuffer(this.length),this.outView=new DataView(this.buffer),this._writeHeader();const r=this._writeChunk(s,12,M.JSON,32);t&&this._writeChunk(t,r,M.BIN)}_writeHeader(){this.outView.setUint32(0,F.MAGIC,!0),this.outView.setUint32(4,F.VERSION,!0),this.outView.setUint32(8,this.length,!0)}_writeChunk(e,t,s,r=0){const i=this._alignTo(e.byteLength,4);for(this.outView.setUint32(t,i,!0),this.outView.setUint32(t+=4,s,!0),this._writeArrayBuffer(this.outView.buffer,e,t+=4,0,e.byteLength),t+=e.byteLength;t%4;)r&&this.outView.setUint8(t,r),t++;return t}_writeArrayBuffer(e,t,s,r,i){new Uint8Array(e,s,i).set(new Uint8Array(t,r,i),0)}_textToArrayBuffer(e){return(new TextEncoder).encode(e).buffer}_alignTo(e,t){return t*Math.ceil(e/t)}}F.HEADER_SIZE=12,F.CHUNK_HEADER_SIZE=8,F.MAGIC=1179937895,F.VERSION=2,function(e){e[e.External=0]="External",e[e.DataURI=1]="DataURI",e[e.GLB=2]="GLB"}(B||(B={})),function(e){e[e.External=0]="External",e[e.DataURI=1]="DataURI",e[e.GLB=2]="GLB"}(j||(j={})),function(e){e[e.ARRAY_BUFFER=34962]="ARRAY_BUFFER",e[e.ELEMENT_ARRAY_BUFFER=34963]="ELEMENT_ARRAY_BUFFER"}(I||(I={})),function(e){e.SCALAR="SCALAR",e.VEC2="VEC2",e.VEC3="VEC3",e.VEC4="VEC4",e.MAT2="MAT2",e.MAT3="MAT3",e.MAT4="MAT4"}(C||(C={})),function(e){e[e.POINTS=0]="POINTS",e[e.LINES=1]="LINES",e[e.LINE_LOOP=2]="LINE_LOOP",e[e.LINE_STRIP=3]="LINE_STRIP",e[e.TRIANGLES=4]="TRIANGLES",e[e.TRIANGLE_STRIP=5]="TRIANGLE_STRIP",e[e.TRIANGLE_FAN=6]="TRIANGLE_FAN"}(L||(L={})),function(e){e.OPAQUE="OPAQUE",e.MASK="MASK",e.BLEND="BLEND"}(z||(z={})),function(e){e[e.NoColor=0]="NoColor",e[e.FaceColor=1]="FaceColor",e[e.VertexColor=2]="VertexColor"}(V||(V={}));class U{constructor(e,t,s,r,i){this.buffer=e,this.componentType=s,this.dataType=r,this.data=[],this.isFinalized=!1,this.accessorIndex=-1,this.accessorAttribute=null,this.accessorMin=null,this.accessorMax=null,t.bufferViews||(t.bufferViews=[]),this.index=t.bufferViews.length,this.bufferView={buffer:e.index,byteLength:-1,target:i};const o=this._getElementSize();o>=4&&i!==I.ELEMENT_ARRAY_BUFFER&&(this.bufferView.byteStride=o),t.bufferViews.push(this.bufferView),this.numComponentsForDataType=this._calculateNumComponentsForDataType()}push(e){const t=this.data.length;if(this.data.push(e),this.accessorIndex>=0){const s=t%this.numComponentsForDataType,r=this.accessorMin[s];this.accessorMin[s]="number"!=typeof r?e:Math.min(r,e);const i=this.accessorMax[s];this.accessorMax[s]="number"!=typeof i?e:Math.max(i,e)}}get dataSize(){return this.data.length*this._sizeComponentType()}get byteSize(){return e=this.dataSize,4*Math.ceil(e/4);var e}getByteOffset(){if(!this.isFinalized)throw new Error("Cannot get BufferView offset until it is finalized");return this.buffer.getByteOffset(this)}get byteOffset(){if(!this.isFinalized)throw new Error("Cannot get BufferView offset until it is finalized");return this.buffer.getByteOffset(this)}_createTypedArray(e,t){switch(this.componentType){case T.BYTE:return new Int8Array(e,t);case T.FLOAT:return new Float32Array(e,t);case T.SHORT:return new Int16Array(e,t);case T.UNSIGNED_BYTE:return new Uint8Array(e,t);case T.UNSIGNED_INT:return new Uint32Array(e,t);case T.UNSIGNED_SHORT:return new Uint16Array(e,t)}}writeOutToBuffer(e,t){this._createTypedArray(e,t).set(this.data)}writeAsync(e){if(this.asyncWritePromise)throw new Error("Can't write multiple bufferView values asynchronously");return this.asyncWritePromise=e.then((e=>{const t=new Uint8Array(e);for(let e=0;e<t.length;++e)this.data.push(t[e]);delete this.asyncWritePromise})),this.asyncWritePromise}startAccessor(e){if(this.accessorIndex>=0)throw new Error("Accessor was started without ending the previous one");this.accessorIndex=this.data.length,this.accessorAttribute=e;const t=this.numComponentsForDataType;this.accessorMin=new Array(t),this.accessorMax=new Array(t)}endAccessor(){if(this.accessorIndex<0)throw new Error("An accessor was not started, but was attempted to be ended");const e=this._getElementSize(),t=this.numComponentsForDataType,s=(this.data.length-this.accessorIndex)/t;if(s%1)throw new Error("An accessor was ended with missing component values");for(let e=0;e<this.accessorMin.length;++e)"number"!=typeof this.accessorMin[e]&&(this.accessorMin[e]=0),"number"!=typeof this.accessorMax[e]&&(this.accessorMax[e]=0);const r={byteOffset:e*(this.accessorIndex/t),componentType:this.componentType,count:s,type:this.dataType,min:this.accessorMin,max:this.accessorMax,name:this.accessorAttribute};switch(this.accessorAttribute){case"TEXCOORD_0":case"TEXCOORD_1":case"COLOR_0":case"WEIGHTS_0":switch(this.componentType){case T.UNSIGNED_BYTE:case T.UNSIGNED_SHORT:r.normalized=!0}}return this.accessorIndex=-1,this.accessorAttribute=null,this.accessorMin=null,this.accessorMax=null,r}get finalized(){return this.finalizedPromise?this.finalizedPromise:this.isFinalized?this.finalizedPromise=Promise.resolve():this.finalizedPromise=new Promise((e=>this.finalizedPromiseResolve=e))}finalize(){const e=this.bufferView;return new Promise((e=>{const s=this.buffer.getViewFinalizePromises(this);this.asyncWritePromise&&s.push(this.asyncWritePromise),e(t(s))})).then((()=>{this.isFinalized=!0,e.byteOffset=this.getByteOffset(),e.byteLength=this.dataSize,this.finalizedPromiseResolve&&this.finalizedPromiseResolve()}))}_getElementSize(){return this._sizeComponentType()*this.numComponentsForDataType}_sizeComponentType(){switch(this.componentType){case T.BYTE:case T.UNSIGNED_BYTE:return 1;case T.SHORT:case T.UNSIGNED_SHORT:return 2;case T.UNSIGNED_INT:case T.FLOAT:return 4}}_calculateNumComponentsForDataType(){switch(this.dataType){case C.SCALAR:return 1;case C.VEC2:return 2;case C.VEC3:return 3;case C.VEC4:case C.MAT2:return 4;case C.MAT3:return 9;case C.MAT4:return 16}}}class P{constructor(e){this.gltf=e,this.bufferViews=[],this.isFinalized=!1,e.buffers||(e.buffers=[]),this.index=e.buffers.length;const t={byteLength:-1};e.buffers.push(t),this.buffer=t}addBufferView(e,t,s){if(this.finalizePromise)throw new Error("Cannot add buffer view after fiinalizing buffer");const r=new U(this,this.gltf,e,t,s);return this.bufferViews.push(r),r}getByteOffset(e){let t=0;for(const s of this.bufferViews){if(s===e)return t;t+=s.byteSize}throw new Error("Given bufferView was not present in this buffer")}getViewFinalizePromises(e){const t=[];for(const s of this.bufferViews){if(e&&s===e)return t;t.push(s.finalized)}return t}getArrayBuffer(){if(!this.isFinalized)throw new Error("Cannot get ArrayBuffer from Buffer before it is finalized");const e=this._getTotalSize(),t=new ArrayBuffer(e);let s=0;for(const e of this.bufferViews)e.writeOutToBuffer(t,s),s+=e.byteSize;return t}finalize(){if(this.finalizePromise)throw new Error(`Buffer ${this.index} was already finalized`);return this.finalizePromise=new Promise((e=>{e(t(this.getViewFinalizePromises()))})).then((()=>{this.isFinalized=!0;const e=this.getArrayBuffer();this.buffer.byteLength=e.byteLength,this.buffer.uri=e})),this.gltf.extras.promises.push(this.finalizePromise),this.finalizePromise}_getTotalSize(){let e=0;for(const t of this.bufferViews)e+=t.byteSize;return e}}function D(e,t){i(t.normal)&&(t.normal=new Float32Array(t.position.length));const s=e.faces,{position:r,normal:o}=t,n=s.length/3;for(let e=0;e<n;++e){const t=3*s[3*e+0],i=3*s[3*e+1],n=3*s[3*e+2],a=l(G,r[t+0],r[t+1],r[t+2]),h=l(v,r[i+0],r[i+1],r[i+2]),c=l(Y,r[n+0],r[n+1],r[n+2]),f=u(h,h,a),m=u(c,c,a),d=p(f,f,m);o[t+0]+=d[0],o[t+1]+=d[1],o[t+2]+=d[2],o[i+0]+=d[0],o[i+1]+=d[1],o[i+2]+=d[2],o[n+0]+=d[0],o[n+1]+=d[1],o[n+2]+=d[2]}for(let e=0;e<o.length;e+=3)l(k,o[e],o[e+1],o[e+2]),m(k,k),o[e+0]=k[0],o[e+1]=k[1],o[e+2]=k[2]}const G=d(),v=d(),Y=d(),k=d();class H{constructor(e,t,s){this.params={},this.materialMap=new Array,this.imageMap=new Map,this.textureMap=new Map,this.gltf={asset:{version:"2.0",copyright:e.copyright,generator:e.generator},extras:{options:t,binChunkBuffer:null,promises:[]}},s&&(this.params=s),this._addScenes(e)}_addScenes(e){this.gltf.scene=e.defaultScene;const t=this.gltf.extras.options.bufferOutputType===B.GLB||this.gltf.extras.options.imageOutputType===j.GLB;t&&(this.gltf.extras.binChunkBuffer=new P(this.gltf)),e.forEachScene((e=>{this._addScene(e)})),t&&this.gltf.extras.binChunkBuffer.finalize()}_addScene(e){this.gltf.scenes||(this.gltf.scenes=[]);const t={};e.name&&(t.name=e.name),e.forEachNode((e=>{t.nodes||(t.nodes=[]);const s=this._addNode(e);t.nodes.push(s)})),this.gltf.scenes.push(t)}_addNode(e){this.gltf.nodes||(this.gltf.nodes=[]);const t={};e.name&&(t.name=e.name);const s=e.translation;g(s,E)||(t.translation=w(s));const r=e.rotation;n(r,h)||(t.rotation=c(r));const i=e.scale;g(i,A)||(t.scale=w(i)),e.mesh&&e.mesh.vertexAttributes.position?t.mesh=this._addMesh(e.mesh):e.forEachNode((e=>{t.children||(t.children=[]);const s=this._addNode(e);t.children.push(s)}));const o=this.gltf.nodes.length;return this.gltf.nodes.push(t),o}_addMesh(e){this.gltf.meshes||(this.gltf.meshes=[]);const t={primitives:[]},r=this.gltf.extras.options.bufferOutputType===B.GLB;let i;i=r?this.gltf.extras.binChunkBuffer:new P(this.gltf),this.params.origin||(this.params.origin=function(e){if(o(e.transform))return e.transform.getOriginPoint(e.spatialReference);const t=e.extent.xmax-e.extent.width/2,r=e.extent.ymax-e.extent.height/2,i=e.extent.zmin;return new s({x:t,y:r,z:i,spatialReference:e.extent.spatialReference})}(e));const n=_(e.vertexAttributes,e.transform,this.params.origin,{geographic:this.params.geographic,unit:"meters"});!function(e,t){if(e.components)for(const s of e.components)s.faces&&"smooth"===s.shading&&D(s,t)}(e,n),this._flipYZAxis(n);const a=i.addBufferView(T.FLOAT,C.VEC3,I.ARRAY_BUFFER);let h,c,f,l;n.normal&&(h=i.addBufferView(T.FLOAT,C.VEC3,I.ARRAY_BUFFER)),e.vertexAttributes.uv&&(c=i.addBufferView(T.FLOAT,C.VEC2,I.ARRAY_BUFFER)),n.tangent&&(f=i.addBufferView(T.FLOAT,C.VEC4,I.ARRAY_BUFFER)),e.vertexAttributes.color&&(l=i.addBufferView(T.UNSIGNED_BYTE,C.VEC4,I.ARRAY_BUFFER)),a.startAccessor("POSITION"),h&&h.startAccessor("NORMAL"),c&&c.startAccessor("TEXCOORD_0"),f&&f.startAccessor("TANGENT"),l&&l.startAccessor("COLOR_0");const u=n.position.length/3,{position:p,normal:m,tangent:d}=n,{color:g,uv:E}=e.vertexAttributes;for(let e=0;e<u;++e)a.push(p[3*e+0]),a.push(p[3*e+1]),a.push(p[3*e+2]),h&&o(m)&&(h.push(m[3*e+0]),h.push(m[3*e+1]),h.push(m[3*e+2])),c&&o(E)&&(c.push(E[2*e+0]),c.push(E[2*e+1])),f&&o(d)&&(f.push(d[4*e+0]),f.push(d[4*e+1]),f.push(d[4*e+2]),f.push(d[4*e+3])),l&&o(g)&&(l.push(g[4*e+0]),l.push(g[4*e+1]),l.push(g[4*e+2]),l.push(g[4*e+3]));const w=a.endAccessor(),A=this._addAccessor(a.index,w);let y,b,x,R,N;if(h){const e=h.endAccessor();y=this._addAccessor(h.index,e)}if(c){const e=c.endAccessor();b=this._addAccessor(c.index,e)}if(f){const e=f.endAccessor();x=this._addAccessor(f.index,e)}if(l){const e=l.endAccessor();R=this._addAccessor(l.index,e)}e.components&&e.components.length>0&&e.components[0].faces?(N=i.addBufferView(T.UNSIGNED_INT,C.SCALAR,I.ELEMENT_ARRAY_BUFFER),this._addMeshVertexIndexed(N,e.components,t,A,y,b,x,R)):this._addMeshVertexNonIndexed(e.components,t,A,y,b,x,R),a.finalize(),h&&h.finalize(),c&&c.finalize(),f&&f.finalize(),N&&N.finalize(),l&&l.finalize(),r||i.finalize();const S=this.gltf.meshes.length;return this.gltf.meshes.push(t),S}_flipYZAxis({position:e,normal:t,tangent:s}){this._flipYZBuffer(e,3),this._flipYZBuffer(t,3),this._flipYZBuffer(s,4)}_flipYZBuffer(e,t){if(!i(e))for(let s=1,r=2;s<e.length;s+=t,r+=t){const t=e[s],i=e[r];e[s]=i,e[r]=-t}}_addMaterial(e){if(null===e)return;const t=this.materialMap.indexOf(e);if(-1!==t)return t;this.gltf.materials||(this.gltf.materials=[]);const s={};switch(e.alphaMode){case"mask":s.alphaMode=z.MASK;break;case"auto":case"blend":s.alphaMode=z.BLEND}.5!==e.alphaCutoff&&(s.alphaCutoff=e.alphaCutoff),e.doubleSided&&(s.doubleSided=e.doubleSided),s.pbrMetallicRoughness={};const r=e=>e**2.1,i=e=>{const t=e.toRgba();return t[0]=r(t[0]/255),t[1]=r(t[1]/255),t[2]=r(t[2]/255),t};if(o(e.color)&&(s.pbrMetallicRoughness.baseColorFactor=i(e.color)),o(e.colorTexture)&&(s.pbrMetallicRoughness.baseColorTexture={index:this._addTexture(e.colorTexture)}),o(e.normalTexture)&&(s.normalTexture={index:this._addTexture(e.normalTexture)}),e instanceof y){if(o(e.emissiveTexture)&&(s.emissiveTexture={index:this._addTexture(e.emissiveTexture)}),o(e.emissiveColor)){const t=i(e.emissiveColor);s.emissiveFactor=[t[0],t[1],t[2]]}o(e.occlusionTexture)&&(s.occlusionTexture={index:this._addTexture(e.occlusionTexture)}),o(e.metallicRoughnessTexture)&&(s.pbrMetallicRoughness.metallicRoughnessTexture={index:this._addTexture(e.metallicRoughnessTexture)}),s.pbrMetallicRoughness.metallicFactor=e.metallic,s.pbrMetallicRoughness.roughnessFactor=e.roughness}else s.pbrMetallicRoughness.metallicFactor=1,s.pbrMetallicRoughness.roughnessFactor=1;const n=this.gltf.materials.length;return this.gltf.materials.push(s),this.materialMap.push(e),n}_addTexture(e){return this.gltf.textures||(this.gltf.textures=[]),r(this.textureMap,e,(()=>{const t={sampler:this._addSampler(e),source:this._addImage(e)},s=this.gltf.textures.length;return this.gltf.textures.push(t),s}))}_addImage(e){const t=this.imageMap.get(e);if(null!=t)return t;this.gltf.images||(this.gltf.images=[]);const s={};if(e.url)s.uri=e.url;else{s.extras=e.data;for(let t=0;t<this.gltf.images.length;++t)if(e.data===this.gltf.images[t].extras)return t;switch(this.gltf.extras.options.imageOutputType){case j.GLB:{const t=this.gltf.extras.binChunkBuffer.addBufferView(T.UNSIGNED_BYTE,C.SCALAR),r=x(e.data).then((({data:e,type:t})=>(s.mimeType=t,e)));t.writeAsync(r).then((()=>{t.finalize()})),s.bufferView=t.index;break}case j.DataURI:s.uri=R(e.data);break;default:this.gltf.extras.promises.push(x(e.data).then((({data:e,type:t})=>{s.uri=e,s.mimeType=t})))}}const r=this.gltf.images.length;return this.gltf.images.push(s),this.imageMap.set(e,r),r}_addSampler(e){this.gltf.samplers||(this.gltf.samplers=[]);let t=b.REPEAT,s=b.REPEAT;if("string"==typeof e.wrap)switch(e.wrap){case"clamp":t=b.CLAMP_TO_EDGE,s=b.CLAMP_TO_EDGE;break;case"mirror":t=b.MIRRORED_REPEAT,s=b.MIRRORED_REPEAT}else{switch(e.wrap.vertical){case"clamp":s=b.CLAMP_TO_EDGE;break;case"mirror":s=b.MIRRORED_REPEAT}switch(e.wrap.horizontal){case"clamp":t=b.CLAMP_TO_EDGE;break;case"mirror":t=b.MIRRORED_REPEAT}}const r={wrapS:t,wrapT:s};for(let e=0;e<this.gltf.samplers.length;++e)if(JSON.stringify(r)===JSON.stringify(this.gltf.samplers[e]))return e;const i=this.gltf.samplers.length;return this.gltf.samplers.push(r),i}_addAccessor(e,t){this.gltf.accessors||(this.gltf.accessors=[]);const s={bufferView:e,byteOffset:t.byteOffset,componentType:t.componentType,count:t.count,type:t.type,min:t.min,max:t.max,name:t.name};t.normalized&&(s.normalized=!0);const r=this.gltf.accessors.length;return this.gltf.accessors.push(s),r}_addMeshVertexIndexed(e,t,s,r,i,o,n,a){for(const h of t){e.startAccessor("INDICES");for(let t=0;t<h.faces.length;++t)e.push(h.faces[t]);const t=e.endAccessor(),c={attributes:{POSITION:r},indices:this._addAccessor(e.index,t),material:this._addMaterial(h.material)};i&&"flat"!==h.shading&&(c.attributes.NORMAL=i),o&&(c.attributes.TEXCOORD_0=o),n&&"flat"!==h.shading&&(c.attributes.TANGENT=n),a&&(c.attributes.COLOR_0=a),s.primitives.push(c)}}_addMeshVertexNonIndexed(e,t,s,r,i,o,n){const a={attributes:{POSITION:s}};r&&(a.attributes.NORMAL=r),i&&(a.attributes.TEXCOORD_0=i),o&&(a.attributes.TANGENT=o),n&&(a.attributes.COLOR_0=n),e&&(a.material=this._addMaterial(e[0].material)),t.primitives.push(a)}}class Z{constructor(){this.copyright="",this.defaultScene=0,this.generator="",this._scenes=[]}addScene(e){if(this._scenes.includes(e))throw new Error("Scene already added");this._scenes.push(e)}removeScene(e){O(this._scenes,e)}forEachScene(e){this._scenes.forEach(e)}}class J{constructor(){this.name="",this._nodes=[]}addNode(e){if(this._nodes.includes(e))throw new Error("Node already added");this._nodes.push(e)}forEachNode(e){this._nodes.forEach(e)}}class W{constructor(e){this.mesh=e,this.name="",this.translation=d(),this.rotation=f(),this.scale=w(A),this._nodes=[]}addNode(e){if(this._nodes.includes(e))throw new Error("Node already added");this._nodes.push(e)}forEachNode(e){this._nodes.forEach(e)}set rotationAngles(e){a(this.rotation,e[0],e[1],e[2])}}class K{constructor(e,t){this._file={type:"model/gltf-binary",data:e},this.origin=t}buffer(){return Promise.resolve(this._file)}download(t){e(new Blob([this._file.data],{type:this._file.type}),t)}}function q(e,r){const i=new Z,o=new J;return i.addScene(o),o.addNode(new W(e)),function(e,r){return function(e,r,i){const o=new H(e,r=r||{},i);let n=o.params;n?n.origin||(n.origin=new s({x:-1,y:-1,z:-1})):n={origin:new s({x:-1,y:-1,z:-1})};const a=n.origin,h=o.gltf,c=h.extras.promises;let f=1,l=1,u=null;return t(c).then((()=>{const e={origin:a};delete h.extras;const t="number"==typeof r.jsonSpacing?r.jsonSpacing:4,s=JSON.stringify(h,((t,s)=>{if("extras"!==t){if(s instanceof ArrayBuffer){if(N(s))switch(r.imageOutputType){case j.DataURI:case j.GLB:break;case j.External:default:{const t=`img${l}.png`;return l++,e[t]=s,t}}switch(r.bufferOutputType){case B.DataURI:return S(s);case B.GLB:if(u)throw new Error("Already encountered an ArrayBuffer, there should only be one in the GLB format.");return void(u=s);case B.External:default:{const t=`data${f}.bin`;return f++,e[t]=s,t}}}return s}}),t);return r.bufferOutputType===B.GLB||r.imageOutputType===j.GLB?e["model.glb"]=new F(s,u).buffer:e["model.gltf"]=s,e}))}(e,{bufferOutputType:B.GLB,imageOutputType:j.GLB,jsonSpacing:0},r)}(i,r).then((e=>new K(e["model.glb"],e.origin)))}export{q as toBinaryGLTF};
