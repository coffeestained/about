/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{_ as e}from"./tslib.es6.js";import t from"../core/Accessor.js";import{r}from"../core/lang.js";import{HandleOwnerMixin as o}from"../core/HandleOwner.js";import{i as s,a as i}from"./maybe.js";import{eachAlwaysValues as p,createTask as n}from"../core/promiseUtils.js";import{property as a}from"../core/accessorSupport/decorators/property.js";import"./ensureType.js";import{subclass as m}from"../core/accessorSupport/decorators/subclass.js";import l from"../geometry/Polygon.js";import{initializeProjection as c,canProjectWithoutEngine as d,project as u}from"../geometry/projection.js";import{a as j}from"./normalizeUtilsSync.js";import{f as h}from"./typeUtils.js";import{b as g}from"./featureConversionUtils.js";import{a as y}from"./OptimizedGeometry.js";import{F as f}from"./FeatureStore.js";import{Q as S}from"./QueryEngine.js";import{s as v}from"./RightAngleSnappingHint.js";import{c as _}from"./queryEngineUtils.js";import"./get.js";import"./utils.js";import"./handleUtils.js";import"./metadata.js";import"./Logger.js";import"../config.js";import"./object.js";import"./string.js";import"./ArrayPool.js";import"./tracking.js";import"./watch.js";import"../core/scheduling.js";import"./nextTick.js";import"../core/Error.js";import"../core/Handles.js";import"../core/Collection.js";import"../core/Evented.js";import"./shared.js";import"./SimpleObservable.js";import"../core/reactiveUtils.js";import"./writer.js";import"../geometry/Extent.js";import"../geometry/Geometry.js";import"../core/JSONSupport.js";import"./reader.js";import"../geometry/SpatialReference.js";import"../geometry/Point.js";import"../core/accessorSupport/decorators/cast.js";import"../geometry/support/webMercatorUtils.js";import"./Ellipsoid.js";import"./extentUtils.js";import"./zmUtils.js";import"./mathUtils.js";import"./common.js";import"./unitUtils.js";import"./jsonMap.js";import"./projectionEllipsoid.js";import"./mat4.js";import"../geometry/Multipoint.js";import"./pe.js";import"./assets.js";import"../request.js";import"../kernel.js";import"../core/urlUtils.js";import"../geometry/Polyline.js";import"./aaBoundingRect.js";import"./geodesicConstants.js";import"../geometry/support/GeographicTransformation.js";import"../geometry/support/GeographicTransformationStep.js";import"./zscale.js";import"../geometry/support/jsonUtils.js";import"./normalizeUtilsCommon.js";import"./OptimizedFeatureSet.js";import"./aaBoundingBox.js";import"./BoundsStore.js";import"./PooledRBush.js";import"./quickselect.js";import"./optimizedFeatureQueryEngineAdapter.js";import"./centroid.js";import"./MemCache.js";import"../geometry/support/normalizeUtils.js";import"../geometry.js";import"./QueryEngineResult.js";import"./quantizationUtils.js";import"./ItemCache.js";import"../core/sql/WhereClause.js";import"./_commonjsHelpers.js";import"./utils11.js";import"./generateRendererUtils.js";import"./colorRamps.js";import"../rest/support/AlgorithmicColorRamp.js";import"../Color.js";import"./colorUtils.js";import"./enumeration.js";import"../rest/support/ColorRamp.js";import"../rest/support/MultipartColorRamp.js";import"../symbols/Symbol.js";import"./projectionSupport.js";import"./json.js";import"./utils18.js";import"../layers/support/fieldUtils.js";import"./arcadeOnDemand.js";import"./QueryEngineCapabilities.js";import"./timeSupport.js";import"../layers/support/FieldsIndex.js";import"./Scheduler.js";import"./debugFlags.js";import"./vec2.js";import"./SnappingManager.js";import"./vec2f64.js";import"./Settings2.js";import"./geometry2dUtils.js";import"./viewUtils.js";import"./screenUtils.js";import"./elevationInfoUtils.js";import"./unitConversionUtils.js";import"./lengthUtils.js";import"../views/interactive/snapping/SnappingOptions.js";import"../views/interactive/snapping/FeatureSnappingLayerSource.js";import"./VertexSnappingCandidate.js";import"./PointSnappingHint.js";let w=class extends(o(t)){constructor(e){super(e),this.availability=1,this.sources={multipoint:null,point:null,polygon:null,polyline:null},this.loadedWkids=new Set,this.loadedWkts=new Set,this.pendingAdds=[]}get updating(){return this.updatingHandles.updating}get layer(){return this.layerSource.layer}destroy(){const e=this.pendingAdds;this.pendingAdds.length=0;for(const t of e)t.task.abort();this._mapSources((e=>this._destroySource(e)))}initialize(){this.handles.add([this.layer.on("graphic-update",(e=>this._onGraphicUpdate(e))),this.updatingHandles.addOnCollectionChange((()=>this.layer.graphics),(e=>this._onGraphicsChanged(e)))]),this._addMany(this.layer.graphics.toArray())}async fetchCandidates(e,t){const r=await p(this._mapSources((r=>r.queryEngine.executeQueryForSnapping({point:e.coordinateHelper.vectorToPoint(e.point).toJSON(),distance:e.distance,types:e.types,query:s(e.filter)?e.filter.createQuery().toJSON():{where:"1=1"}},t).then((({candidates:e})=>e))))),o=r.flat().map((t=>_(t,e.coordinateHelper,e.elevationInfo)));return v(e.point,o),o}refresh(){}_onGraphicUpdate(e){switch(e.property){case"geometry":case"visible":this._remove(e.graphic),this._addMany([e.graphic])}}_onGraphicsChanged(e){for(const t of e.removed)this._remove(t);this._addMany(e.added)}_addMany(e){const t=[],r=new Map;for(const o of e)i(o.geometry)||(this._needsInitializeProjection(o.geometry.spatialReference)?(t.push(o.geometry.spatialReference),r.set(o.uid,o)):this._add(o));this._createPendingAdd(t,r)}_createPendingAdd(e,t){if(!e.length)return;const o=n((async r=>{await c(e.map((e=>({source:e,dest:this.spatialReference}))),{signal:r}),this._markLoadedSpatialReferences(e);for(const[,e]of t)this._add(e)}));this.updatingHandles.addPromise(o.promise);const s={task:o,graphics:t},i=()=>r(this.pendingAdds,s);o.promise.then(i,i),this.pendingAdds.push(s)}_markLoadedSpatialReferences(e){for(const t of e)null!=t.wkid&&this.loadedWkids.add(t.wkid),null!=t.wkt&&this.loadedWkts.add(t.wkt)}_add(e){if(i(e.geometry)||!e.visible)return;let t=e.geometry;if("mesh"===t.type)return;"extent"===t.type&&(t=l.fromExtent(t));const r=this._ensureSource(t.type);if(i(r))return;const o=this._createOptimizedFeature(e.uid,t);s(o)&&r.featureStore.add(o)}_needsInitializeProjection(e){return!(null!=e.wkid&&this.loadedWkids.has(e.wkid)||null!=e.wkt&&this.loadedWkts.has(e.wkt)||d(e,this.spatialReference))}_createOptimizedFeature(e,t){const r=u(j(t),this.spatialReference);return r?new y(g(r,!1,!1),{[U]:e},null,e):null}_ensureSource(e){const t=this.sources[e];if(s(t))return t;const r=this._createSource(e);return this.sources[e]=r,r}_createSource(e){const t=h.toJSON(e),r=new f({geometryType:t,hasZ:!1,hasM:!1});return{featureStore:r,queryEngine:new S({featureStore:r,fields:[{name:U,type:"esriFieldTypeOID",alias:U}],geometryType:t,hasM:!1,hasZ:!1,objectIdField:U,spatialReference:this.spatialReference,scheduler:s(this.view)&&"3d"===this.view.type?this.view.resourceController.scheduler:null}),type:e}}_remove(e){this._mapSources((t=>this._removeFromSource(t,e)));for(const t of this.pendingAdds)t.graphics.delete(e.uid),0===t.graphics.size&&t.task.abort()}_removeFromSource(e,t){const r=t.uid;e.featureStore.has(r)&&e.featureStore.removeById(t.uid)}_destroySource(e){e.queryEngine.destroy(),this.sources[e.type]=null}_mapSources(e){const{point:t,polygon:r,polyline:o,multipoint:i}=this.sources,p=[];return s(t)&&p.push(e(t)),s(r)&&p.push(e(r)),s(o)&&p.push(e(o)),s(i)&&p.push(e(i)),p}};e([a({constructOnly:!0})],w.prototype,"spatialReference",void 0),e([a({constructOnly:!0})],w.prototype,"layerSource",void 0),e([a({constructOnly:!0})],w.prototype,"view",void 0),e([a({readOnly:!0})],w.prototype,"updating",null),e([a({readOnly:!0})],w.prototype,"availability",void 0),w=e([m("esri.views.interactive.snapping.featureSources.GraphicsSnappingSource")],w);const U="OBJECTID";export{w as GraphicsSnappingSource};
