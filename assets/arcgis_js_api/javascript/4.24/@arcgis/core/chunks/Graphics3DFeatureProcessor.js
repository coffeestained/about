/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{_ as e}from"./tslib.es6.js";import t from"../Graphic.js";import{n as i}from"./compilerUtils.js";import{HandleOwner as s}from"../core/HandleOwner.js";import{i as r,a as n,d as a,u as o}from"./maybe.js";import{isAbortError as l,logOnError as u}from"../core/promiseUtils.js";import{on as h,watch as p,initial as d,when as c}from"../core/reactiveUtils.js";import{property as y}from"../core/accessorSupport/decorators/property.js";import"../core/lang.js";import"./ensureType.js";import{subclass as g}from"../core/accessorSupport/decorators/subclass.js";import{d as m}from"./diffUtils.js";import{canProject as f,project as b}from"../geometry/support/webMercatorUtils.js";import{a as _,V as E,k as w,l as x}from"./ElevationQuery.js";import S from"../rest/support/Query.js";import{a8 as C,a9 as V}from"./lineUtils.js";import{G as v,a as F}from"./Graphics3DScaleVisibility.js";import{a as O,G as I,b as R}from"./Graphics3DObjectStates.js";import j from"../core/Accessor.js";import Q from"../core/Handles.js";import{L as G}from"./Logger.js";import{O as q}from"../core/Collection.js";import A from"../layers/support/FeatureFilter.js";import{a as T}from"./floorFilterUtils.js";import"../geometry.js";import N from"../geometry/Extent.js";import{Q as P}from"./QueryEngine.js";import M from"../rest/support/FeatureSet.js";import{f as H}from"./typeUtils.js";import{T as U}from"./Scheduler.js";import{r as L}from"./CameraSpace.glsl.js";import{a as D}from"./attributeUtils.js";import{U as J,O as k}from"./basicInterfaces.js";const B=P;let z=class extends j{constructor(e){super(e),this._dataQueryEngineInstance=null}get queryGeometryType(){switch(this.layer.geometryType){case"multipoint":case"point":case"polygon":case"polyline":return this.layer.geometryType;case"mesh":return"polygon";default:return}}get defaultQueryJSON(){return new S({outSpatialReference:this.spatialReference}).toJSON()}get dataQueryEngine(){return this._ensureDataQueryEngine()}destroy(){this.clear()}clear(){return!!this._dataQueryEngineInstance&&(this._dataQueryEngineInstance.destroy(),this._dataQueryEngineInstance=null,!0)}async executeQueryForIdSet(e,t){return this.dataQueryEngine.executeQueryForIdSet(this._ensureQueryJSON(e,t))}async executeQueryForCount(e,t){return this.dataQueryEngine.executeQueryForCount(this._ensureQueryJSON(e),t)}async executeQueryForExtent(e,t){const{count:i,extent:s}=await this.dataQueryEngine.executeQueryForExtent(this._ensureQueryJSON(e),t);return{count:i,extent:N.fromJSON(s)}}async executeQueryForIds(e,t){return this.dataQueryEngine.executeQueryForIds(this._ensureQueryJSON(e),t)}async executeQueryForLatestObservations(e,t){const i=await this.dataQueryEngine.executeQueryForLatestObservations(this._ensureQueryJSON(e),t),s=M.fromJSON(i);return s.features.forEach((e=>{e.layer=this.layer,e.sourceLayer=this.layer})),s}async executeQuery(e,t){const i=await this.dataQueryEngine.executeQuery(this._ensureQueryJSON(e),t),s=M.fromJSON(i);return s.features.forEach((e=>{e.layer=this.layer,e.sourceLayer=this.layer})),s}_ensureQueryJSON(e,t){let i=this.defaultQueryJSON;return r(e)&&("outSpatialReference"in e&&!e.outSpatialReference&&(e.outSpatialReference=this.spatialReference),i=e.toJSON()),r(t)&&(i={...i,sceneFilter:{...t,geometry:t.geometry.toJSON()}}),i}_ensureDataQueryEngine(){if(this._dataQueryEngineInstance)return this._dataQueryEngineInstance;const e="timeInfo"in this.layer&&this.layer.timeInfo&&this.layer.timeInfo.toJSON()||null,t=this.layer.objectIdField,i=H.toJSON(this.queryGeometryType),s=this.layer.fields.map((e=>e.toJSON())),r=this.layerView.view.resourceController.scheduler,n=this.priority,a=this.spatialReference.toJSON(),o=this.layerView.processor.featureStore,{hasZ:l,hasM:u}=this.layerView;return this._dataQueryEngineInstance=new B({hasZ:l,hasM:u,geometryType:i,fields:s,timeInfo:e,spatialReference:a,objectIdField:t,featureStore:o,scheduler:r,priority:n}),this._dataQueryEngineInstance}};e([y({constructOnly:!0})],z.prototype,"layerView",void 0),e([y({constructOnly:!0})],z.prototype,"priority",void 0),e([y({readOnly:!0,aliasOf:"layerView.view.spatialReference"})],z.prototype,"spatialReference",void 0),e([y({readOnly:!0,aliasOf:"layerView.layer"})],z.prototype,"layer",void 0),e([y({readOnly:!0})],z.prototype,"queryGeometryType",null),e([y({readOnly:!0})],z.prototype,"defaultQueryJSON",null),z=e([g("esri.views.3d.layers.graphics.QueryEngine")],z);const Z=G.getLogger("esri.views.3d.layers.graphics.Graphics3DFilterVisibility");let Y=class extends j{constructor(...e){super(...e),this._dirty=!1,this._querying=!1,this._handles=new Q}get updating(){return this._dirty||this._querying||r(this._queryResult)}setup(e,t){this._layerView=e,this._core=t,this._objectIdField=e.layer.objectIdField,this._queryEngine=new z({layerView:this._layerView,priority:U.FILTER_VISIBILITY});const i=this._layerView.view.resourceController.scheduler;this._handles.add(i.registerTask(U.FILTER_VISIBILITY,this)),this._handles.add(h((()=>t.owner?.loadedGraphics),"after-changes",(e=>this._graphicsChanged(e)),{onListenerAdd:()=>this.dirty=!0})),this.filterChanged()}destroy(){this._handles.destroy(),this._handles=null,this.clear(),this._layerView=null,this._core=null}clear(){this._queryEngine.clear()&&(this._core.modifyGraphics3DGraphicVisibilities((e=>e.clearVisibilityFlag(_.FILTER))),this._queryResult=null,this._querying=!1),this.dirty=!1}_graphicsChanged(e){this._queryEngine&&0==(e.type&q.ADD)||(this.dirty=!0)}updateVisibility(e){this.active&&(e.hasVisibilityFlag(_.FILTER,E.GRAPHIC)||e.setVisibilityFlag(_.FILTER,!1,E.GRAPHIC),this.dirty=!0)}filterChanged(){const e=this._recomputeFilter();e!==this._featureFilter&&(this._featureFilter=e,this.dirty=!0);const t="layerFilter"in this._layerView?this._layerView.layerFilter:null;t!==this._sceneFilter&&(this._sceneFilter=t,this.dirty=!0)}get active(){return(this._featureFilter||this._sceneFilter)&&this._core.graphics3DGraphics.size>0}_recomputeFilter(){const e="filter"in this._layerView?this._layerView.filter:null,t="timeExtent"in this._layerView?this._layerView.timeExtent:null,i=T(this._layerView);if(n(t)&&n(i))return e;const s=r(e)?e.clone():new A;if(r(t)&&(s.timeExtent=r(s.timeExtent)?s.timeExtent.intersection(t):t),r(i)){const e=null==s.where||""===s.where;s.where=e?i:`(${s.where}) AND (${i})`}return s}get running(){return this._dirty&&!this._querying||r(this._queryResult)}runTask(e){if(!this.active)return void this.clear();!this._dirty||this._querying||e.done||(this._querying=!0,this.dirty=!1,this._queryEngine.executeQueryForIdSet(this._featureFilter,this._sceneFilter).then((e=>{this._queryResult=e,this._querying=!1})).catch((e=>{if(!l(e)){Z.warn("FeatureFilter query failed: "+e,{error:e});const t=new Set;this._core.graphics3DGraphics.forEach((e=>t.add(this._getFeatureId(e.graphic)))),this._queryResult=t,this._querying=!1}})),e.madeProgress());const t=this._queryResult;r(t)&&!e.done&&(this._core.modifyGraphics3DGraphicVisibilities((i=>{if(e.done)return!1;const s=t.has(this._getFeatureId(i.graphic));return!!i.setVisibilityFlag(_.FILTER,s,E.GRAPHIC)&&(e.madeProgress(),!0)})),e.done||(this._queryResult=null))}_getFeatureId(e){return null==e.objectId?e.attributes[this._objectIdField]:e.objectId}set dirty(e){this._dirty=e}};e([y({readOnly:!0})],Y.prototype,"updating",null),e([y({readOnly:!0})],Y.prototype,"running",null),e([y()],Y.prototype,"_dirty",void 0),e([y()],Y.prototype,"_querying",void 0),e([y()],Y.prototype,"_queryResult",void 0),Y=e([g("esri.views.3d.layers.graphics.Graphics3DFilterVisibility")],Y);let $=class extends s{constructor(e){super(e),this.type="graphics-3d",this.elevationFeatureExpressionEnabled=!1,this.dataExtent=null,this.drapeSourceType=C.Features,this.preferredUpdatePolicy=J.ASYNC,this.suspendResumeExtent=null}normalizeCtorArgs(e){const t=e.frustumVisibilityEnabled?new O:null,i=e.scaleVisibilityEnabled?new v:null,s=(e.filterVisibilityEnabled||e.timeExtentEnabled)&&"multipatch"!==e.owner.layer.geometryType?new Y:null,r=e.elevationAlignmentEnabled?new I:null,{owner:n,updateClippingExtent:a,dataExtent:o,elevationFeatureExpressionEnabled:l,preferredUpdatePolicy:u}=e;return{owner:n,updateClippingExtent:a,dataExtent:o,frustumVisibility:t,scaleVisibility:i,filterVisibility:s,elevationAlignment:r,elevationFeatureExpressionEnabled:l,preferredUpdatePolicy:u}}initialize(){const e=new F({owner:this,layer:this.layer,preferredUpdatePolicy:this.preferredUpdatePolicy,elevationFeatureExpressionEnabled:this.elevationFeatureExpressionEnabled,graphicSymbolSupported:!1,hasZ:this.owner.hasZ,hasM:this.owner.hasM});this._set("graphicsCore",e),this.scaleVisibility&&this.updatingHandles.add((()=>this.layer.effectiveScaleRange),(()=>this.scaleVisibility.layerMinMaxScaleChangeHandler()));const t=this.filterVisibility;r(t)&&(this.updatingHandles.add((()=>"filter"in this.owner&&this.owner.filter),(()=>t.filterChanged())),this.updatingHandles.add((()=>"timeExtent"in this.owner&&this.owner.timeExtent),(()=>t.filterChanged())),this.updatingHandles.add((()=>"layerFilter"in this.owner&&this.owner.layerFilter),(()=>t.filterChanged()))),this.elevationAlignment&&this.updatingHandles.add((()=>this.layer.elevationInfo),((e,t)=>{m(e,t)&&this.updatingHandles.addPromise(this.graphicsCore.elevationInfoChange())})),this.updatingHandles.add((()=>this.layer.labelsVisible),(()=>this.graphicsCore.updateVisibilityInfo())),this.updatingHandles.add((()=>this.layer.labelingInfo),((e,t)=>{m(e,t)&&this.graphicsCore.updateLabelingInfo()})),this.updatingHandles.add((()=>this.preferredUpdatePolicy),(e=>this.graphicsCore.preferredUpdatePolicy=e))}destroy(){this.handles.removeAll(),this.updatingHandles.removeAll(),this._set("frustumVisibility",a(this.frustumVisibility)),this._set("scaleVisibility",a(this.scaleVisibility)),this._set("filterVisibility",a(this.filterVisibility)),this._set("elevationAlignment",a(this.elevationAlignment)),this._set("objectStates",a(this.objectStates)),this._set("graphicsCore",a(this.graphicsCore)),this._set("owner",null)}get layer(){return this.owner.layer}get suspendResumeExtentMode(){return"suspendResumeExtentMode"in this.owner?this.owner.suspendResumeExtentMode:"computed"}get scaleVisibilitySuspended(){return this.scaleVisibility?.suspended}get suspended(){return this.owner.suspended}get legendEnabled(){return n(this.frustumVisibility)||!this.frustumVisibility.suspended}get suspendInfo(){const e={};return this.scaleVisibility?.suspended&&(e.outsideScaleRange=!0),r(this.frustumVisibility)&&this.frustumVisibility.suspended&&(e.outsideOfView=!0),e}get updating(){return!!(this.graphicsCore?.updating||r(this.frustumVisibility)&&this.frustumVisibility.updating||this.updatingHandles?.updating)}get updatingRemaining(){return this.graphicsCore?.updatingRemaining??0}get featureStore(){return this.graphicsCore?.featureStore}get view(){return this.owner.view}get loadedGraphics(){return this.owner.loadedGraphics}get fullOpacity(){return this.owner?.fullOpacity}get filter(){return"filter"in this.owner?this.owner.filter:null}get slicePlaneEnabled(){return this.owner.slicePlaneEnabled}get updatePolicy(){return this.owner.updatePolicy}get featureSpatialReference(){return"featureSpatialReference"in this.owner?this.owner.featureSpatialReference:this.owner.view.spatialReference}get graphics3DGraphics(){return this.graphicsCore?.graphics3DGraphics}get graphics3DGraphicsByObjectID(){return this.graphicsCore?.graphics3DGraphicsByObjectID}get symbolUpdateType(){return this.graphicsCore?.symbolUpdateType}get displayFeatureLimit(){const e=this.view.resourceController.memoryController.memoryFactor,t=this.graphicsCore?.displayFeatureLimit;if(1===e)return t;const i=Math.ceil(t.maximumNumberOfFeatures*e),s=Math.ceil(t.maximumTotalNumberOfFeatures*e),r=Math.ceil(t.minimumTotalNumberOfFeatures*e);return{...t,maximumNumberOfFeatures:i,maximumTotalNumberOfFeatures:s,minimumTotalNumberOfFeatures:r}}get usedMemory(){return this.graphicsCore?.usedMemory??0}get usedMemoryPerFeature(){return this.graphicsCore?.usedMemoryPerGraphic??0}get unprocessedMemoryEstimate(){return this.graphicsCore?.unprocessedMemoryEstimate??0}get performanceInfo(){return{core:this.graphicsCore.performanceInfo,elevationUpdating:this.elevationAlignment.updating,visibilityFrustum:n(this.frustumVisibility)||!this.frustumVisibility.suspended,visibilityScale:!this.scaleVisibility.suspended}}async setup(){r(this.frustumVisibility)&&this.frustumVisibility.setup(this);const e=this.owner,t=this.owner.view.basemapTerrain,i=(e,t,i)=>this.graphicsCore.spatialIndex.queryGraphicUIDsInExtent(e,t,i);if(this.scaleVisibility&&this.scaleVisibility.setup(this,this.layer,i,this.graphicsCore,t),r(this.filterVisibility)&&("filter"in e||"timeExtent"in e)&&this.filterVisibility.setup(e,this.graphicsCore),this.elevationAlignment){const t=e.view.elevationProvider;this.elevationAlignment.setup(this,i,this.graphicsCore,t)}this._set("objectStates",new R(this.graphicsCore)),this._set("labeling",this.owner.view.labeler.addGraphicsOwner(this.graphicsCore,this.scaleVisibility)),this._set("deconfliction",e.view.deconflictor.addGraphicsOwner(this.graphicsCore)),await u(this.graphicsCore.setup({elevationAlignment:this.elevationAlignment,scaleVisibility:this.scaleVisibility,filterVisibility:this.filterVisibility,deconflictor:this.deconfliction,labeler:this.labeling,objectStates:this.objectStates})),this.updatingHandles.add((()=>this.layer.renderer),(e=>this.updatingHandles.addPromise(this.graphicsCore.rendererChange(e)))),this.updatingHandles.add((()=>e.fullOpacity),(()=>this.graphicsCore.opacityChange())),this._setupSuspendResumeExtent(),this.updateClippingExtent&&(this.updatingHandles.add((()=>e.view.clippingArea),(()=>this._updateClippingExtent())),this._updateClippingExtent()),this.graphicsCore.startCreateGraphics(),this.graphicsCore.labelsEnabled&&await u(this.graphicsCore.updateLabelingInfo())}maskOccludee(e){const{set:t,handle:i}=this.objectStates.acquireSet(k.MaskOccludee,null);return this.objectStates.setUid(t,e.uid),i}highlight(e,i){if(e instanceof S){const{set:t,handle:s}=this.objectStates.acquireSet(k.Highlight,i);return this.owner.queryObjectIds(e).then((e=>this.objectStates.setObjectIds(t,e))),s}if("number"==typeof e||"string"==typeof e)return this.highlight([e],i);if(e instanceof t)return this.highlight([e],i);if("toArray"in e&&(e=e.toArray()),Array.isArray(e)&&e.length>0){if(e[0]instanceof t){const t=e;if(null==D(this.layer.fieldsIndex,t[0].attributes,i)){const e=t.map((e=>e.uid)),{set:i,handle:s}=this.objectStates.acquireSet(k.Highlight,null);return this.objectStates.setUids(i,e),s}e=t.map((e=>D(this.layer.fieldsIndex,e.attributes,i)))}if("number"==typeof e[0]||"string"==typeof e[0]){const t=e,{set:s,handle:r}=this.objectStates.acquireSet(k.Highlight,i);return this.objectStates.setObjectIds(s,t),r}}return X}whenGraphicBounds(e,t){return this.graphicsCore?.whenGraphicBounds(e,t)}computeAttachmentOrigin(e,t){return this.graphicsCore?.computeAttachmentOrigin(e,t)}notifyGraphicGeometryChanged(e){this.graphicsCore.notifyGraphicGeometryChanged(e)}notifyGraphicVisibilityChanged(e){this.graphicsCore.notifyGraphicVisibilityChanged(e)}getRenderingInfo(e,t,i){const s=w(e,{renderer:t,arcade:i});if(r(s)&&s.color){const e=s.color;e[0]=e[0]/255,e[1]=e[1]/255,e[2]=e[2]/255}return s}getRenderingInfoAsync(e,t,i,s){return x(e,{renderer:t,arcade:i,...s})}getSymbolLayerSize(e,t){return this.graphicsCore?.getSymbolLayerSize(e,t)}setObjectIdVisibility(e,t){this.graphicsCore?.setObjectIdVisibility(e,t)}_updateClippingExtent(){const e=this.owner.view.clippingArea;this.graphicsCore.setClippingExtent(e,this.owner.view.spatialReference)&&(this.updateClippingExtent(e)||this.graphicsCore.recreateAllGraphics())}_setupSuspendResumeExtent(){(this.frustumVisibility||this.scaleVisibility)&&this.handles.add(p((()=>this.suspendResumeExtentMode),(()=>{switch(this.handles.remove(W),this.suspendResumeExtentMode){case"computed":this.handles.add([p((()=>this.graphicsCore.computedExtent),(e=>this._updateSuspendResumeExtent(e)),d),p((()=>this.graphicsCore.extentPadding),(()=>this._updateSuspendResumeExtent(this.graphicsCore.computedExtent)))],W);break;case"data":this.handles.add([c((()=>this.dataExtent),(e=>this._updateSuspendResumeExtent(e)),d),p((()=>this.graphicsCore.extentPadding),(()=>this._updateSuspendResumeExtent(o(this.dataExtent))))],W);break;default:i(this.suspendResumeExtentMode)}}),d))}_updateSuspendResumeExtent(e){e?this._suspendResumeExtentChanged(this._extentToSuspendResumeRect(e,this.suspendResumeExtent)):this._suspendResumeExtentChanged(null)}_extentToSuspendResumeRect(e,t){const i=this.owner.view.spatialReference;if(!e.spatialReference.equals(i)){if(!f(e,i))return;e=b(e,i)}return L(e,t,V,this.graphicsCore.extentPadding)}_suspendResumeExtentChanged(e){r(this.frustumVisibility)&&this.frustumVisibility.setExtent(e),this.scaleVisibility&&this.scaleVisibility.setExtent(e)}};e([y()],$.prototype,"type",void 0),e([y({constructOnly:!0})],$.prototype,"owner",void 0),e([y()],$.prototype,"layer",null),e([y({constructOnly:!0})],$.prototype,"updateClippingExtent",void 0),e([y({constructOnly:!0})],$.prototype,"elevationFeatureExpressionEnabled",void 0),e([y({constructOnly:!0})],$.prototype,"graphicsCore",void 0),e([y({constructOnly:!0})],$.prototype,"scaleVisibility",void 0),e([y({constructOnly:!0})],$.prototype,"filterVisibility",void 0),e([y({constructOnly:!0})],$.prototype,"elevationAlignment",void 0),e([y({constructOnly:!0})],$.prototype,"frustumVisibility",void 0),e([y({readOnly:!0})],$.prototype,"deconfliction",void 0),e([y({readOnly:!0})],$.prototype,"labeling",void 0),e([y({readOnly:!0})],$.prototype,"objectStates",void 0),e([y()],$.prototype,"suspendResumeExtentMode",null),e([y()],$.prototype,"dataExtent",void 0),e([y()],$.prototype,"scaleVisibilitySuspended",null),e([y()],$.prototype,"suspended",null),e([y()],$.prototype,"legendEnabled",null),e([y()],$.prototype,"suspendInfo",null),e([y()],$.prototype,"updating",null),e([y()],$.prototype,"updatingRemaining",null),e([y()],$.prototype,"featureStore",null),e([y()],$.prototype,"view",null),e([y()],$.prototype,"loadedGraphics",null),e([y()],$.prototype,"fullOpacity",null),e([y()],$.prototype,"filter",null),e([y()],$.prototype,"slicePlaneEnabled",null),e([y()],$.prototype,"drapeSourceType",void 0),e([y()],$.prototype,"updatePolicy",null),e([y()],$.prototype,"preferredUpdatePolicy",void 0),e([y()],$.prototype,"displayFeatureLimit",null),$=e([g("esri.views.3d.layers.graphics.Graphics3DFeatureProcessor")],$);const K=$,W="suspendResumeExtentMode",X={remove(){},pause(){},resume(){}};export{K as G,z as Q};
