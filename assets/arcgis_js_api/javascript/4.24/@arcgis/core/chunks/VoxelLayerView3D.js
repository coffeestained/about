/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{_ as e}from"./tslib.es6.js";import s from"../core/Error.js";import t from"../core/Handles.js";import{L as r}from"./Logger.js";import{i,d as o,a}from"./maybe.js";import{watch as l,initial as n}from"../core/reactiveUtils.js";import{property as h}from"../core/accessorSupport/decorators/property.js";import"../core/lang.js";import"./ensureType.js";import{subclass as m}from"../core/accessorSupport/decorators/subclass.js";import{e as d}from"../geometry/SpatialReference.js";import{L as c}from"./LayerView3D.js";import p from"../views/layers/LayerView.js";import{C as u}from"./context-util.js";import"./object.js";import"../config.js";import"./string.js";import"../core/Accessor.js";import"./get.js";import"./utils.js";import"./handleUtils.js";import"./metadata.js";import"./ArrayPool.js";import"./tracking.js";import"./watch.js";import"../core/scheduling.js";import"./nextTick.js";import"../core/promiseUtils.js";import"../core/Collection.js";import"../core/Evented.js";import"./shared.js";import"./SimpleObservable.js";import"../core/JSONSupport.js";import"./writer.js";import"./heightModelInfoUtils.js";import"../geometry/HeightModelInfo.js";import"./jsonMap.js";import"./unitUtils.js";import"./projectionEllipsoid.js";import"./Ellipsoid.js";import"./reader.js";import"./arcgisLayerUrl.js";import"../core/urlUtils.js";import"./persistableUrlUtils.js";import"../core/HandleOwner.js";import"./Identifiable.js";import"../core/Promise.js";var y;!function(e){e[e.API=1]="API",e[e.VerboseAPI=2]="VerboseAPI",e[e.Error=3]="Error"}(y||(y={}));const g=r.getLogger(" esri.views.3d.layers.VoxelLayerView3D");let w=class extends(c(p)){constructor(){super(...arguments),this._usedMemory=0,this._futureMemory=0,this.type="voxel-3d",this._wasmLayerId=-1,this._handles=new t,this._dbgFlags=new Set}get wasmLayerId(){return this._wasmLayerId}initialize(){if("local"!==this.view.viewingMode)throw new s("voxel:unsupported-viewingMode","Voxel layers support local viewingMode only.",{});if(this.view._stage.renderView.renderingContext.type!==u.WEBGL2)throw new s("voxel:unsupported-context","Voxel layers are supported in WebGL2 rendering contexts only.",{});if(!this.view._stage.renderView.renderingContext.capabilities.colorBufferFloat?.textureFloat)throw new s("voxel:missing-color-buffer-float","Voxel layers require the WebGL2 extension EXT_color_buffer_float",{});const e=this.layer.spatialReference;if(!d(e,this.view.spatialReference))throw new s("layerview:spatial-reference-incompatible","The spatial reference of this scene layer is incompatible with the spatial reference of the view",{});const t=this.layer.currentVariableId,r=this.layer.getVolume(t),o=this.layer.getVariable(t);if(i(r)&&i(o)){const e=r.dimensions[0],s=r.dimensions[1],t=r.getZDimension();if(t>1){const i=r.dimensions[t],a=e.size*s.size*i.size;let l=1;switch(o.renderingFormat.type){case"Int16":case"UInt16":l=2;break;case"Int32":case"UInt32":case"Float32":l=4}this._futureMemory=l*a}}const a=this.view.addVoxelLayerViewToWasm(this).then((e=>{this._wasmLayerId=e,this._suspendedHandle=l((()=>this.suspended),(e=>{const s=this.view.voxelWasm;i(s)&&s.setEnabled(this,!e)}),n),this._handles.add([l((()=>this.layer.renderMode),(e=>this._pushRenderModeToWasm(e))),l((()=>this.layer.currentVariableId),(e=>this._pushCurrentVariableIdToWasm(e))),l((()=>this.layer.getDynamicSections()),(e=>this._pushDynamicSectionsToWasm(e))),l((()=>this.layer.getSlices()),(e=>this._pushSlicesToWasm(e))),l((()=>this.layer.getSections()),(e=>this._pushSectionsToWasm(e))),l((()=>this.layer.getVerticalExaggeration()),(e=>this._pushVerticalExaggerationToWasm(e))),l((()=>this.layer.getVerticalOffset()),(e=>this._pushVerticalOffsetToWasm(e)))])})).catch((e=>{if(this.view.removeVoxelLayerViewFromWasm(this),this._wasmLayerId=-1,-1===e)throw new s("voxel:addLayer-failure","The voxel layer description was invalid.",{});if(-2===e)throw new s("voxel:addLayer-failure","The voxel layer web assembly module failed to download.",{})}));this.addResolvingPromise(a)}destroy(){this.view.removeVoxelLayerViewFromWasm(this),this._suspendedHandle&&(this._suspendedHandle.remove(),this._suspendedHandle=null),this._handles=o(this._handles)}isUpdating(){const e=this.view.voxelWasm;return!(this._wasmLayerId<0||!i(e))&&e.isUpdating(this._wasmLayerId)}updatingFlagChanged(){this.notifyChange("updating")}getUsedMemory(){return this._usedMemory}getUnloadedMemory(){return this._futureMemory}ignoresMemoryFactor(){return!0}get performanceInfo(){return{nodes:0,displayedNumberOfFeatures:0,maximumNumberOfFeatures:0,totalNumberOfFeatures:0,core:null}}setUsedMemory(e){this._usedMemory=e,this._futureMemory=0}captureFrustum(){const e=this.view.voxelWasm;i(e)&&e.captureFrustum()}toggleFullVolumeExtentDraw(){const e=this.view.voxelWasm;i(e)&&e.toggleFullVolumeExtentDraw(this)}_pushRenderModeToWasm(e){const s=this.view.voxelWasm;this._dbg(y.VerboseAPI,"VoxelLayerView3D._pushRenderModeToWasm() called, "+(i(s)?"have WASM":"don't have WASM!!!")),i(s)&&s.setRenderMode(this,e)||this._dbg(y.Error,"VoxelLayerView3D._pushRenderModeToWasm() failed!")}_pushSlicesToWasm(e){const s=this.view.voxelWasm;this._dbg(y.VerboseAPI,"VoxelLayerView3D._pushSlicesToWasm() called, "+(i(s)?"have WASM":"don't have WASM!!!")),i(s)&&s.setSlices(this,e)||this._dbg(y.Error,"VoxelLayerView3D._pushSlicesToWasm() failed!")}_pushSectionsToWasm(e){const s=this.view.voxelWasm;this._dbg(y.VerboseAPI,"VoxelLayerView3D._pushSectionsToWasm() called, "+(i(s)?"have WASM":"don't have WASM!!!")),i(s)&&s.setStaticSections(this,e)||this._dbg(y.Error,"VoxelLayerView3D._pushSectionsToWasm() failed!")}_pushDynamicSectionsToWasm(e){const s=this.view.voxelWasm;this._dbg(y.VerboseAPI,"VoxelLayerView3D._pushDynamicSectionsToWasm() called, "+(i(s)?"have WASM":"don't have WASM!!!")),i(s)&&s.setDynamicSections(this,e)||this._dbg(y.Error,"VoxelLayer._updateDynamicSections() failed!")}_pushCurrentVariableIdToWasm(e){const s=this.view.voxelWasm;this._dbg(y.VerboseAPI,"VoxelLayerView3D._pushCurrentVariableIdToWasm() called!, "+(i(s)?"have WASM":"don't have WASM!!!")),i(s)&&s.setCurrentVariable(this,e)||this._dbg(y.Error,"VoxelLayerView3D._pushCurrentVariableIdToWasm() failed!")}_pushVerticalExaggerationToWasm(e){const s=this.layer.getVolumeStyle(null),t=this.view.voxelWasm;this._dbg(y.VerboseAPI,`VoxelLayerView3D._pushVerticalExaggerationToWasm() called, ${i(t)?"have WASM":"don't have WASM!!!"}, ${i(s)?"have style":"don't have style!!!"}`),a(s)||i(t)&&t.setVerticalExaggerationAndOffset(this,s.volumeId,e,s.verticalOffset)||this._dbg(y.Error,"VoxelLayerView3D._pushVerticalExaggerationToWasm() failed!")}_pushVerticalOffsetToWasm(e){const s=this.layer.getVolumeStyle(null),t=this.view.voxelWasm;this._dbg(y.VerboseAPI,`VoxelLayerView3D._pushVerticalOffsetToWasm() called, ${i(t)?"have WASM":"don't have WASM!!!"}, ${i(s)?"have style":"don't have style!!!"}`),a(s)||i(t)&&t.setVerticalExaggerationAndOffset(this,s.volumeId,s.verticalExaggeration,e)||this._dbg(y.Error,"VoxelLayerView3D._pushVerticalOffsetToWasm() failed!")}_dbg(e,s){this._dbgFlags.has(e)&&(e===y.Error?g.error(s):g.warn(s))}};e([h()],w.prototype,"layer",void 0),e([h({readOnly:!0,aliasOf:"layer.parsedUrl.path"})],w.prototype,"baseUrl",void 0),w=e([m("esri.views.3d.layers.VoxelLayerView3D")],w);const f=w;export{f as default};
