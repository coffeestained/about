/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{n as t}from"./nextTick.js";import{B as e}from"./byteSizeEstimations.js";import{c as s,a as i}from"./quatf64.js";import{a as r}from"./mat4f64.js";import{c as h}from"./vec2f64.js";import{E as a}from"./mathUtils.js";import{b as m}from"./vec4f64.js";class f{constructor(t){this.allocator=t,this._items=[],this._itemsPtr=0,this._grow()}get(){return 0===this._itemsPtr&&t((()=>this._reset())),this._itemsPtr===this._items.length&&this._grow(),this._items[this._itemsPtr++]}_reset(){const t=Math.min(3*Math.max(8,this._itemsPtr),this._itemsPtr+3*c);this._items.length=Math.min(t,this._items.length),this._itemsPtr=0}_grow(){for(let t=0;t<Math.max(8,Math.min(this._items.length,c));t++)this._items.push(this.allocator())}}const c=1024;class _{constructor(t,e,s){this.itemByteSize=t,this.itemCreate=e,this._buffers=new Array,this._items=new Array,this._itemsPtr=0,this._itemsPerBuffer=Math.ceil(s/this.itemByteSize)}get(){0===this._itemsPtr&&t((()=>this._reset()));const e=Math.floor(this._itemsPtr/this._itemsPerBuffer);for(;this._buffers.length<=e;){const t=new ArrayBuffer(this._itemsPerBuffer*this.itemByteSize);for(let e=0;e<this._itemsPerBuffer;++e)this._items.push(this.itemCreate(t,e*this.itemByteSize));this._buffers.push(t)}return this._items[this._itemsPtr++]}_reset(){const t=2*(Math.floor(this._itemsPtr/this._itemsPerBuffer)+1);for(;this._buffers.length>t;)this._buffers.pop(),this._items.length=this._buffers.length*this._itemsPerBuffer;this._itemsPtr=0}static createVec2f64(t=o){return new _(16,h,t)}static createVec3f64(t=o){return new _(24,a,t)}static createVec4f64(t=o){return new _(32,m,t)}static createMat3f64(t=o){return new _(72,s,t)}static createMat4f64(t=o){return new _(128,r,t)}static createQuatf64(t=o){return new _(32,i,t)}get test(){return{size:this._buffers.length*this._itemsPerBuffer*this.itemByteSize}}}const o=4*e.KILOBYTES,n=_.createVec2f64(),u=_.createVec3f64(),l=_.createVec4f64();_.createMat3f64();const P=_.createMat4f64(),g=_.createQuatf64();export{f as O,P as a,g as b,l as c,n as d,u as s};
