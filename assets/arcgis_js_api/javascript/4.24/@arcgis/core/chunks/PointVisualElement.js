/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{B as e,m as t,c as r,I as i,s,h as o}from"./mathUtils.js";import{i as a,a as n}from"./maybe.js";import{a as l}from"./vec4f64.js";import{projectVectorToVector as u}from"../geometry/projection.js";import{n as h}from"./aaBoundingBox.js";import{s as c}from"./vectorStacks.js";import{V as m}from"./VisualElementResources.js";import{e as p}from"./lineUtils.js";import{E as d}from"./ElevationContext.js";import{c as _,H as g,D as f}from"./HUDMaterial.js";import{G as y}from"./GeometryUtil.js";import{V as S}from"./VertexAttribute.js";class v{constructor(e){this.view=null,this._geometry=null,this._size=3,this._color=l(1,0,1,1),this._pixelSnappingEnabled=!0,this._primitive="square",this._outlineSize=1,this._outlineColor=l(1,1,1,1),this._elevationInfo=null,this.resources=new m({view:e.view,createResources:e=>this._createResources(e),recreateGeometry:(e,t)=>(e.geometry=this._recreateGeometry(t,e.material),a(e.geometry)?[e.geometry]:[])});let t=!0;for(const r in e)r in this?"attached"===r?t=e[r]:this[r]=e[r]:console.error("Cannot set unknown property",r);this.attached=t}destroy(){this.resources.destroy()}get visible(){return this.resources.visible}set visible(e){this.resources.visible=e}get attached(){return this.resources.attached}set attached(e){this.resources.attached=e}get geometry(){return this._geometry}set geometry(e){this._geometry=e,this.resources.recreateGeometry()}get size(){return this._size}set size(e){if(e!==this._size){const t=this.preferredTextureSize;this._size=e,t<this.preferredTextureSize?a(this.resources)&&this.resources.recreate():this._updateSizeAttribute()}}get color(){return this._color}set color(r){e(r,this._color)||(t(this._color,r),this._updateMaterial())}get pixelSnappingEnabled(){return this._pixelSnappingEnabled}set pixelSnappingEnabled(e){this._pixelSnappingEnabled!==e&&(this._pixelSnappingEnabled=e,this._updateMaterial())}get primitive(){return this._primitive}set primitive(e){this._primitive!==e&&(this._primitive=e,a(this.resources)&&this.resources.recreate())}get outlineSize(){return this._outlineSize}set outlineSize(e){e!==this._outlineSize&&(this._outlineSize=e,this._updateMaterial())}get outlineColor(){return this._outlineColor}set outlineColor(r){e(r,this._outlineColor)||(t(this._outlineColor,r),this._updateMaterial())}get elevationInfo(){return this._elevationInfo}set elevationInfo(e){this._elevationInfo=e,this.resources&&this.resources.recreateGeometry()}_updateMaterial(){const e=this.resources.resources;n(e)||e.material.setParameters(this._materialParameters(e.texture.id))}_updateSizeAttribute(){const e=this.resources.resources,t=this.resources.object;if(n(e)||n(t))return;const r=e.geometry;if(n(r))return;const i=r.getMutableAttribute(S.SIZE).data,s=this.geometrySize;i[0]=s,i[1]=s,t.geometryVertexAttrsUpdated(t.geometryRecords[0])}_materialParameters(e){return{color:this._color,textureIsSignedDistanceField:!0,distanceFieldBoundingBox:x,occlusionTest:!1,outlineColor:this._outlineColor,outlineSize:this._outlineSize,textureId:e,polygonOffset:!1,shaderPolygonOffset:0,drawInSecondSlot:!0,depthEnabled:!1,pixelSnappingEnabled:this.pixelSnappingEnabled}}get geometrySize(){return this._size/z}_recreateGeometry(e,t){const r=this._createRenderGeometry();return a(r)&&e.addGeometry(r,t),r}_createResources(e){const t=_(this._primitive,this.preferredTextureSize),r=new g(this._materialParameters(t.id)),i=this._recreateGeometry(e,r);return{material:r,texture:t,geometry:i,forEach(e){e(t),e(r),a(this.geometry)&&e(this.geometry)}}}get preferredTextureSize(){return r(i(2*this.geometrySize),16,128)}calculateMapBounds(e){if(n(this.resources.resources)||n(this.resources.resources.geometry))return!1;const t=this.resources.resources.geometry.vertexAttributes.get(S.POSITION);return u(t.data,this.view.renderCoordsHelper.spatialReference,b,this.view.spatialReference),h(e,b),!0}_createRenderGeometry(){const e=this.geometry;if(n(e))return null;const{renderCoordsHelper:t,elevationProvider:r}=this.view,i=p(e,r,d.fromElevationInfo(this.elevationInfo),t),o=s(c.get(),e.x,e.y,i),a=c.get();u(o,e.spatialReference,a,t.spatialReference);const l=this.geometrySize;return y.createPointGeometry(null,a,null,[l,l],[0,0,0,1])}}const z=f,x=[z/2,z/2,1-z/2,1-z/2],b=o();export{v as P};
