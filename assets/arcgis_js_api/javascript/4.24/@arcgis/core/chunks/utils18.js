/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{J as e}from"./jsonMap.js";import{a as t,i}from"./maybe.js";import{x as r}from"./unitUtils.js";import{e as s}from"./extentUtils.js";import{fromJSON as n}from"../geometry/support/jsonUtils.js";import{normalizeCentralMeridian as o}from"../geometry/support/normalizeUtils.js";import{l as a,i as l,W as m}from"../geometry/SpatialReference.js";import{g as f,q as c,r as u,f as p,h as y,i as g,j as S}from"./featureConversionUtils.js";import{O as R}from"./OptimizedGeometry.js";import{c as h,p as j}from"./projectionSupport.js";const w=new e({esriSRUnit_Meter:"meters",esriSRUnit_Kilometer:"kilometers",esriSRUnit_Foot:"feet",esriSRUnit_StatuteMile:"miles",esriSRUnit_NauticalMile:"nautical-miles",esriSRUnit_USNauticalMile:"us-nautical-miles"}),d=Object.freeze({}),U=new R,M=new R,F=new R,O={esriGeometryPoint:p,esriGeometryPolyline:y,esriGeometryPolygon:g,esriGeometryMultipoint:S};function N(e,i,r,s=e.hasZ,n=e.hasM){if(t(i))return null;const o=e.hasZ&&s,a=e.hasM&&n;if(r){const t=c(F,i,e.hasZ,e.hasM,"esriGeometryPoint",r,s,n);return p(t,o,a)}return p(i,o,a)}function _(e,r,s,n,o,a,l=r,m=s){const p=r&&l,y=s&&m,g=i(n)?"coords"in n?n:n.geometry:null;if(t(g))return null;if(o){let t=f(M,g,r,s,e,o,l,m);return a&&(t=c(F,t,p,y,e,a)),O[e](t,p,y)}if(a){const t=c(F,g,r,s,e,a,l,m);return O[e](t,p,y)}return u(U,g,r,s,l,m),O[e](U,p,y)}async function G(e,t,i){const{outFields:r,orderByFields:s,groupByFieldsForStatistics:n,outStatistics:o}=e;if(r)for(let e=0;e<r.length;e++)r[e]=r[e].trim();if(s)for(let e=0;e<s.length;e++)s[e]=s[e].trim();if(n)for(let e=0;e<n.length;e++)n[e]=n[e].trim();if(o)for(let e=0;e<o.length;e++)o[e].onStatisticField&&(o[e].onStatisticField=o[e].onStatisticField.trim());return e.geometry&&!e.outSR&&(e.outSR=e.geometry.spatialReference),J(e,t,i)}async function J(e,i,f){if(!e)return null;let{where:c}=e;if(e.where=c=c&&c.trim(),(!c||/^1 *= *1$/.test(c)||i&&i===c)&&(e.where=null),!e.geometry)return e;let u=await async function(e){const{geometry:t,distance:i,units:s}=e;if(null==i||"vertexAttributes"in t)return t;const n=t.spatialReference,o=s?w.fromJSON(s):r(n),f=n&&(a(n)||l(n))?t:await h(n,m).then((()=>j(t,m)));return(await async function(){return(await import("./geometryEngineJSON.js").then((e=>e.g))).geodesicBuffer}())(f.spatialReference,f,i,o)}(e);if(e.distance=0,e.units=null,"esriSpatialRelEnvelopeIntersects"===e.spatialRel){const{spatialReference:t}=e.geometry;u=s(u),u.spatialReference=t}e.geometry=u,await h(u.spatialReference,f);const p=(await o(n(u)))[0];if(t(p))throw d;const y=p.toJSON(),g=await j(y,y.spatialReference,f);if(!g)throw d;return g.spatialReference=f,e.geometry=g,e}function v(e){return e&&x in e?JSON.parse(JSON.stringify(e,P)):e}const x="_geVersion",P=(e,t)=>e!==x?t:void 0;export{d as Q,J as a,v as c,_ as g,G as n,N as t};
