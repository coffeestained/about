/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import"../geometry.js";import e from"../request.js";import t from"../core/Error.js";import{L as i}from"./Logger.js";import{createTask as r,isAbortError as o}from"../core/promiseUtils.js";import{urlToObject as s,getFilename as n}from"../core/urlUtils.js";import{projectMany as a}from"../geometry/projection.js";import{j as l}from"./json.js";import m,{e as p,i as u,W as c}from"../geometry/SpatialReference.js";import{lngLatToXY as d}from"../geometry/support/webMercatorUtils.js";import{a as f,O as y}from"./OptimizedGeometry.js";import{F as g}from"./FeatureStore.js";import{c as j}from"./projectionSupport.js";import{Q as h}from"./QueryEngine.js";import{b as F,a as _}from"./clientSideDefaults.js";import{_ as b}from"./number.js";import N from"../layers/support/FieldsIndex.js";import{getFieldDefaultValue as w}from"../layers/support/fieldUtils.js";import"./ensureType.js";import"../core/lang.js";import"./maybe.js";import"../geometry/Extent.js";import"./tslib.es6.js";import"./string.js";import"./object.js";import"../core/accessorSupport/decorators/property.js";import"./get.js";import"./utils.js";import"./handleUtils.js";import"./metadata.js";import"../config.js";import"../core/accessorSupport/decorators/subclass.js";import"./tracking.js";import"../geometry/Geometry.js";import"../core/JSONSupport.js";import"../core/Accessor.js";import"./ArrayPool.js";import"./watch.js";import"../core/scheduling.js";import"./nextTick.js";import"./reader.js";import"./writer.js";import"../geometry/Point.js";import"../core/accessorSupport/decorators/cast.js";import"./Ellipsoid.js";import"../geometry/Multipoint.js";import"./zmUtils.js";import"../geometry/Polygon.js";import"./extentUtils.js";import"../geometry/Polyline.js";import"./typeUtils.js";import"./jsonMap.js";import"../geometry/support/jsonUtils.js";import"../kernel.js";import"./mathUtils.js";import"./common.js";import"./unitUtils.js";import"./projectionEllipsoid.js";import"./SimpleObservable.js";import"./mat4.js";import"./pe.js";import"./assets.js";import"./aaBoundingRect.js";import"./geodesicConstants.js";import"../geometry/support/GeographicTransformation.js";import"../geometry/support/GeographicTransformationStep.js";import"./zscale.js";import"../core/Evented.js";import"./aaBoundingBox.js";import"./featureConversionUtils.js";import"./OptimizedFeatureSet.js";import"./BoundsStore.js";import"./PooledRBush.js";import"./quickselect.js";import"./optimizedFeatureQueryEngineAdapter.js";import"./centroid.js";import"./MemCache.js";import"../geometry/support/normalizeUtils.js";import"./normalizeUtilsCommon.js";import"./QueryEngineResult.js";import"./quantizationUtils.js";import"./ItemCache.js";import"../core/sql/WhereClause.js";import"./_commonjsHelpers.js";import"./utils11.js";import"./generateRendererUtils.js";import"./colorRamps.js";import"../rest/support/AlgorithmicColorRamp.js";import"../Color.js";import"./colorUtils.js";import"./enumeration.js";import"../rest/support/ColorRamp.js";import"../rest/support/MultipartColorRamp.js";import"../symbols/Symbol.js";import"./utils18.js";import"./arcadeOnDemand.js";import"./QueryEngineCapabilities.js";import"./timeSupport.js";import"./Scheduler.js";import"../core/Handles.js";import"../core/Collection.js";import"./shared.js";import"../core/reactiveUtils.js";import"./debugFlags.js";import"./defaultsJSON.js";import"./locale.js";const I=/^\s*"([\S\s]*)"\s*$/,E=/""/g,x=[","," ",";","|","\t"];function*T(e,t,i){let r=0;for(;r<=e.length;){const o=e.indexOf(t,r),s=e.substring(r,o>-1?o:void 0);r+=s.length+t.length,i&&!s.trim()||(yield s)}}function S(e){const t=e.includes("\r\n")?"\r\n":"\n";return T(e,t,!0)}function C(e,t){return T(e,t,!1)}function*q(e,t,i,r=(()=>Object.create(null))){let o="",s="",n=0,a=r(),l=0;e:for(const m of e){const e=C(m,i);for(const m of e)if(o+=s+m,s="",n+=O(m),n%2==0){if(n>0){const e=I.exec(o);if(!e){a=r(),l=0,o="",n=0;continue e}a[t[l]]=e[1].replace(E,'"'),l++}else a[t[l]]=o,l++;o="",n=0}else s=i;0===n?(yield a,a=r(),l=0):s="\n"}}function O(e){let t=0,i=0;for(i=e.indexOf('"',i);i>=0;)t++,i=e.indexOf('"',i+1);return t}function D(e){if(!e.length)return"string";const t=/[^+-.,0-9]/;return e.map((e=>{let i=!1;if(""!==e){if(t.test(e))i=!0;else{let t=k(e);if(!isNaN(t))return/[.,]/.test(e)||!Number.isInteger(t)||t>214783647||t<-214783648?"double":"integer";if(e.includes("E")){if(t=Number(e),!isNaN(t))return"double";if(e.includes(",")){if(e=e.replace(",","."),t=Number(e),!isNaN(t))return"double";i=!0}else i=!0}else i=!0}return i?/^[-]?\d*[.,]?\d*$/.test(e)?"string":v(new Date(e),e)?"date":"string":"string"}})).reduce(((e,t)=>void 0===e||e===t?t:"string"===e||"string"===t?"string":"double"===e||"double"===t?"double":void 0))}function v(e,t){if(!e||"[object Date]"!==Object.prototype.toString.call(e)||isNaN(e.getTime()))return!1;let i=!0;if(!P&&/\d+\W*$/.test(t)){const e=t.match(/[a-zA-Z]{2,}/);if(e){let t=!1,r=0;for(;!t&&r<=e.length;)t=!U.test(e[r]),r++;i=!t}}return i}const k=function(){const e=b(),t=new RegExp("^"+e.regexp+"$"),i=new RegExp("["+e.group+"\\s\\xa0]","g"),r=e.factor;return o=>{const s=t.exec(o);if(e.factor=r,!s)return NaN;let n=s[1];if(!s[1]){if(!s[2])return NaN;n=s[2],e.factor*=-1}return n=n.replace(i,"").replace(e.decimal,"."),+n*e.factor}}(),U=/^((jan(uary)?)|(feb(ruary)?)|(mar(ch)?)|(apr(il)?)|(may)|(jun(e)?)|(jul(y)?)|(aug(ust)?)|(sep(tember)?)|(oct(ober)?)|(nov(ember)?)|(dec(ember)?)|(am)|(pm)|(gmt)|(utc))$/i,P=Number.isNaN(new Date("technology 10").getTime()),R=["lat","latitude","latitude83","latdecdeg","lat_dd","y","ycenter","point-y"],Q=["lon","lng","long","longitude","longitude83","longdecdeg","long_dd","x","xcenter","point-x"],G=_("esriGeometryPoint"),V=["csv"],M=[0,0];class z{constructor(e,t){this.x=e,this.y=t}}class A{constructor(){this._queryEngine=null,this._snapshotFeatures=async e=>{const t=await this._fetch(e);return this._createFeatures(t)}}destroy(){this._queryEngine?.destroy(),this._queryEngine=null}async load(e,i={}){this.loadOptions=e;const[r]=await Promise.all([this._fetch(i.signal),this._checkProjection(e?.parsingOptions?.spatialReference)]),o=function(e,i){const r=i.parsingOptions||{},o={delimiter:r.delimiter,layerDefinition:null,locationInfo:{latitudeFieldName:r.latitudeField,longitudeFieldName:r.longitudeField}},s=S(e);let a=s.next().value;if(!a)throw new t("csv-layer:empty-csv","CSV is empty",{csv:e});if(a=a.trim(),!r.delimiter){const e=function(e){const t=e.trim();let i=0,r="";for(const e of x){const o=t.split(e).length;o>i&&(i=o,r=e)}return""===r?null:r}(a);if(!e)throw new t("csv-layer:invalid-delimiter","Unable to detect the delimiter from CSV");o.delimiter=e}const l=a.split(o.delimiter).filter((e=>!!e)),m=o.layerDefinition={name:n(i.url,V)||"csv",drawingInfo:G,geometryType:"esriGeometryPoint",objectIdField:null,fields:[],timeInfo:r.timeInfo,extent:{xmin:Number.POSITIVE_INFINITY,ymin:Number.POSITIVE_INFINITY,xmax:Number.NEGATIVE_INFINITY,ymax:Number.NEGATIVE_INFINITY,spatialReference:r.spatialReference||{wkid:102100}}};if(!r.latitudeField||!r.longitudeField){const e=function(e){const t=e.map((e=>e.toLowerCase()));return{longitudeFieldName:e[t.indexOf(Q.find((e=>t.includes(e))))],latitudeFieldName:e[t.indexOf(R.find((e=>t.includes(e))))]}}(l);if(!r.longitudeField&&!e.longitudeFieldName||!r.latitudeField&&!e.latitudeFieldName)throw new t("csv-layer:location-fields-not-found","Unable to identify latitude and longitude fields from the CSV file");o.locationInfo={longitudeFieldName:r.longitudeField||e.longitudeFieldName,latitudeFieldName:r.latitudeField||e.latitudeFieldName}}const p=function(e,t,i,r){const o=[],s=q(e,i,t),n=[];for(const e of s){if(10===n.length)break;n.push(e)}for(const e of i)if(e===r.longitudeFieldName||e===r.latitudeFieldName)o.push({name:e,type:"esriFieldTypeDouble",alias:e});else{const t=D(n.map((t=>t[e]))),i={name:e,type:null,alias:e};switch(t){case"integer":i.type="esriFieldTypeInteger";break;case"double":i.type="esriFieldTypeDouble";break;case"date":i.type="esriFieldTypeDate",i.length=36;break;default:i.type="esriFieldTypeString",i.length=255}o.push(i)}return o}(s,o.delimiter,l,o.locationInfo);if(r.fields&&r.fields.length){const e=new Map;for(const t of r.fields)e.set(t.name.toLowerCase(),t);for(const t of p){const i=e.get(t.name.toLowerCase());if(i){const e=t.name;Object.assign(t,i),t.name=e}}}if(m.fields=p,!m.fields.some((e=>"esriFieldTypeOID"===e.type&&(m.objectIdField=e.name,!0)))){const e={name:"__OBJECTID",alias:"__OBJECTID",type:"esriFieldTypeOID",editable:!1,nullable:!1};m.objectIdField=e.name,m.fields.unshift(e)}if(m.timeInfo){const e=new N(m.fields),t=m.timeInfo;if(t.startTimeField){const i=e.get(t.startTimeField);i?(t.startTimeField=i.name,i.type="esriFieldTypeDate"):t.startTimeField=null}if(t.endTimeField){const i=e.get(t.endTimeField);i?(t.endTimeField=i.name,i.type="esriFieldTypeDate"):t.endTimeField=null}if(t.trackIdField){const i=e.get(t.trackIdField);t.trackIdField=i?i.name:null}t.startTimeField||t.endTimeField||(m.timeInfo=null)}return o}(r,e);this.locationInfo=o.locationInfo,this.delimiter=o.delimiter,this._queryEngine=this._createQueryEngine(o);const s=await this._createFeatures(r);if(this._queryEngine.featureStore.addMany(s),o.layerDefinition.extent=this._queryEngine.fullExtent,o.layerDefinition.timeInfo){const{start:e,end:t}=this._queryEngine.timeExtent;o.layerDefinition.timeInfo.timeExtent=[e,t]}return o}async applyEdits(){throw new t("csv-layer:editing-not-supported","applyEdits() is not supported on CSVLayer")}async queryFeatures(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQuery(e,t.signal)}async queryFeatureCount(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForCount(e,t.signal)}async queryObjectIds(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForIds(e,t.signal)}async queryExtent(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForExtent(e,t.signal)}async querySnapping(e,t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForSnapping(e,t.signal)}async refresh(e){return this.loadOptions.customParameters=e,this._snapshotTask?.abort(),this._snapshotTask=r(this._snapshotFeatures),this._snapshotTask.promise.then((e=>{this._queryEngine.featureStore.clear(),e&&this._queryEngine.featureStore.addMany(e)}),(e=>{this._queryEngine.featureStore.clear(),o(e)||i.getLogger("esri.layers.CSVLayer").error(new t("csv-layer:refresh","An error occurred during refresh",{error:e}))})),await this._waitSnapshotComplete(),{extent:this._queryEngine.fullExtent,timeExtent:this._queryEngine.timeExtent}}async _waitSnapshotComplete(){if(this._snapshotTask&&!this._snapshotTask.finished){try{await this._snapshotTask.promise}catch{}return this._waitSnapshotComplete()}}async _fetch(i){const{url:r,customParameters:o}=this.loadOptions;if(!r)throw new t("csv-layer:invalid-source","url not defined");const n=s(r);return(await e(n.path,{query:{...n.query,...o},responseType:"text",signal:i})).data}_createQueryEngine(e){const{objectIdField:t,fields:i,extent:r,timeInfo:o}=e.layerDefinition,s=new g({geometryType:"esriGeometryPoint",hasM:!1,hasZ:!1});return new h({fields:i,geometryType:"esriGeometryPoint",hasM:!1,hasZ:!1,timeInfo:o,objectIdField:t,spatialReference:r.spatialReference||{wkid:4326},cacheSpatialQueries:!0,featureStore:s})}async _createFeatures(e){const{latitudeFieldName:t,longitudeFieldName:i}=this.locationInfo,{objectIdField:r,fieldsIndex:o,spatialReference:s}=this._queryEngine;let n=[];const c=[],g=o.fields.filter((e=>e.name!==r)).map((e=>e.name));let j=0;const h=S(e);h.next();const _={};for(const e of o.fields)if("esriFieldTypeOID"!==e.type&&"esriFieldTypeGlobalID"!==e.type){const t=w(e);void 0!==t&&(_[e.name]=t)}const b=q(h,g,this.delimiter,F(_,r));for(const e of b){const s=this._parseCoordinateValue(e[t]),a=this._parseCoordinateValue(e[i]);if(null!=a&&null!=s&&!isNaN(s)&&!isNaN(a)){e[t]=s,e[i]=a;for(const r in e)if(r!==t&&r!==i)if(o.isDateField(r)){const t=new Date(e[r]);e[r]=v(t,e[r])?t.getTime():null}else if(o.isNumericField(r)){const t=k(e[r]);isNaN(t)?e[r]=null:e[r]=t}e[r]=j,j++,n.push(new z(a,s)),c.push(e)}}if(!p({wkid:4326},s))if(u(s))for(const e of n)[e.x,e.y]=d(e.x,e.y,M);else n=a(l,n,m.WGS84,s,null,null);const N=[];for(let e=0;e<n.length;e++){const{x:t,y:i}=n[e],o=c[e];o[r]=e+1,N.push(new f(new y([],[t,i]),o,null,o[r]))}return N}_parseCoordinateValue(e){if(null==e||""===e)return null;let t=k(e);return(isNaN(t)||Math.abs(t)>181)&&(t=parseFloat(e)),t}async _checkProjection(e){try{await j(c,e)}catch{throw new t("csv-layer:projection-not-supported","Projection not supported")}}}export{A as default};
