/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{_ as t}from"./tslib.es6.js";import e from"../core/Error.js";import{h as r}from"../core/lang.js";import{a as s,i as o}from"./maybe.js";import{whenOrAbort as i}from"../core/promiseUtils.js";import{property as n}from"../core/accessorSupport/decorators/property.js";import"./ensureType.js";import{subclass as a}from"../core/accessorSupport/decorators/subclass.js";import{D as u}from"./DataLayerSource.js";import{a as c}from"./executeQueryJSON.js";import{e as l,b as p,d as f,f as m,a as d,g as h,h as y,i as S,j as O}from"./executeForTopCount.js";import D from"../rest/support/FeatureSet.js";import F from"../rest/support/Query.js";import{a as b,e as g}from"./executeForIds.js";import j from"../rest/support/RelationshipQuery.js";import x from"../core/Accessor.js";import{urlToObject as q}from"../core/urlUtils.js";let _=class extends x{constructor(...t){super(...t),this.requestOptions=null,this.url=null}normalizeCtorArgs(t,e){return"string"!=typeof t?t:{url:t,...e}}get parsedUrl(){return this._parseUrl(this.url)}_parseUrl(t){return t?q(t):null}_encode(t,e,r){const s={};for(const o in t){if("declaredClass"===o)continue;const i=t[o];if(null!=i&&"function"!=typeof i)if(Array.isArray(i)){s[o]=[];for(let t=0;t<i.length;t++)s[o][t]=this._encode(i[t])}else if("object"==typeof i)if(i.toJSON){const t=i.toJSON(r&&r[o]);s[o]=e?t:JSON.stringify(t)}else s[o]=e?i:JSON.stringify(i);else s[o]=i}return s}};t([n({readOnly:!0})],_.prototype,"parsedUrl",null),t([n()],_.prototype,"requestOptions",void 0),t([n({type:String})],_.prototype,"url",void 0),_=t([a("esri.tasks.Task")],_);const Q=_;let V=class extends Q{constructor(t){super(t),this.dynamicDataSource=null,this.fieldsIndex=null,this.format="json",this.gdbVersion=null,this.infoFor3D=null,this.sourceSpatialReference=null}execute(t,e){return this.executeJSON(t,e).then((r=>this.featureSetFromJSON(t,r,e)))}async executeJSON(t,e){const s={...this.requestOptions,...e},o=this._normalizeQuery(t),i=null!=t.outStatistics?.[0],n=r("featurelayer-pbf-statistics"),a=!i||n;let u;if("pbf"===this.format&&a)try{u=await l(this.url,o,s)}catch(t){if("query:parsing-pbf"!==t.name)throw t;this.format="json"}return"json"!==this.format&&a||(u=await c(this.url,o,s)),this._normalizeFields(u.fields),u}async featureSetFromJSON(t,e,r){if(!this._queryIs3DObjectFormat(t)||s(this.infoFor3D)||!e.features||!e.features.length)return D.fromJSON(e);const{meshFeatureSetFromJSON:o}=await i(import("./meshFeatureSet.js"),r);return o(t,this.infoFor3D,e)}executeForCount(t,e){const r={...this.requestOptions,...e},s=this._normalizeQuery(t);return b(this.url,s,r)}executeForExtent(t,e){const r={...this.requestOptions,...e},s=this._normalizeQuery(t);return p(this.url,s,r)}executeForIds(t,e){const r={...this.requestOptions,...e},s=this._normalizeQuery(t);return g(this.url,s,r)}executeRelationshipQuery(t,e){t=j.from(t);const r={...this.requestOptions,...e};return(this.gdbVersion||this.dynamicDataSource)&&((t=t.clone()).gdbVersion=t.gdbVersion||this.gdbVersion,t.dynamicDataSource=t.dynamicDataSource||this.dynamicDataSource),f(this.url,t,r)}executeRelationshipQueryForCount(t,e){t=j.from(t);const r={...this.requestOptions,...e};return(this.gdbVersion||this.dynamicDataSource)&&((t=t.clone()).gdbVersion=t.gdbVersion||this.gdbVersion,t.dynamicDataSource=t.dynamicDataSource||this.dynamicDataSource),m(this.url,t,r)}executeAttachmentQuery(t,e){const r={...this.requestOptions,...e};return d(this.url,t,r)}executeTopFeaturesQuery(t,e){const r={...this.requestOptions,...e};return h(this.parsedUrl,t,this.sourceSpatialReference,r)}executeForTopIds(t,e){const r={...this.requestOptions,...e};return y(this.parsedUrl,t,r)}executeForTopExtents(t,e){const r={...this.requestOptions,...e};return S(this.parsedUrl,t,r)}executeForTopCount(t,e){const r={...this.requestOptions,...e};return O(this.parsedUrl,t,r)}_normalizeQuery(t){let r=F.from(t);if(r.sourceSpatialReference=r.sourceSpatialReference||this.sourceSpatialReference,(this.gdbVersion||this.dynamicDataSource)&&(r=r===t?r.clone():r,r.gdbVersion=t.gdbVersion||this.gdbVersion,r.dynamicDataSource=t.dynamicDataSource?u.from(t.dynamicDataSource):this.dynamicDataSource),o(this.infoFor3D)&&this._queryIs3DObjectFormat(t)){r=r===t?r.clone():r,r.formatOf3DObjects=null;for(const t of this.infoFor3D.queryFormats){if("3D_glb"===t.id){r.formatOf3DObjects=t.id;break}"3D_gltf"!==t.id||r.formatOf3DObjects||(r.formatOf3DObjects=t.id)}if(!r.formatOf3DObjects)throw new e("query:unsupported-3d-query-formats","Could not find any supported 3D object query format. Only supported formats are 3D_glb and 3D_gltf");if(s(r.outFields)||!r.outFields.includes("*")){r=r===t?r.clone():r,s(r.outFields)&&(r.outFields=[]);const{originX:e,originY:o,originZ:i,translationX:n,translationY:a,translationZ:u,scaleX:c,scaleY:l,scaleZ:p,rotationX:f,rotationY:m,rotationZ:d,rotationDeg:h}=this.infoFor3D.transformFieldRoles;r.outFields.push(e,o,i,n,a,u,c,l,p,f,m,d,h)}}return r}_normalizeFields(t){if(o(this.fieldsIndex)&&o(t))for(const e of t){const t=this.fieldsIndex.get(e.name);t&&Object.assign(e,t.toJSON())}}_queryIs3DObjectFormat(t){return o(this.infoFor3D)&&t.returnGeometry&&"xyFootprint"!==t.multipatchOption&&!t.outStatistics}};t([n({type:u})],V.prototype,"dynamicDataSource",void 0),t([n()],V.prototype,"fieldsIndex",void 0),t([n()],V.prototype,"format",void 0),t([n()],V.prototype,"gdbVersion",void 0),t([n()],V.prototype,"infoFor3D",void 0),t([n()],V.prototype,"sourceSpatialReference",void 0),V=t([a("esri.tasks.QueryTask")],V);const J=V;export{J as Q,Q as T};
