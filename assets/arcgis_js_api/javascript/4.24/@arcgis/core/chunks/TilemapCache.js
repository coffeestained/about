/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import e from"../layers/support/TileInfo.js";import{_ as t}from"./tslib.es6.js";import i from"../request.js";import l from"../core/Accessor.js";import{B as a}from"./byteSizeEstimations.js";import r from"../core/Error.js";import{HandleOwnerMixin as s}from"../core/HandleOwner.js";import{L as o}from"./Logger.js";import{L as n}from"./LRUCache.js";import{waitTicks as c,P as h}from"../core/scheduling.js";import{onAbort as p,isAbortError as m,isAborted as f,createAbortError as u}from"../core/promiseUtils.js";import{watch as v,syncAndInitial as d}from"../core/reactiveUtils.js";import{objectToQuery as y}from"../core/urlUtils.js";import{property as b}from"../core/accessorSupport/decorators/property.js";import{l as w,clone as g}from"../core/lang.js";import{cast as _}from"../core/accessorSupport/decorators/cast.js";import{subclass as S}from"../core/accessorSupport/decorators/subclass.js";const A={type:e,json:{origins:{service:{read:{source:["tileInfo","minScale","maxScale","minLOD","maxLOD"],reader:T}}}}};function T(t,i,l,a){if(!t)return null;const{minScale:r,maxScale:s,minLOD:o,maxLOD:n}=i;if(null!=o&&null!=n)return a&&a.ignoreMinMaxLOD?e.fromJSON(t):e.fromJSON({...t,lods:t.lods.filter((({level:e})=>null!=e&&e>=o&&e<=n))});if(0!==r&&0!==s){const i=e=>Math.round(1e4*e)/1e4,l=r?i(r):1/0,a=s?i(s):-1/0;return e.fromJSON({...t,lods:t.lods.filter((e=>{const t=i(e.scale);return t<=l&&t>=a}))})}return e.fromJSON(t)}class j{constructor(){this.location={left:0,top:0,width:0,height:0},this._allAvailability="unknown",this.byteSize=40}getAvailability(e,t){if("unknown"!==this._allAvailability)return this._allAvailability;const i=(e-this.location.top)*this.location.width+(t-this.location.left),l=i%8,a=i>>3,r=this._tileAvailabilityBitSet;return a<0||a>r.length?"unknown":r[a]&1<<l?"available":"unavailable"}_updateFromData(e){const t=this.location.width,i=this.location.height;let l=!0,a=!0;const r=Math.ceil(t*i/8),s=new Uint8Array(r);let o=0;for(let t=0;t<e.length;t++){const i=t%8;e[t]?(a=!1,s[o]|=1<<i):l=!1,7===i&&++o}a?this._allAvailability="unavailable":l?this._allAvailability="available":(this._allAvailability="unknown",this._tileAvailabilityBitSet=s,this.byteSize+=s.length)}static fromDefinition(e,t){const l=e.service.request||i,{row:a,col:s,width:o,height:n}=e,c={query:{f:"json"}};return t=t?{...c,...t}:c,l(function(e){let t;if("vector-tile"===e.service.type)t=`${e.service.url}/tilemap/${e.level}/${e.row}/${e.col}/${e.width}/${e.height}`;else{const i=e.service.tileServers;t=`${i&&i.length?i[e.row%i.length]:e.service.url}/tilemap/${e.level}/${e.row}/${e.col}/${e.width}/${e.height}`}const i=e.service.query;return i&&(t=`${t}?${i}`),t}(e),t).then((e=>e.data)).catch((e=>{if(e&&e.details&&422===e.details.httpStatus)return{location:{top:a,left:s,width:o,height:n},valid:!0,data:w(o*n,0)};throw e})).then((e=>{if(e.location&&(e.location.top!==a||e.location.left!==s||e.location.width!==o||e.location.height!==n))throw new r("tilemap:location-mismatch","Tilemap response for different location than requested",{response:e,definition:{top:a,left:s,width:o,height:n}});return j.fromJSON(e)}))}static fromJSON(e){j._validateJSON(e);const t=new j;return t.location=Object.freeze(g(e.location)),t._updateFromData(e.data),Object.freeze(t)}static _validateJSON(e){if(!e||!e.location)throw new r("tilemap:missing-location","Location missing from tilemap response");if(!1===e.valid)throw new r("tilemap:invalid","Tilemap response was marked as invalid");if(!e.data)throw new r("tilemap:missing-data","Data missing from tilemap response");if(!Array.isArray(e.data))throw new r("tilemap:data-mismatch","Data must be an array of numbers");if(e.data.length!==e.location.width*e.location.height)throw new r("tilemap:data-mismatch","Number of data items does not match width/height of tilemap")}}function L(e){return`${e.level}/${e.row}/${e.col}/${e.width}/${e.height}`}var z;const $=o.getLogger("esri.layers.support.TilemapCache");let O=z=class extends(s(l)){constructor(e){super(e),this._pendingTilemapRequests={},this._availableLevels={},this.levels=5,this.cacheByteSize=2*a.MEGABYTES,this.request=i,this._prefetchingEnabled=!0}initialize(){this._tilemapCache=new n(this.cacheByteSize),this.own([v((()=>{const{layer:e}=this;return[e?.parsedUrl,e?.tileServers,e?.apiKey,e?.customParameters]}),(()=>this._initializeTilemapDefinition())),v((()=>this.layer?.tileInfo?.lods),(e=>this._initializeAvailableLevels(e)),d)]),this._initializeTilemapDefinition()}castLevels(e){return e<=2?($.error("Minimum levels for Tilemap is 3, but got ",e),3):e}get size(){return 1<<this.levels}fetchTilemap(e,t,i,l){if(!this._availableLevels[e])return Promise.reject(new r("tilemap-cache:level-unavailable",`Level ${e} is unavailable in the service`));const a=this._tmpTilemapDefinition,s=this._tilemapFromCache(e,t,i,a);if(s)return Promise.resolve(s);const o=l&&l.signal;return l={...l,signal:null},new Promise(((e,t)=>{p(o,(()=>t(u())));const i=L(a);let r=this._pendingTilemapRequests[i];if(!r){r=j.fromDefinition(a,l).then((e=>(this._tilemapCache.put(i,e,e.byteSize),e)));const e=()=>delete this._pendingTilemapRequests[i];this._pendingTilemapRequests[i]=r,r.then(e,e)}r.then(e,t)}))}getAvailability(e,t,i){if(!this._availableLevels[e])return"unavailable";const l=this._tilemapFromCache(e,t,i,this._tmpTilemapDefinition);return l?l.getAvailability(t,i):"unknown"}fetchAvailability(e,t,i,l){return this._availableLevels[e]?this.fetchTilemap(e,t,i,l).catch((e=>e)).then((l=>{if(l instanceof j){const a=l.getAvailability(t,i);if("unavailable"===a)throw new r("tile-map:tile-unavailable","Tile is not available",{level:e,row:t,col:i});return a}if(m(l))throw l;return"unknown"})):Promise.reject(new r("tilemap-cache:level-unavailable",`Level ${e} is unavailable in the service`))}fetchAvailabilityUpsample(e,t,i,l,a){l.level=e,l.row=t,l.col=i;const r=this.layer.tileInfo;r.updateTileInfo(l);const s=this.fetchAvailability(e,t,i,a).catch((e=>{if(m(e))throw e;if(r.upsampleTile(l))return this.fetchAvailabilityUpsample(l.level,l.row,l.col,l);throw e}));return this._fetchAvailabilityUpsamplePrefetch(l.id,e,t,i,a,s),s}async _fetchAvailabilityUpsamplePrefetch(e,t,i,l,a,r){if(!this._prefetchingEnabled)return;const s=`prefetch-${e}`;if(this.handles.has(s))return;const o=new AbortController;r.then((()=>o.abort()),(()=>o.abort()));let n=!1;const h={remove(){n||(n=!0,o.abort())}};if(this.handles.add(h,s),await c(10,o.signal).catch((()=>{})),n||(n=!0,this.handles.remove(s)),f(o))return;const p={id:e,level:t,row:i,col:l},m={...a,signal:o.signal},u=this.layer.tileInfo;for(let e=0;z._prefetches.length<z._maxPrefetch&&u.upsampleTile(p);++e){const e=this.fetchAvailability(p.level,p.row,p.col,m);z._prefetches.push(e);const t=()=>{z._prefetches.removeUnordered(e)};e.then(t,t)}}_initializeTilemapDefinition(){if(!this.layer.parsedUrl)return;const{parsedUrl:e,apiKey:t,customParameters:i}=this.layer;this._tilemapCache.clear(),this._tmpTilemapDefinition={service:{url:e.path,query:y({...e.query,...i,token:t??e.query?.token}),tileServers:this.layer.tileServers,request:this.request,type:this.layer.type},width:this.size,height:this.size,level:0,row:0,col:0}}_tilemapFromCache(e,t,i,l){l.level=e,l.row=t-t%this.size,l.col=i-i%this.size;const a=L(l);return this._tilemapCache.get(a)}_initializeAvailableLevels(e){this._availableLevels={},e&&e.forEach((e=>this._availableLevels[e.level]=!0))}get test(){const e=this;return{get prefetchingEnabled(){return e._prefetchingEnabled},set prefetchingEnabled(t){e._prefetchingEnabled=t},hasTilemap:(t,i,l)=>!!e._tilemapFromCache(t,i,l,e._tmpTilemapDefinition)}}};O._maxPrefetch=4,O._prefetches=new h({initialSize:z._maxPrefetch}),t([b({constructOnly:!0,type:Number})],O.prototype,"levels",void 0),t([_("levels")],O.prototype,"castLevels",null),t([b({readOnly:!0,type:Number})],O.prototype,"size",null),t([b({constructOnly:!0,type:Number})],O.prototype,"cacheByteSize",void 0),t([b({constructOnly:!0})],O.prototype,"layer",void 0),t([b({constructOnly:!0})],O.prototype,"request",void 0),O=z=t([S("esri.layers.support.TilemapCache")],O);export{O as T,T as r,A as s};
