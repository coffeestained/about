/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{_ as e}from"./tslib.es6.js";import t from"../Graphic.js";import{property as i}from"../core/accessorSupport/decorators/property.js";import{h as r,clone as s}from"../core/lang.js";import"./ensureType.js";import{subclass as o}from"../core/accessorSupport/decorators/subclass.js";import"../geometry.js";import a from"../core/Collection.js";import n from"../core/Error.js";import{L as l}from"./Logger.js";import{u as p,i as u,f as c,a as h}from"./maybe.js";import{createResolver as d,ignoreAbortErrors as y,throwIfNotAbortError as m,debounce as f,isAbortError as g}from"../core/promiseUtils.js";import{watch as _,initial as j,whenOnce as b}from"../core/reactiveUtils.js";import v from"../core/Accessor.js";import{E as S}from"./EffectView.js";import w from"../layers/support/FeatureFilter.js";import R from"../rest/support/FeatureSet.js";import E from"../rest/support/Query.js";import{n as x}from"./definitions.js";import{L as C}from"./LayerView2D.js";import{b as U,i as I}from"./schemaUtils.js";import{f as F,b as V,c as T,i as q,a as O}from"./clusterUtils2.js";import{Q as k}from"./QueueProcessor.js";import{EsriPromise as P}from"../core/Promise.js";import{open as L}from"../core/workers/workers.js";import{t as D}from"./util2.js";import{a as M}from"./TileInfoView.js";import{T as N}from"./TileKey.js";import{F as A}from"./FeatureLayerView.js";import z from"../views/layers/LayerView.js";import{R as J}from"./RefreshableLayerView.js";import{g as H}from"./capabilities2.js";import Q from"../geometry/Extent.js";import"../PopupTemplate.js";import"../core/JSONSupport.js";import"./get.js";import"./utils.js";import"./handleUtils.js";import"./metadata.js";import"./ArrayPool.js";import"./tracking.js";import"./watch.js";import"../core/scheduling.js";import"./nextTick.js";import"../config.js";import"./object.js";import"./string.js";import"../core/accessorSupport/decorators/cast.js";import"./reader.js";import"./writer.js";import"../layers/support/fieldUtils.js";import"./arcadeOnDemand.js";import"../geometry/SpatialReference.js";import"../geometry/Geometry.js";import"../geometry/Point.js";import"../geometry/support/webMercatorUtils.js";import"./Ellipsoid.js";import"../geometry/Multipoint.js";import"./zmUtils.js";import"../geometry/Polygon.js";import"./extentUtils.js";import"../geometry/Polyline.js";import"./typeUtils.js";import"./jsonMap.js";import"../geometry/support/jsonUtils.js";import"../popup/content.js";import"../popup/content/AttachmentsContent.js";import"../popup/content/Content.js";import"../popup/content/CustomContent.js";import"../popup/content/ExpressionContent.js";import"../popup/ElementExpressionInfo.js";import"../popup/content/FieldsContent.js";import"../popup/FieldInfo.js";import"./enumeration.js";import"../popup/support/FieldInfoFormat.js";import"./date.js";import"./number2.js";import"./locale.js";import"../popup/content/MediaContent.js";import"../popup/content/BarChartMediaInfo.js";import"../popup/content/mixins/ChartMediaInfo.js";import"../popup/content/mixins/MediaInfo.js";import"../popup/content/support/ChartMediaInfoValue.js";import"../popup/content/support/ChartMediaInfoValueSeries.js";import"./chartMediaInfoUtils.js";import"../popup/content/ColumnChartMediaInfo.js";import"../popup/content/ImageMediaInfo.js";import"../popup/content/support/ImageMediaInfoValue.js";import"../popup/content/LineChartMediaInfo.js";import"../popup/content/PieChartMediaInfo.js";import"../popup/content/TextContent.js";import"../popup/ExpressionInfo.js";import"../popup/LayerOptions.js";import"../popup/RelatedRecordsInfo.js";import"../popup/support/RelatedRecordsInfoFieldOrder.js";import"../support/actions/ActionBase.js";import"./Identifiable.js";import"../support/actions/ActionButton.js";import"../support/actions/ActionToggle.js";import"../core/Evented.js";import"./shared.js";import"./SimpleObservable.js";import"../symbols.js";import"../symbols/CIMSymbol.js";import"../symbols/Symbol.js";import"../Color.js";import"./colorUtils.js";import"./mathUtils.js";import"./common.js";import"../symbols/ExtrudeSymbol3DLayer.js";import"../symbols/Symbol3DLayer.js";import"./utils2.js";import"../symbols/edges/Edges3D.js";import"./screenUtils.js";import"./materialUtils.js";import"./opacityUtils.js";import"../symbols/edges/SketchEdges3D.js";import"../symbols/edges/SolidEdges3D.js";import"./Symbol3DMaterial.js";import"../symbols/FillSymbol.js";import"../symbols/SimpleLineSymbol.js";import"../symbols/LineSymbol.js";import"../symbols/LineSymbolMarker.js";import"./lineMarkers.js";import"../symbols/FillSymbol3DLayer.js";import"../symbols/patterns/LineStylePattern3D.js";import"../symbols/patterns/StylePattern3D.js";import"./utils3.js";import"./colors.js";import"./symbolLayerUtils3D.js";import"./aaBoundingBox.js";import"./aaBoundingRect.js";import"../symbols/Font.js";import"../symbols/IconSymbol3DLayer.js";import"../core/urlUtils.js";import"./persistableUrlUtils.js";import"../symbols/LabelSymbol3D.js";import"../symbols/Symbol3D.js";import"./collectionUtils.js";import"../portal/Portal.js";import"../kernel.js";import"../request.js";import"../core/Loadable.js";import"../portal/PortalQueryParams.js";import"../portal/PortalQueryResult.js";import"../portal/PortalUser.js";import"../portal/PortalFolder.js";import"../portal/PortalGroup.js";import"../symbols/LineSymbol3DLayer.js";import"../symbols/LineStyleMarker3D.js";import"../core/Clonable.js";import"../symbols/ObjectSymbol3DLayer.js";import"../symbols/PathSymbol3DLayer.js";import"../symbols/TextSymbol3DLayer.js";import"../symbols/WaterSymbol3DLayer.js";import"./Thumbnail.js";import"./Symbol3DVerticalOffset.js";import"../symbols/callouts/Callout3D.js";import"../symbols/callouts/LineCallout3D.js";import"../symbols/LineSymbol3D.js";import"../symbols/MarkerSymbol.js";import"../symbols/MeshSymbol3D.js";import"../symbols/PictureFillSymbol.js";import"./urlUtils.js";import"../symbols/PictureMarkerSymbol.js";import"../symbols/PointSymbol3D.js";import"../symbols/PolygonSymbol3D.js";import"../symbols/SimpleFillSymbol.js";import"../symbols/SimpleMarkerSymbol.js";import"../symbols/TextSymbol.js";import"../symbols/WebStyleSymbol.js";import"./parser2.js";import"./mat4f32.js";import"./mat4.js";import"./_commonjsHelpers.js";import"../TimeExtent.js";import"./timeUtils.js";import"./DataLayerSource.js";import"../layers/support/Field.js";import"./domains.js";import"../layers/support/CodedValueDomain.js";import"../layers/support/Domain.js";import"../layers/support/InheritedDomain.js";import"../layers/support/RangeDomain.js";import"./fieldType.js";import"../rest/support/StatisticDefinition.js";import"./Container.js";import"./mat3f32.js";import"./DisplayObject.js";import"./ClipRect.js";import"../core/sql.js";import"./enums4.js";import"./Utils16.js";import"./number3.js";import"./enums2.js";import"./enums.js";import"./Texture.js";import"./context-util.js";import"./VertexElementDescriptor.js";import"./utils17.js";import"./MaterialKey.js";import"./alignmentUtils.js";import"./heatmapUtils.js";import"./vec4f64.js";import"./visualVariablesUtils2.js";import"./createSymbolSchema.js";import"./CIMSymbolHelper.js";import"./shapingUtils.js";import"./Rect.js";import"./mat2df32.js";import"./vec2.js";import"./vec2f32.js";import"./floatRGBA.js";import"./utils7.js";import"./GeometryUtils.js";import"./cimAnalyzer.js";import"./callExpressionWithFeature.js";import"./quantizationUtils.js";import"./ExpandedCIM.js";import"./MD5.js";import"../renderers/visualVariables/SizeVariable.js";import"../renderers/visualVariables/VisualVariable.js";import"./LegendOptions.js";import"../renderers/visualVariables/support/SizeStop.js";import"./sizeVariableUtils.js";import"./visualVariableUtils.js";import"./compilerUtils.js";import"./lengthUtils.js";import"./unitUtils.js";import"./projectionEllipsoid.js";import"./Queue.js";import"../core/workers/Connection.js";import"../core/workers/RemoteClient.js";import"./assets.js";import"../intl.js";import"./messages.js";import"./commonProperties.js";import"../support/timeUtils.js";import"./ElevationInfo.js";import"./unitConversionUtils.js";import"../layers/support/FeatureEffect.js";import"./jsonUtils.js";import"./floorFilterUtils.js";import"./popupUtils.js";import"../core/HandleOwner.js";import"../core/Handles.js";let B=class extends t{constructor(){super(...arguments),this.isAggregate=!0}getEffectivePopupTemplate(e=!1){if(this.popupTemplate)return this.popupTemplate;const t=this.sourceLayer&&this.sourceLayer.featureReduction;return t&&"popupTemplate"in t&&t.popupEnabled?t.popupTemplate:null}getObjectId(){return this.objectId}};e([i({type:Boolean})],B.prototype,"isAggregate",void 0),e([i({type:[String,Number],json:{read:!0}})],B.prototype,"objectId",void 0),B=e([o("esri.AggregateGraphic")],B);const G=B;let $=class extends v{constructor(e){super(e),this._filter=null,this.duration=r("mapview-transitions-duration"),this._excludedEffectView=new S(e),this._includedEffectView=new S(e)}get excludedEffects(){return this._excludedEffectView.effects}set featureEffect(e){this._get("featureEffect")!==e&&this._transitionTo(e)}get filter(){return this._filter||p(this.featureEffect)?.filter||null}get hasEffects(){return this._excludedEffectView.hasEffects||this._includedEffectView.hasEffects}get includedEffects(){return this._includedEffectView.effects}set scale(e){this._set("scale",e),this._excludedEffectView.scale=e,this._includedEffectView.scale=e}get transitioning(){return this._excludedEffectView.transitioning||this._includedEffectView.transitioning}transitionStep(e,t){this._set("scale",t),this.transitioning?(this._includedEffectView.transitionStep(e,t),this._excludedEffectView.transitionStep(e,t),this.transitioning||(this._filter=null)):(this._excludedEffectView.scale=t,this._includedEffectView.scale=t)}end(){this._includedEffectView.end(),this._excludedEffectView.end(),this._filter=null}_transitionTo(e){const t=this._get("featureEffect"),i=p(e),r=p(i?.includedEffect),s=p(i?.excludedEffect),o=this._includedEffectView.canTransitionTo(r)&&this._excludedEffectView.canTransitionTo(s);this._includedEffectView.effect=r,this._excludedEffectView.effect=s,this._set("featureEffect",i),this._filter=i?.filter||t?.filter||null,o||this.end()}};e([i()],$.prototype,"_filter",void 0),e([i()],$.prototype,"_excludedEffectView",void 0),e([i()],$.prototype,"_includedEffectView",void 0),e([i()],$.prototype,"duration",void 0),e([i()],$.prototype,"excludedEffects",null),e([i()],$.prototype,"featureEffect",null),e([i()],$.prototype,"filter",null),e([i()],$.prototype,"hasEffects",null),e([i()],$.prototype,"includedEffects",null),e([i({value:0})],$.prototype,"scale",null),e([i()],$.prototype,"transitioning",null),$=e([o("esri.layers.effects.FeatureEffectView")],$);const K=$;function W(e){return e.some((e=>e.globalId))}function X(e){return e.filter((e=>!e.error)).map((e=>e.objectId??e.globalId))}function Y(e,t){const i=new Set(e);for(const e of t.values())i.add(e);return i}function Z(e,t){const i=new Set(e);for(const e of t.values())i.delete(e);return i}let ee=class extends v{constructor(e){super(e),this._hasGlobalIds=!1}normalizeCtorArgs(e){return this._queueProcessor=new k({concurrency:1,process:e.process}),{}}destroy(){this.clear()}get updating(){return this._queueProcessor.length>0}clear(){this._queueProcessor.clear()}push(e){const t=this._queueProcessor,i=t.last();switch(e.type){case"update":case"refresh":if(i?.type===e.type)return;t.push(e).finally((()=>this.notifyChange("updating")));break;case"edit":{const r="processed-edit"===i?.type?i:null;r&&t.popLast();const s=this._mergeEdits(r,e);for(const e of s)t.push(e).finally((()=>this.notifyChange("updating")));break}}this.notifyChange("updating")}_mergeEdits(e,t){const{addedFeatures:i,deletedFeatures:r,updatedFeatures:s}=t.edits;if(this._hasGlobalIds=this._hasGlobalIds||W(i)||W(s)||W(r),this._hasGlobalIds)return[e,{type:"processed-edit",edits:{addOrModified:[...i,...s],removed:r}}];const o=new Set(X(e?.edits.addOrModified??[])),a=new Set(X(e?.edits.removed??[])),n=new Set([...X(i),...X(s)]),l=new Set(X(r));return[{type:"processed-edit",edits:{addOrModified:Array.from(Y(Z(o,l),n)).map((e=>({objectId:e}))),removed:Array.from(Y(Z(a,n),l)).map((e=>({objectId:e})))}}]}};e([i({readOnly:!0})],ee.prototype,"updating",null),ee=e([o("esri.views.2d.layers.support.FeatureCommandQueue")],ee);const te=ee;let ie=class extends P{constructor(e){super(e),this._startupResolver=d(),this.isReady=!1}initialize(){this._controller=new AbortController,this.addResolvingPromise(this._startWorker(this._controller.signal))}destroy(){this._controller.abort(),this._connection&&this._connection.close()}set tileRenderer(e){this.client.tileRenderer=e}get closed(){return this._connection.closed}async startup(e,t,i,r){await this.when();const s=this._controller.signal,o=(a=i.source,Array.isArray(a)?{transferList:i.source,signal:s}:void 0);var a;const n={service:i,config:t,tileInfo:e.tileInfo.toJSON(),tiles:r};await this._connection.invoke("startup",n,o),this._startupResolver.resolve(),this._set("isReady",!0)}async updateTiles(e){return await this._startupResolver.promise,y(this._connection.invoke("updateTiles",e))}async update(e){const t={config:e};return await this._startupResolver.promise,this._connection.invoke("update",t)}async applyUpdate(e){return await this._startupResolver.promise,this._connection.invoke("applyUpdate",e)}async setHighlight(e){return await this._startupResolver.promise,y(this._connection.invoke("controller.setHighlight",e))}async stop(){if(await this._startupResolver.promise,!this.closed)return y(this._connection.invoke("stop"))}async refresh(e){return await this._startupResolver.promise,y(this._connection.invoke("controller.refresh",e))}async querySummaryStatistics(e,t,i){return await this._startupResolver.promise,this._connection.invoke("controller.querySummaryStatistics",{query:e.toJSON(),params:t},i)}async queryUniqueValues(e,t,i){return await this._startupResolver.promise,this._connection.invoke("controller.queryUniqueValues",{query:e.toJSON(),params:t},i)}async queryClassBreaks(e,t,i){return await this._startupResolver.promise,this._connection.invoke("controller.queryClassBreaks",{query:e.toJSON(),params:t},i)}async queryHistogram(e,t,i){return await this._startupResolver.promise,this._connection.invoke("controller.queryHistogram",{query:e.toJSON(),params:t},i)}async queryFeatures(e,t){return await this._startupResolver.promise,this._connection.invoke("controller.queryFeatures",e.toJSON(),t)}async queryVisibleFeatures(e,t){return await this._startupResolver.promise,this._connection.invoke("controller.queryVisibleFeatures",e.toJSON(),t)}async queryObjectIds(e,t){return await this._startupResolver.promise,this._connection.invoke("controller.queryObjectIds",e.toJSON(),t)}async queryFeatureCount(e,t){return await this._startupResolver.promise,this._connection.invoke("controller.queryFeatureCount",e.toJSON(),t)}async queryExtent(e,t){return this._connection.invoke("controller.queryExtent",e.toJSON(),t)}async queryLatestObservations(e,t){return await this._startupResolver.promise,this._connection.invoke("controller.queryLatestObservations",e.toJSON(),t)}async queryStatistics(e){return await this._startupResolver.promise,this._connection.invoke("controller.queryStatistics",e)}async getObjectId(e){return await this._startupResolver.promise,this._connection.invoke("controller.getObjectId",e)}async getDisplayId(e){return await this._startupResolver.promise,this._connection.invoke("controller.getDisplayId",e)}async getFeatures(e){return await this._startupResolver.promise,this._connection.invoke("controller.getFeatures",e)}async getAggregates(){return await this._startupResolver.promise,this._connection.invoke("controller.getAggregates")}async getAggregateValueRanges(){return await this._startupResolver.promise,this._connection.invoke("controller.getAggregateValueRanges")}async mapValidDisplayIds(e){return await this._startupResolver.promise,this._connection.invoke("controller.mapValidDisplayIds",e)}async onEdits(e){return await this._startupResolver.promise,y(this._connection.invoke("controller.onEdits",e))}async enableEvent(e,t){return await this._startupResolver.promise,y(this._connection.invoke("controller.enableEvent",{name:e,value:t}))}pauseStream(){return y(this._connection.invoke("controller.pauseStream"))}resumeStream(){return y(this._connection.invoke("controller.resumeStream"))}async _startWorker(e){try{this._connection=await L("Pipeline",{client:this.client,strategy:"dedicated",signal:e})}catch(e){m(e)}}};e([i()],ie.prototype,"isReady",void 0),e([i()],ie.prototype,"client",void 0),e([i()],ie.prototype,"tileRenderer",null),ie=e([o("esri.views.2d.layers.support.FeatureLayerProxy")],ie);const re=ie;class se{constructor(e){this._tiles=new Map,this.buffer=0,this.acquireTile=e.acquireTile,this.releaseTile=e.releaseTile,this.tileInfoView=e.tileInfoView,this.buffer=e.buffer}destroy(){}clear(){this._tiles.forEach((e=>this._releaseTile(e)))}tileKeys(){const e=[];return this._tiles.forEach(((t,i)=>e.push(i))),e}update(e){const t=this.tileInfoView.getTileCoverage(e.state,this.buffer,"closest"),{spans:i,lodInfo:r}=t,{level:s}=r,o=[],a=[],n=new Set,l=new Set;for(const{row:e,colFrom:t,colTo:a}of i)for(let i=t;i<=a;i++){const t=N.getId(s,e,r.normalizeCol(i),r.getWorldForColumn(i)),a=this._getOrAcquireTile(o,t);n.add(t),a.isReady?a.visible=!0:l.add(a.key)}return l.forEach((e=>this._addPlaceholders(n,e))),this._tiles.forEach((e=>{n.has(e.key.id)||(a.push(e.key.id),this._releaseTile(e))})),M.pool.release(t),{hasMissingTiles:l.size>0,added:o,removed:a}}_getOrAcquireTile(e,t){if(!this._tiles.has(t)){const i=this.acquireTile(new N(t));e.push(t),this._tiles.set(t,i),i.visible=!1}return this._tiles.get(t)}_getTile(e){return this._tiles.get(e)}_releaseTile(e){this._tiles.delete(e.key.id),this.releaseTile(e)}_addPlaceholders(e,t){const i=this._addPlaceholderChildren(e,t);Math.abs(1-i)<1e-6||this._addPlaceholderParent(e,t)||(this._getTile(t.id).visible=!0)}_addPlaceholderChildren(e,t){let i=0;return this._tiles.forEach((r=>{i+=this._addPlaceholderChild(e,r,t)})),i}_addPlaceholderChild(e,t,i){return t.key.level<=i.level||!t.hasData||!i.contains(t.key)?0:(t.visible=!0,e.add(t.key.id),1/(1<<2*(t.key.level-i.level)))}_addPlaceholderParent(e,t){let i=t.getParentKey(),r=0,s=null;for(;u(i);){if(e.has(i.id))return!0;const t=this._getTile(i.id);if(t?.isReady)return t.visible=!0,e.add(t.key.id),!0;t?.hasData&&t.patchCount>r&&(r=t.patchCount,s=t),i=i.getParentKey()}return!!s&&(s.visible=!0,e.add(s.key.id),!0)}}function oe(e){return e&&"openPorts"in e}const ae=l.getLogger("esri.views.2d.layers.FeatureLayerView2D");let ne=class extends(A(J(C(z)))){constructor(){super(...arguments),this._pipelineIsUpdating=!0,this._commandsQueue=new te({process:e=>{switch(e.type){case"processed-edit":return this._doEdit(e);case"refresh":return this._doRefresh(e.dataChanged);case"update":return this._doUpdate()}}}),this._visibilityOverrides=new Set,this._highlightIds=new Map,this._updateHighlight=f((async()=>this._proxy.setHighlight(Array.from(this._highlightIds.keys())))),this._uploadsLocked=!1,this._needsClusterSizeUpdate=!1,this.featureEffectView=new K,this._lastDefinitionExpression=null}destroy(){c(this._updateClusterSizeTask,(e=>e.remove())),this._proxy?.destroy(),this._commandsQueue.destroy()}initialize(){this.addResolvingPromise(Promise.all([this._initProxy(),this._initServiceOptions()])),this.handles.add([this.on("valueRangesChanged",(e=>{this._set("_aggregateValueRanges",e.valueRanges)})),_((()=>this.featureEffect),(e=>{this.featureEffectView.featureEffect=e}),{initial:!0,sync:!0})])}async _initProxy(){const e=this.layer;if("isTable"in e&&e.isTable)throw new n("featurelayerview:table-not-supported","table feature layer can't be displayed",{layer:this.layer});const t="feature"===e.type||"subtype-group"===e.type,i="capabilities"in e&&e.capabilities.operations.supportsQuery;if(t&&!i)throw new n("featurelayerview:query-not-supported","layer view requires a layer with query capability",{layer:e});this._proxy&&this._proxy.destroy();const r=this._createClientOptions();return this._set("_proxy",new re({client:r})),this._proxy.when()}async _initServiceOptions(){return this._set("_serviceOptions",await this._createServiceOptions()),this._serviceOptions}get orderByFields(){return"stream"!==this._serviceOptions.type&&this._serviceOptions.orderByFields}get labelsVisible(){const e="subtype-group"===this.layer.type?this.layer.sublayers.items:[this.layer];return!this.suspended&&e.some((e=>e.labelingInfo&&e.labelsVisible))}get queryMode(){return this._serviceOptions.type}get renderingConfigHash(){if(!this.layer)return null;const e=this.availableFields,t=this.layer,i=this.view.floors,{definitionExpression:r}=t,s="subtype-group"!==this.layer.type&&this.layer.labelsVisible&&this.layer.labelingInfo,o="renderer"in t&&t.renderer,a="feature"===t.type?t.gdbVersion:void 0,n="feature"===t.type&&t.historicMoment?t.historicMoment.getTime():void 0,{timeExtent:l}=this,p="customParameters"in t?JSON.stringify(t.customParameters):void 0,c="apiKey"in t?t.apiKey:void 0,h="stream"===t.type?`${JSON.stringify(t.geometryDefinition)}${t.definitionExpression}`:null,d=JSON.stringify(this.clips),y=t.featureReduction&&t.featureReduction.toJSON(),m="orderBy"in this.layer&&JSON.stringify(this.layer.orderBy),f="sublayers"in this.layer&&this.layer.sublayers.items.reduce(((e,t)=>e+`${t.visible?1:0}.${JSON.stringify(t.renderer)}.${t.labelsVisible}\n.${JSON.stringify(t.labelingInfo)}`),""),g="subtypeCode"in this.layer&&this.layer.subtypeCode;return JSON.stringify({orderBy:m,sublayerHash:f,subtypeCode:g,filterHash:u(this.filter)&&this.filter.toJSON(),effectHash:u(this.featureEffect)&&this.featureEffect.toJSON(),streamFilter:h,gdbVersion:a,definitionExpression:r,historicMoment:n,availableFields:e,renderer:o,labelingInfo:s,timeExtent:l,floors:i,clipsHash:d,featureReduction:y,customParameters:p,apiKey:c})}highlight(e){let i;return e instanceof t?i=[e.getObjectId()]:"number"==typeof e||"string"==typeof e?i=[e]:Array.isArray(e)&&e.length>0?i="number"==typeof e[0]||"string"==typeof e[0]?e:e.map((e=>e?.getObjectId())):a.isCollection(e)&&e.length>0&&(i=e.map((e=>e?.getObjectId())).toArray()),i=i?.filter((e=>null!=e)),i&&i.length?(this._addHighlight(i),{remove:()=>this._removeHighlight(i)}):{remove:()=>{}}}hasHighlight(){return!!this._highlightIds.size}async hitTest(e,i){if(!this.tileRenderer)return null;const r=await this.tileRenderer.hitTest(i);if(0===r.length)return null;const{features:s,aggregates:o}=await this._proxy.getFeatures(r);return[...o.map((t=>this._createGraphicHit(e,G.fromJSON(t)))),...s.map((i=>this._createGraphicHit(e,t.fromJSON(i))))]}async queryAggregates(){return(await this._proxy.getAggregates()).map((e=>G.fromJSON(e)))}queryStatistics(){return this._proxy.queryStatistics()}async querySummaryStatistics(e,t,i){const r={...t,scale:this.view.scale};return this._proxy.querySummaryStatistics(this._cleanUpQuery(e),r,i)}async queryUniqueValues(e,t,i){const r={...t,scale:this.view.scale};return this._proxy.queryUniqueValues(this._cleanUpQuery(e),r,i)}async queryClassBreaks(e,t,i){const r={...t,scale:this.view.scale};return this._proxy.queryClassBreaks(this._cleanUpQuery(e),r,i)}async queryHistogram(e,t,i){const r={...t,scale:this.view.scale};return this._proxy.queryHistogram(this._cleanUpQuery(e),r,i)}queryFeatures(e,t){return this.queryFeaturesJSON(e,t).then((e=>{const t=R.fromJSON(e);return t.features.forEach((e=>this._setLayersForFeature(e))),t}))}queryVisibleFeatures(e,t){return this._proxy.queryVisibleFeatures(this._cleanUpQuery(e),t).then((e=>{const t=R.fromJSON(e);return t.features.forEach((e=>this._setLayersForFeature(e))),t}))}queryFeaturesJSON(e,t){return this._proxy.queryFeatures(this._cleanUpQuery(e),t)}queryObjectIds(e,t){return this._proxy.queryObjectIds(this._cleanUpQuery(e),t)}queryFeatureCount(e,t){return this._proxy.queryFeatureCount(this._cleanUpQuery(e),t)}queryExtent(e,t){return this._proxy.queryExtent(this._cleanUpQuery(e),t).then((e=>({count:e.count,extent:Q.fromJSON(e.extent)})))}setVisibility(e,t){t?this._visibilityOverrides.delete(e):this._visibilityOverrides.add(e),this._update()}update(e){if(!this._tileStrategy||!this.tileRenderer)return;const{hasMissingTiles:t,added:i,removed:r}=this._tileStrategy.update(e);(i.length||r.length)&&this._proxy.updateTiles({added:i,removed:r}),t&&this.requestUpdate(),this.notifyChange("updating")}attach(){this.view.timeline.record(`${this.layer.title} (FeatureLayer) Attach`),this._tileStrategy=new se({acquireTile:e=>this._acquireTile(e),releaseTile:e=>this._releaseTile(e),tileInfoView:this.view.featuresTilingScheme,buffer:0}),this.handles.add(_((()=>this.renderingConfigHash),(()=>this._update()),j),"attach"),"stream"!==this.layer.type&&this.handles.add(this.layer.on("edits",(e=>this._edit(e))),"attach")}detach(){this._commandsQueue.clear(),this._proxy?.stop(),this.container.removeAllChildren(),this.handles.remove("attach"),this.tileRenderer&&(this.tileRenderer.uninstall(this.container),this.tileRenderer=null),this._tileStrategy&&(this._tileStrategy.destroy(),this._tileStrategy=null),this._tileRendererHash=null}moveStart(){this.requestUpdate()}viewChange(){this.requestUpdate()}moveEnd(){this.requestUpdate()}isUpdating(){const e="renderer"in this.layer&&null!=this.layer.renderer,t=this._commandsQueue.updating,i=null!=this._updatingRequiredFieldsPromise,s=!this._proxy||!this._proxy.isReady,o=this._pipelineIsUpdating,a=null==this.tileRenderer||this.tileRenderer?.updating,n=e&&(t||i||s||o||a);return r("esri-2d-log-updating")&&console.log(`Updating FLV2D: ${n}\n  -> hasRenderer ${e}\n  -> hasPendingCommand ${t}\n  -> updatingRequiredFields ${i}\n  -> updatingProxy ${s}\n  -> updatingPipeline ${o}\n  -> updatingTileRenderer ${a}\n`),n}_createClientOptions(){return{setUpdating:e=>{this._set("_pipelineIsUpdating",e)},emitEvent:e=>{this.emit(e.name,e.event)}}}async _detectQueryMode(e){const t="path"in e,i="editingInfo"in this.layer&&this.layer.editingInfo?.lastEditDate,s=!!this.layer.refreshInterval,o=!i&&s;if(t&&("feature"===this.layer.type||"subtype-group"===this.layer.type)&&"point"===this.layer.geometryType&&this.layer.capabilities.query.supportsPagination&&!this.layer.capabilities.operations.supportsEditing&&!o&&r("featurelayer-snapshot-enabled"))try{const e=await this.layer.queryFeatureCount();if(e<=r("featurelayer-snapshot-point-min-threshold"))return{mode:"snapshot",featureCount:e};const t=r("featurelayer-snapshot-point-max-threshold"),i=r("featurelayer-snapshot-point-coverage"),s=this.view.extent,o=p(this.layer.fullExtent),a=o?.clone().intersection(s),n=u(a)?a.width*a.height:0,l=o?.width*o?.height,c=0===l?0:n/l;if(e<=t&&c>=i)return{mode:"snapshot",featureCount:e}}catch(e){ae.warn("mapview-feature-layer","Encountered an error when querying for featureCount",{error:e})}return{mode:"on-demand"}}async _createServiceOptions(){const e=this.layer;if("stream"===e.type)return null;const{capabilities:t,objectIdField:i}=e,r=e.fields.map((e=>e.toJSON())),o=u(e.fullExtent)&&e.fullExtent.toJSON(),a=D(e.geometryType),n=e.timeInfo&&e.timeInfo.toJSON()||null,l=e.spatialReference?e.spatialReference.toJSON():null,p="feature"===e.type?e.globalIdField:null;let c;"ogc-feature"===e.type?c=e.source.getFeatureDefinition():oe(e.source)?c=await e.source.openPorts():e.parsedUrl&&(c=s(e.parsedUrl),"dynamicDataSource"in e&&e.dynamicDataSource&&(c.query={layer:JSON.stringify({source:e.dynamicDataSource})}));const h="datesInUnknownTimezone"in this.layer&&this.layer.datesInUnknownTimezone,d=("subtypeField"in this.layer&&this.layer.subtypeField)??null,{mode:y,featureCount:m}=await this._detectQueryMode(c);let f=this.layer.objectIdField;if("feature"===this.layer.type&&u(this.layer.orderBy)&&this.layer.orderBy.length){const e=!this.layer.orderBy[0].valueExpression&&this.layer.orderBy[0].field;e&&(f=e)}return{type:y,timeReferenceUnknownClient:h,subtypeField:d,featureCount:m,globalIdField:p,maxRecordCount:t.query.maxRecordCount,tileMaxRecordCount:t.query.tileMaxRecordCount,capabilities:t,fields:r,fullExtent:o,geometryType:a,objectIdField:i,source:c,timeInfo:n,spatialReference:l,orderByFields:f}}async _createMemoryServiceOptions(e){const t=await e.openPorts();return{...this._createServiceOptions(),type:"memory",source:t}}_cleanUpQuery(e){const t=E.from(e)||this.createQuery();return t.outSpatialReference||(t.outSpatialReference=this.view.spatialReference),t}async _update(){return this._commandsQueue.push({type:"update"})}async _edit(e){if(!this.suspended)return this._validateEdit(e)?this._commandsQueue.push({type:"edit",edits:e}):void 0;this._clearTiles()}async doRefresh(e){if(this._tileStrategy.tileKeys().length)return this.suspended&&e?void this._clearTiles():this._commandsQueue.push({type:"refresh",dataChanged:e})}_clearTiles(){this._tileStrategy.tileKeys().length&&(this._proxy.updateTiles({added:[],removed:this._tileStrategy.tileKeys()}),this._tileStrategy.clear(),this.requestUpdate(),this._commandsQueue.clear(),this._update())}_validateEdit(e){const t="globalIdField"in this.layer&&this.layer.globalIdField,i=e.deletedFeatures.some((e=>-1===e.objectId||!e.objectId)),r=t&&this.availableFields.includes(t);return i&&!r?(ae.error(new n("mapview-apply-edits",`Editing the specified service requires the layer's globalIdField, ${t} to be included the layer's outFields for updates to be reflected on the map`)),null):e}async _doUpdate(){try{if(this.destroyed||!this._hasRequiredSupport(this.layer)||!this._tileStrategy)return;const{featureEffectView:e,filter:t}=this;await this._updateRequiredFields();const{renderer:i}=this._getEffectiveRenderer();this._set("_effectiveRenderer",i);const r=this._createSchemaConfig(),s=this._createConfiguration(r,t,e.filter),o=this._lastDefinitionExpression!==s.schema.source.definitionExpression;this._lastDefinitionExpression=s.schema.source.definitionExpression;const a=s.schema.tileRenderer,n=this._createTileRendererHash(a);if("snapshot"===this._serviceOptions.type&&(s.schema.source.featureCount=this._serviceOptions.featureCount),n!==this._tileRendererHash){await this._initTileRenderer(a,i);const e=this.layer,t="stream"===e.type?await this._initServiceOptions():this._serviceOptions;this.tileRenderer.onConfigUpdate(i),"stream"!==e.type&&oe(e.source)&&(t.source=await e.source.openPorts());const r={added:this._tileStrategy.tileKeys(),removed:[]};await this._proxy.startup(this.view.featuresTilingScheme,s,t,r),this.hasHighlight()&&await this._proxy.setHighlight(Array.from(this._highlightIds.keys())),await this._onceTilesUpdated(),this.tileRenderer.onConfigUpdate(i)}else{"snapshot"===this._serviceOptions.type&&o&&(s.schema.source.featureCount=await this.layer.queryFeatureCount());const e=await this._proxy.update(s);(e.mesh||e.targets.aggregate)&&this._lockGPUUploads();try{await this._proxy.applyUpdate(e)}catch(e){g(e)||ae.error(e)}(e.mesh||e.targets.aggregate)&&this._unlockGPUUploads(),this.tileRenderer.onConfigUpdate(i),this._updateClusterSizeVariable(),this._forceAttributeTextureUpload()}this._tileRendererHash=n,this.tileRenderer.invalidateLabels(),this.requestUpdate()}catch(e){}}async _doEdit(e){try{await this._proxy.onEdits(e)}catch(e){g(e)}}async _doRefresh(e){this._lockGPUUploads();try{await this._proxy.refresh(e)}catch(e){g(e)}this._unlockGPUUploads(),this.layer?.featureReduction&&this._updateClusterSizeVariable()}_updateClusterSizeVariable(){this._needsClusterSizeUpdate&&(this.tileRenderer.onConfigUpdate(this._effectiveRenderer),this._needsClusterSizeUpdate=!1)}_createUpdateClusterSizeTask(e,t){return _((()=>this._aggregateValueRanges),(i=>{this._updateClusterEffectiveRendererSizeVariable(e,t,i),this._needsClusterSizeUpdate=!0,this._uploadsLocked||this._updateClusterSizeVariable()}))}async _updateClusterEffectiveRendererSizeVariable(e,t,i){if(e.dynamicClusterSize&&"visualVariables"in e&&e.visualVariables){const r=F(e.visualVariables);if(u(r)&&"cluster_count"===r.field){const s=e.visualVariables.indexOf(r);e.visualVariables[s]=V(t,i);const o=e.clone();o.dynamicClusterSize=!0,this._set("_effectiveRenderer",o)}}}_getEffectiveRenderer(){const e="renderer"in this.layer&&this.layer.renderer,t=this.layer.featureReduction;if(u(this._updateClusterSizeTask)&&(this._updateClusterSizeTask.remove(),this._updateClusterSizeTask=null),t&&"renderer"in t&&t.renderer){const e=[];for(const i of t.fields??[])T(e,i);return{renderer:t.renderer,aggregateFields:e,featureReduction:t}}if(t&&"cluster"===t.type&&q(e)){const i=t,r=[],s=O(r,e,i,this._aggregateValueRanges);return c(this._updateClusterSizeTask,(e=>e.remove())),this._updateClusterSizeTask=this._createUpdateClusterSizeTask(s,i),{renderer:s,aggregateFields:r,featureReduction:t}}return{renderer:e,aggregateFields:[],featureReduction:null}}_acquireTile(e){const t=this.tileRenderer.acquireTile(e);return t.once("attach",(()=>{this.requestUpdate()})),t}_releaseTile(e){this.tileRenderer.releaseTile(e)}async _initTileRenderer(e,t){const i=await async function(e,t){if(!e)return null;switch(e.type){case"symbol":return new((await import("./SymbolTileRenderer.js")).default)(t);case"heatmap":return new((await import("./HeatmapTileRenderer.js")).default)(t)}}(e,{layerView:this,tileInfoView:this.view.featuresTilingScheme,layer:this.layer});return this.tileRenderer&&(this._tileStrategy.clear(),this.tileRenderer.uninstall(this.container),this.tileRenderer.destroy(),this.tileRenderer=null),this.destroyed?null:(this._proxy.tileRenderer=i,this._set("tileRenderer",i),this.tileRenderer.install(this.container),this.tileRenderer.onConfigUpdate(t),this.requestUpdate(),this.tileRenderer)}_createTileRendererHash(e){return`${e.type}`}get hasFilter(){const e=!!("floorInfo"in this.layer&&this.layer.floorInfo&&this.view.floors&&this.view.floors.length);return!!this.filter||e||!!this._visibilityOverrides.size||!!this.timeExtent}_injectOverrides(e){const t=u(e)?e.timeExtent:null,i=u(this.timeExtent)&&u(t)?this.timeExtent.intersection(t):this.timeExtent||t;let r=null;const s="floorInfo"in this.layer&&this.layer.floorInfo;if(s){const t=u(e)&&e.where;r=this._addFloorFilterClause(t)}if(!this._visibilityOverrides.size&&!i&&!s)return u(e)?e.toJSON():null;(e=u(e)&&e.clone()||new w).timeExtent=i,r&&(e.where=r);const o=e.toJSON();return o.hiddenIds=Array.from(this._visibilityOverrides),o}_addFloorFilterClause(e){const t=this.layer;let i=e||"";if("floorInfo"in t&&t.floorInfo){let e=this.view.floors;if(!e||!e.length)return i;t.floorInfo.viewAllLevelIds?.length&&(e=t.floorInfo.viewAllLevelIds);const r=e.filter((e=>""!==e)).map((e=>"'"+e+"'"));r.push("''");const s=t.floorInfo.floorField;let o="("+s+" IN ({ids}) OR "+s+" IS NULL)";if(o=o.replace("{ids}",r.join(", ")),u(i)&&i.includes(s)){let e=new RegExp("AND \\("+s+".*NULL\\)","g");i=i.replace(e,""),e=new RegExp("\\("+s+".*NULL\\)","g"),i=i.replace(e,""),i=i.replace(/\s+/g," ").trim()}i=""!==i?"("+i+") AND "+o:o}return""!==i?i:null}_createConfiguration(e,t,i){const r="feature"===this.layer.type&&this.layer.historicMoment?this.layer.historicMoment.getTime():void 0,s="feature"===this.layer.type?this.layer.gdbVersion:void 0,o=new Array(x),a=this._injectOverrides(t);o[0]=a,o[1]=u(i)?i.toJSON():null;const n=U(e);if(h(n))return null;const l=H("2d");return{availableFields:this.availableFields,gdbVersion:s,historicMoment:r,devicePixelRatio:window.devicePixelRatio||1,filters:o,schema:n,supportsTextureFloat:l.supportsTextureFloat,maxTextureSize:l.maxTextureSize}}_hasRequiredSupport(e){return!("renderer"in e)||I(e.renderer)}_onceTilesUpdated(){return this.requestUpdate(),b((()=>!this._pipelineIsUpdating))}_lockGPUUploads(){this.tileRenderer&&(this._uploadsLocked=!0,this.tileRenderer.lockGPUUploads())}_unlockGPUUploads(){this.tileRenderer&&(this._uploadsLocked=!1,this.tileRenderer.unlockGPUUploads())}_forceAttributeTextureUpload(){this.tileRenderer&&this.tileRenderer.forceAttributeTextureUpload()}_createSchemaConfig(){const e="feature"===this.layer.type?this.layer.historicMoment:null,t="feature"===this.layer.type?this.layer.gdbVersion:null;return{renderer:"renderer"in this.layer&&this.layer.renderer,spatialReference:this.layer.spatialReference,timeExtent:this.layer.timeExtent,definitionExpression:this.layer.definitionExpression,featureReduction:this.layer.featureReduction,fields:this.layer.fields,geometryType:this.layer.geometryType,historicMoment:e,labelsVisible:"labelsVisible"in this.layer&&this.layer.labelsVisible,labelingInfo:"labelingInfo"in this.layer&&this.layer.labelingInfo,availableFields:this.availableFields,featureEffect:this.featureEffect,filter:this.filter,gdbVersion:t,pixelBuffer:0,orderBy:"orderBy"in this.layer&&this.layer.orderBy?this.layer.orderBy:null,customParameters:{..."customParameters"in this.layer?this.layer.customParameters:void 0,token:"apiKey"in this.layer?this.layer.apiKey:void 0},subtypeCode:"subtypeCode"in this.layer?this.layer.subtypeCode:void 0,subtypeField:"subtypeField"in this.layer?this.layer.subtypeField:void 0}}_addHighlight(e){for(const t of e)if(this._highlightIds.has(t)){const e=this._highlightIds.get(t);this._highlightIds.set(t,e+1)}else this._highlightIds.set(t,1);this._updateHighlight().catch((e=>{g(e)||ae.error(e)}))}_removeHighlight(e){for(const t of e)if(this._highlightIds.has(t)){const e=this._highlightIds.get(t)-1;0===e?this._highlightIds.delete(t):this._highlightIds.set(t,e)}this._updateHighlight().catch((e=>{g(e)||ae.error(e)}))}_setLayersForFeature(e){const t=this.layer;e.layer=t,e.sourceLayer=t}_createGraphicHit(e,t){return this._setLayersForFeature(t),u(t.geometry)&&(t.geometry.spatialReference=this.view.spatialReference),{type:"graphic",graphic:t,layer:this.layer,mapPoint:e}}};e([i()],ne.prototype,"_serviceOptions",void 0),e([i()],ne.prototype,"_proxy",void 0),e([i()],ne.prototype,"_pipelineIsUpdating",void 0),e([i()],ne.prototype,"_effectiveRenderer",void 0),e([i()],ne.prototype,"_aggregateValueRanges",void 0),e([i()],ne.prototype,"_commandsQueue",void 0),e([i()],ne.prototype,"featureEffectView",void 0),e([i()],ne.prototype,"labelsVisible",null),e([i({readOnly:!0})],ne.prototype,"queryMode",null),e([i()],ne.prototype,"renderingConfigHash",null),e([i()],ne.prototype,"tileRenderer",void 0),e([i()],ne.prototype,"updating",void 0),ne=e([o("esri.views.2d.layers.FeatureLayerView2D")],ne);const le=ne;export{le as default};
