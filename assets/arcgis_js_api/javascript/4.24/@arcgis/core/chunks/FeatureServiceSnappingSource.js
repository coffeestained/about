/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{_ as e}from"./tslib.es6.js";import t from"../core/Accessor.js";import{HandleOwner as o,HandleOwnerMixin as i}from"../core/HandleOwner.js";import{m as r,d as s}from"./handleUtils.js";import{i as n,a as l}from"./maybe.js";import{watch as a,sync as p,initial as m}from"../core/reactiveUtils.js";import{property as d}from"../core/accessorSupport/decorators/property.js";import"../core/lang.js";import"./ensureType.js";import{subclass as u}from"../core/accessorSupport/decorators/subclass.js";import{s as c}from"./mathUtils.js";import{c as y}from"./vec4f64.js";import{c as j,g as h,h as f}from"./boundedPlane.js";import{s as g}from"./layerViewUtils.js";import{V as b}from"./FeatureTileDescriptor3D.js";import{c as v}from"./queryEngineUtils.js";import S from"../core/Handles.js";import w from"../geometry/Polygon.js";import{t as I,q as O}from"./aaBoundingRect.js";import{T as k}from"./TileTreeDebugger.js";import{whenOrAbort as H}from"../core/promiseUtils.js";import{W as C}from"./WorkerHandle.js";import{f as T}from"./typeUtils.js";import P from"../geometry/Point.js";import U from"../layers/support/LOD.js";import M from"../layers/support/TileInfo.js";import{d as D}from"./debugFlags.js";import"./get.js";import"./utils.js";import"./metadata.js";import"./Logger.js";import"../config.js";import"./object.js";import"./string.js";import"./ArrayPool.js";import"./tracking.js";import"./watch.js";import"../core/scheduling.js";import"./nextTick.js";import"../core/Error.js";import"../core/Collection.js";import"../core/Evented.js";import"./shared.js";import"./SimpleObservable.js";import"./common.js";import"./vectorStacks.js";import"./byteSizeEstimations.js";import"./quatf64.js";import"./mat4f64.js";import"./vec2f64.js";import"./mat4.js";import"./sphere.js";import"./ray.js";import"./lineSegment.js";import"./plane.js";import"./mathUtils2.js";import"./SnappingManager.js";import"./vec2.js";import"./QueryEngineResult.js";import"./extentUtils.js";import"./quantizationUtils.js";import"../geometry/support/jsonUtils.js";import"../geometry/Extent.js";import"../geometry/Geometry.js";import"../core/JSONSupport.js";import"./reader.js";import"../geometry/SpatialReference.js";import"./writer.js";import"../geometry/support/webMercatorUtils.js";import"./Ellipsoid.js";import"../core/accessorSupport/decorators/cast.js";import"../geometry/Multipoint.js";import"./zmUtils.js";import"../geometry/Polyline.js";import"./ItemCache.js";import"./MemCache.js";import"../core/sql/WhereClause.js";import"./_commonjsHelpers.js";import"./utils11.js";import"./generateRendererUtils.js";import"./jsonMap.js";import"./colorRamps.js";import"../rest/support/AlgorithmicColorRamp.js";import"../Color.js";import"./colorUtils.js";import"./enumeration.js";import"../rest/support/ColorRamp.js";import"../rest/support/MultipartColorRamp.js";import"../symbols/Symbol.js";import"./projectionSupport.js";import"../geometry/projection.js";import"./unitUtils.js";import"./projectionEllipsoid.js";import"./pe.js";import"./assets.js";import"../request.js";import"../kernel.js";import"../core/urlUtils.js";import"./geodesicConstants.js";import"../geometry/support/GeographicTransformation.js";import"../geometry/support/GeographicTransformationStep.js";import"./zscale.js";import"./json.js";import"./utils18.js";import"../geometry/support/normalizeUtils.js";import"./normalizeUtilsCommon.js";import"../geometry.js";import"./featureConversionUtils.js";import"./OptimizedGeometry.js";import"./OptimizedFeatureSet.js";import"../layers/support/fieldUtils.js";import"./arcadeOnDemand.js";import"./Settings2.js";import"./RightAngleSnappingHint.js";import"./geometry2dUtils.js";import"./viewUtils.js";import"./screenUtils.js";import"./elevationInfoUtils.js";import"./unitConversionUtils.js";import"./lengthUtils.js";import"../views/interactive/snapping/SnappingOptions.js";import"../views/interactive/snapping/FeatureSnappingLayerSource.js";import"./VertexSnappingCandidate.js";import"./PointSnappingHint.js";import"../Graphic.js";import"../PopupTemplate.js";import"../popup/content.js";import"../popup/content/AttachmentsContent.js";import"../popup/content/Content.js";import"../popup/content/CustomContent.js";import"../popup/content/ExpressionContent.js";import"../popup/ElementExpressionInfo.js";import"../popup/content/FieldsContent.js";import"../popup/FieldInfo.js";import"../popup/support/FieldInfoFormat.js";import"./date.js";import"./number2.js";import"./locale.js";import"../popup/content/MediaContent.js";import"../popup/content/BarChartMediaInfo.js";import"../popup/content/mixins/ChartMediaInfo.js";import"../popup/content/mixins/MediaInfo.js";import"../popup/content/support/ChartMediaInfoValue.js";import"../popup/content/support/ChartMediaInfoValueSeries.js";import"./chartMediaInfoUtils.js";import"../popup/content/ColumnChartMediaInfo.js";import"../popup/content/ImageMediaInfo.js";import"../popup/content/support/ImageMediaInfoValue.js";import"../popup/content/LineChartMediaInfo.js";import"../popup/content/PieChartMediaInfo.js";import"../popup/content/TextContent.js";import"../popup/ExpressionInfo.js";import"../popup/LayerOptions.js";import"../popup/RelatedRecordsInfo.js";import"../popup/support/RelatedRecordsInfoFieldOrder.js";import"../support/actions/ActionBase.js";import"./Identifiable.js";import"../support/actions/ActionButton.js";import"../support/actions/ActionToggle.js";import"../symbols.js";import"../symbols/CIMSymbol.js";import"../symbols/ExtrudeSymbol3DLayer.js";import"../symbols/Symbol3DLayer.js";import"./utils2.js";import"../symbols/edges/Edges3D.js";import"./materialUtils.js";import"./opacityUtils.js";import"../symbols/edges/SketchEdges3D.js";import"../symbols/edges/SolidEdges3D.js";import"./Symbol3DMaterial.js";import"../symbols/FillSymbol.js";import"../symbols/SimpleLineSymbol.js";import"../symbols/LineSymbol.js";import"../symbols/LineSymbolMarker.js";import"./lineMarkers.js";import"../symbols/FillSymbol3DLayer.js";import"../symbols/patterns/LineStylePattern3D.js";import"../symbols/patterns/StylePattern3D.js";import"./utils3.js";import"./colors.js";import"./symbolLayerUtils3D.js";import"./aaBoundingBox.js";import"../symbols/Font.js";import"../symbols/IconSymbol3DLayer.js";import"./persistableUrlUtils.js";import"../symbols/LabelSymbol3D.js";import"../symbols/Symbol3D.js";import"./collectionUtils.js";import"../portal/Portal.js";import"../core/Loadable.js";import"../core/Promise.js";import"../portal/PortalQueryParams.js";import"../portal/PortalQueryResult.js";import"../portal/PortalUser.js";import"../portal/PortalFolder.js";import"../portal/PortalGroup.js";import"../symbols/LineSymbol3DLayer.js";import"../symbols/LineStyleMarker3D.js";import"../core/Clonable.js";import"../symbols/ObjectSymbol3DLayer.js";import"../symbols/PathSymbol3DLayer.js";import"../symbols/TextSymbol3DLayer.js";import"../symbols/WaterSymbol3DLayer.js";import"./Thumbnail.js";import"./Symbol3DVerticalOffset.js";import"../symbols/callouts/Callout3D.js";import"../symbols/callouts/LineCallout3D.js";import"../symbols/LineSymbol3D.js";import"../symbols/MarkerSymbol.js";import"../symbols/MeshSymbol3D.js";import"../symbols/PictureFillSymbol.js";import"./urlUtils.js";import"../symbols/PictureMarkerSymbol.js";import"../symbols/PointSymbol3D.js";import"../symbols/PolygonSymbol3D.js";import"../symbols/SimpleFillSymbol.js";import"../symbols/SimpleMarkerSymbol.js";import"../symbols/TextSymbol.js";import"../symbols/WebStyleSymbol.js";import"../core/workers/workers.js";import"../core/workers/Connection.js";import"./Queue.js";import"../core/workers/RemoteClient.js";import"../intl.js";import"./messages.js";function E(e,t){return f(t.extent,F),h(F,c(R,e.x,e.y,0))}const F=j(),R=y();let x=class extends t{constructor(e){super(e),this.pointOfInterest=null}get tiles(){const e=this.tilesCoveringView,t=n(this.pointOfInterest)?this.pointOfInterest:this.view.center;return e.sort(((e,o)=>E(t,e)-E(t,o))),e}_scaleEnabled(){return g(this.view.scale,this.layer.minScale||0,this.layer.maxScale||0)}get tilesCoveringView(){if(!this.view.ready||!this.view.featuresTilingScheme||!this.view.state||l(this.tileInfo))return[];if(!this._scaleEnabled)return[];const{spans:e,lodInfo:t}=this.view.featuresTilingScheme.getTileCoverage(this.view.state,0),{level:o}=t,i=[];for(const{row:r,colFrom:s,colTo:n}of e)for(let e=s;e<=n;e++){const s={id:null,level:o,row:r,col:t.normalizeCol(e)};this.tileInfo.updateTileInfo(s),i.push(s)}return i}get tileInfo(){return this.view.featuresTilingScheme?.tileInfo??null}get tileSize(){return n(this.tileInfo)?this.tileInfo.size[0]:256}initialize(){this.own(a((()=>this.view?.state?.viewpoint),(()=>this.notifyChange("tilesCoveringView")),p))}};e([d({readOnly:!0})],x.prototype,"tiles",null),e([d({readOnly:!0})],x.prototype,"_scaleEnabled",null),e([d({readOnly:!0})],x.prototype,"tilesCoveringView",null),e([d({readOnly:!0})],x.prototype,"tileInfo",null),e([d({readOnly:!0})],x.prototype,"tileSize",null),e([d({constructOnly:!0})],x.prototype,"view",void 0),e([d({constructOnly:!0})],x.prototype,"layer",void 0),e([d()],x.prototype,"pointOfInterest",void 0),x=e([u("esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceTiles2D")],x);let L=class extends o{constructor(e){super(e),this.pointOfInterest=null}get tiles(){const e=this.tilesCoveringView,t=this.effectivePointOfInterest;if(n(t)){const o=e.map((e=>E(t,e)));for(let i=1;i<o.length;i++)if(o[i-1]>o[i])return e.sort(((e,o)=>E(t,e)-E(t,o))),e.slice()}return e}get tilesCoveringView(){return this._filterTiles(this.view.featureTiles?.tiles?.toArray()).map(z)}get tileInfo(){return this.view.featureTiles?.tilingScheme.toTileInfo()??null}get tileSize(){return this.view.featureTiles?.tileSize??256}get effectivePointOfInterest(){const e=this.pointOfInterest;return n(e)?e:this.view.pointsOfInterest?.focus.location}initialize(){this.handles.add(a((()=>this.view.featureTiles),(e=>{this.handles.remove(N),e&&this.handles.add(e.addClient(),N)}),m))}_filterTiles(e){return l(e)?[]:e.filter((e=>Math.abs(e.measures.screenRect[3]-e.measures.screenRect[1])>_&&e.measures.visibility===b.VISIBLE_ON_SURFACE))}};function z({lij:[e,t,o],extent:i}){return{id:`${e}/${t}/${o}`,level:e,row:t,col:o,extent:i}}e([d({readOnly:!0})],L.prototype,"tiles",null),e([d({readOnly:!0})],L.prototype,"tilesCoveringView",null),e([d({readOnly:!0})],L.prototype,"tileInfo",null),e([d({readOnly:!0})],L.prototype,"tileSize",null),e([d({constructOnly:!0})],L.prototype,"view",void 0),e([d()],L.prototype,"pointOfInterest",void 0),e([d()],L.prototype,"effectivePointOfInterest",null),L=e([u("esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceTiles3D")],L);const _=50,N="feature-tiles";let V=class extends k{constructor(e){super(e),this.handles=new S}initialize(){const e=setInterval((()=>this._fetchDebugInfo()),2e3);this.handles.add(r((()=>clearInterval(e))))}destroy(){this.handles.destroy()}getTiles(){if(!this.debugInfo)return[];const e=new Map,t=new Map;this.debugInfo.storedTiles.forEach((t=>{e.set(t.data.id,t.featureCount)})),this.debugInfo.pendingTiles.forEach((o=>{e.set(o.data.id,o.featureCount),t.set(o.data.id,o.state)}));const o=o=>{const i=t.get(o),r=e.get(o)??"?";return i?`${i}:${r}\n${o}`:`store:${r}\n${o}`},i=new Map;return this.debugInfo.storedTiles.forEach((e=>{i.set(e.data.id,e.data)})),this.debugInfo.pendingTiles.forEach((e=>{i.set(e.data.id,e.data)})),Array.from(i.values()).map((e=>({lij:[e.level,e.row,e.col],geometry:w.fromExtent(I(e.extent,this.view.spatialReference)),label:o(e.id)})))}_fetchDebugInfo(){this.handle.getDebugInfo(null).then((e=>{this.debugInfo=e,this.update()}))}};e([d({constructOnly:!0})],V.prototype,"handle",void 0),V=e([u("esri.views.interactive.snapping.featureSources.WorkerTileTreeDebugger")],V);let A=class extends o{constructor(e){super(e),this.availability=0,this.workerHandleUpdating=!0,this.editId=0}get updating(){return this.updatingHandles.updating||this.workerHandleUpdating}destroy(){this.workerHandle.destroy()}initialize(){this.workerHandle=new J(this.schedule),this.handles.add([this.workerHandle.on("notify-updating",(({updating:e})=>this.workerHandleUpdating=e)),this.workerHandle.on("notify-availability",(({availability:e})=>this._set("availability",e)))])}async setup(e,t){const o=this._serviceInfoFromLayer(e.layer);if(l(o))return;const i={configuration:this._convertConfiguration(e.configuration),serviceInfo:o,spatialReference:e.spatialReference.toJSON()};await this.updatingHandles.addPromise(this.workerHandle.invokeMethod("setup",i,t)),this.updatingHandles.addPromise(this.workerHandle.invokeMethod("whenNotUpdating",{},t))}async configure(e,t){const o=this._convertConfiguration(e);await this.updatingHandles.addPromise(this.workerHandle.invokeMethod("configure",o,t)),this.updatingHandles.addPromise(this.workerHandle.invokeMethod("whenNotUpdating",{},t))}async refresh(e){await this.updatingHandles.addPromise(this.workerHandle.invokeMethod("refresh",{},e)),this.updatingHandles.addPromise(this.workerHandle.invokeMethod("whenNotUpdating",{},e))}async fetchCandidates(e,t){const o={distance:e.distance,point:e.coordinateHelper.vectorToPoint(e.point).toJSON(),types:e.types,filter:n(e.filter)?e.filter.createQuery().toJSON():null};return this.workerHandle.invoke(o,t)}async updateTiles(e,t){const o={tiles:e.tiles,tileInfo:n(e.tileInfo)?e.tileInfo.toJSON():null,tileSize:e.tileSize};await this.updatingHandles.addPromise(this.workerHandle.invokeMethod("updateTiles",o,t)),this.updatingHandles.addPromise(this.workerHandle.invokeMethod("whenNotUpdating",{},t))}async applyEdits(e,t){const o=this.editId++,i={id:o};await this.updatingHandles.addPromise(this.workerHandle.invokeMethod("beginApplyEdits",i,t));const r=await this.updatingHandles.addPromise(H(e.result,t)),s={id:o,edits:{addedFeatures:r.addedFeatures?.map((({objectId:e})=>e))??[],deletedFeatures:r.deletedFeatures?.map((({objectId:e,globalId:t})=>({objectId:e,globalId:t})))??[],updatedFeatures:r.updatedFeatures?.map((({objectId:e})=>e))??[]}};await this.updatingHandles.addPromise(this.workerHandle.invokeMethod("endApplyEdits",s,t)),this.updatingHandles.addPromise(this.workerHandle.invokeMethod("whenNotUpdating",{},t))}getDebugInfo(e){return this.workerHandle.invokeMethod("getDebugInfo",{},e)}_convertConfiguration(e){return{filter:n(e.filter)?e.filter.toJSON():null,customParameters:e.customParameters}}_serviceInfoFromLayer(e){return"multipatch"===e.geometryType||"mesh"===e.geometryType?null:{url:e.parsedUrl.path,fields:e.fields.map((e=>e.toJSON())),geometryType:T.toJSON(e.geometryType),capabilities:e.capabilities,objectIdField:e.objectIdField,globalIdField:e.globalIdField,spatialReference:e.spatialReference.toJSON(),timeInfo:e.timeInfo?.toJSON()}}};e([d({constructOnly:!0})],A.prototype,"schedule",void 0),e([d({readOnly:!0})],A.prototype,"updating",null),e([d({readOnly:!0})],A.prototype,"availability",void 0),e([d()],A.prototype,"workerHandleUpdating",void 0),A=e([u("esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceSnappingSourceWorkerHandle")],A);class J extends C{constructor(e){super("FeatureServiceSnappingSourceWorker","fetchCandidates",{},e,{strategy:"dedicated"})}}let W=class extends t{constructor(e){super(e),this.pointOfInterest=null}get tiles(){return[{id:"0/0/0",level:0,row:0,col:0,extent:O(-1e8,-1e8,1e8,1e8)}]}get tileInfo(){return new M({origin:new P({x:-1e8,y:1e8,spatialReference:this.layer.spatialReference}),size:[512,512],lods:[new U({level:0,scale:1,resolution:390625})],spatialReference:this.layer.spatialReference})}get tileSize(){return this.tileInfo.size[0]}};e([d({readOnly:!0})],W.prototype,"tiles",null),e([d({readOnly:!0})],W.prototype,"tileInfo",null),e([d({readOnly:!0})],W.prototype,"tileSize",null),e([d({constructOnly:!0})],W.prototype,"layer",void 0),e([d()],W.prototype,"pointOfInterest",void 0),W=e([u("esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceTilesSimple")],W);let $=class extends(i(t)){constructor(e){super(e)}get updateTilesParameters(){return{tiles:this.tilesOfInterest.tiles,tileInfo:this.tilesOfInterest.tileInfo,tileSize:this.tilesOfInterest.tileSize}}get updating(){return this.workerHandle.updating||this.updatingHandles.updating}get configuration(){return{filter:this.layer.createQuery(),customParameters:this.layer.customParameters}}get availability(){return this.workerHandle.availability}get layer(){return this.layerSource.layer}initialize(){const e=this.view;if(n(e))switch(e.type){case"2d":this.tilesOfInterest=new x({view:e,layer:this.layer}),this.workerHandle=new A;break;case"3d":{const t=e.resourceController;this.tilesOfInterest=new L({view:e}),this.workerHandle=new A({schedule:e=>t.schedule(e)});break}}else this.tilesOfInterest=new W({layer:this.layer}),this.workerHandle=new A;this.handles.add([s(this.workerHandle)]),this.workerHandle.setup({layer:this.layer,spatialReference:this.spatialReference,configuration:this.configuration},null),this.updatingHandles.add((()=>this.updateTilesParameters),(()=>this.workerHandle.updateTiles(this.updateTilesParameters,null)),m),this.handles.add([a((()=>this.configuration),(e=>this.workerHandle.configure(e,null)),p)]),n(e)&&this.handles.add(a((()=>D.FEATURE_SERVICE_SNAPPING_SOURCE_TILE_TREE_SHOW_TILES),(t=>{t&&!this.debug?(this.debug=new V({view:e,handle:this.workerHandle}),this.handles.add(s(this.debug),"debug")):!t&&this.debug&&this.handles.remove("debug")}),m)),this.handles.add(this.layerSource.layer.on("apply-edits",(e=>{this.workerHandle.applyEdits(e,null)})))}refresh(){this.workerHandle.refresh(null)}async fetchCandidates(e,t){return this.tilesOfInterest.pointOfInterest=e.coordinateHelper.vectorToPoint(e.point),(await this.workerHandle.fetchCandidates({...e,filter:null},t)).candidates.map((t=>v(t,e.coordinateHelper,e.elevationInfo)))}getDebugInfo(e){return this.workerHandle.getDebugInfo(e)}};e([d({constructOnly:!0})],$.prototype,"spatialReference",void 0),e([d({constructOnly:!0})],$.prototype,"layerSource",void 0),e([d({constructOnly:!0})],$.prototype,"view",void 0),e([d()],$.prototype,"tilesOfInterest",void 0),e([d({readOnly:!0})],$.prototype,"updateTilesParameters",null),e([d({readOnly:!0})],$.prototype,"updating",null),e([d({readOnly:!0})],$.prototype,"configuration",null),e([d({readOnly:!0})],$.prototype,"availability",null),$=e([u("esri.views.interactive.snapping.featureSources.FeatureServiceSnappingSource")],$);export{$ as FeatureServiceSnappingSource};
