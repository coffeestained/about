/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{_ as s}from"./tslib.es6.js";import i from"../core/Error.js";import{i as e,d as t,p as r,a}from"./maybe.js";import{createTask as o,isAborted as l}from"../core/promiseUtils.js";import{watch as n,syncAndInitial as p}from"../core/reactiveUtils.js";import{property as y}from"../core/accessorSupport/decorators/property.js";import{subclass as m}from"../core/accessorSupport/decorators/subclass.js";import{L as h}from"./LayerView3D.js";import c from"../views/layers/LayerView.js";import"../core/lang.js";import"./Logger.js";import"../config.js";import"./object.js";import"./string.js";import"./handleUtils.js";import"./watch.js";import"./ArrayPool.js";import"../core/scheduling.js";import"./nextTick.js";import"./get.js";import"./utils.js";import"./tracking.js";import"./ensureType.js";import"./metadata.js";import"./heightModelInfoUtils.js";import"../geometry/HeightModelInfo.js";import"./jsonMap.js";import"../core/JSONSupport.js";import"../core/Accessor.js";import"./unitUtils.js";import"./projectionEllipsoid.js";import"../geometry/SpatialReference.js";import"./writer.js";import"./Ellipsoid.js";import"./reader.js";import"./arcgisLayerUrl.js";import"../core/urlUtils.js";import"./persistableUrlUtils.js";import"../core/Evented.js";import"../core/HandleOwner.js";import"../core/Handles.js";import"../core/Collection.js";import"./shared.js";import"./SimpleObservable.js";import"./Identifiable.js";import"../core/Promise.js";let w=class extends(h(c)){constructor(s){super(s),this.type="line-of-sight-3d",this._analysisModules={"line-of-sight":null}}initialize(){this.handles.add(n((()=>this.layer.analysis),(s=>{this._destroyAnalysisView(),e(s)&&this._createAnalysisView(s)}),p),"analysis-view-handles")}destroy(){this.handles.remove("analysis-view-handles"),this._destroyAnalysisView()}async whenAnalysisView(){if(e(this.analysisView))return this.analysisView;if(e(this._createAnalysisViewTask))return this._createAnalysisViewTask.promise;throw new i("layerview:no-analysisview-for-analysis","The analysis has not been set on the LineOfSightLayer of this layer view")}isUpdating(){return e(this._createAnalysisViewTask)||e(this.analysisView)&&this.analysisView.updating}_createAnalysisView(s){const i=o((async e=>(this.analysisView=await this._createAnalysisViewPromise(s,e),this._createAnalysisViewTask===i&&(this._createAnalysisViewTask=null),this.analysisView)));this._createAnalysisViewTask=i}_destroyAnalysisView(){this.analysisView=t(this.analysisView),this._createAnalysisViewTask=r(this._createAnalysisViewTask)}async _createAnalysisViewPromise(s,e){const t=s.type;let r=this._analysisModules[t];if(a(r)){const s=await this._loadAnalysisModule(t);this._analysisModules[t]=s,r=s}const o=new r.default({analysis:s,view:this.view,parent:this});if(await o.when(),l(e))throw o.destroy(),new i("layerview:no-analysisview-for-analysis","The analysis has not been added to the LineOfSightLayer of this layer view",{analysis:s});return o}_loadAnalysisModule(s){return"line-of-sight"===s?import("../views/3d/analysis/LineOfSightAnalysisView3D.js"):null}};s([y()],w.prototype,"type",void 0),s([y()],w.prototype,"layer",void 0),s([y()],w.prototype,"analysisView",void 0),s([y()],w.prototype,"_createAnalysisViewTask",void 0),w=s([m("esri.views.3d.layers.LineOfSightLayerView3D")],w);const j=w;export{j as default};
