/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import e from"../core/Evented.js";import{i as t,a as i,u as s}from"./maybe.js";import{e as r,a as n}from"../core/lang.js";import o from"../geometry/Polygon.js";import a from"../geometry/Polyline.js";import{l as h,j as c,c as d,e as l,g as p,f as u,r as g,p as f}from"./vec2.js";import{a as m,f as x,b as y}from"./vec2f64.js";import{f as _,h as v,G as V,v as E,M as T,a as D,l as P,m as M,A as w,j as C,L as R,k as A,n as Z,b as S,o as z,X as U,g as b}from"./mathUtils.js";import{c as I,a as G,f as L}from"./vec4f64.js";import X from"../geometry/Point.js";import{g as O}from"../geometry/SpatialReference.js";import{V as N}from"./ViewingMode.js";import{c as k,f as Y,k as j,d as B,q as H,n as q}from"./plane.js";import{h as F,p as W}from"./sphere.js";import{i as J,L as K}from"./geometry2dUtils.js";var Q,$,ee;!function(e){e[e.Z=0]="Z",e[e.M=1]="M"}(Q||(Q={}));class te{constructor(e){this.spatialReference=e}createVector(){return this._tag(m())}pointToVector(e){return this._tag(x(e.x,e.y))}arrayToVector(e){return this._tag(x(e[0],e[1]))}vectorToArray(e){return[e[0],e[1]]}pointToArray(e){return[e.x,e.y]}vectorToPoint(e,t=new X){return t.x=e[0],t.y=e[1],t.z=void 0,t.m=void 0,t.spatialReference=this.spatialReference,t}arrayToPoint(e,t=new X){return t.x=e[0],t.y=e[1],t.z=void 0,t.m=void 0,t.spatialReference=this.spatialReference,t}vectorToDehydratedPoint(e,t={x:void 0,y:void 0,z:void 0,m:void 0,hasZ:void 0,hasM:void 0,spatialReference:void 0,type:"point"}){return t.x=e[0],t.y=e[1],t.z=void 0,t.m=void 0,t.hasZ=!1,t.hasM=!1,t.spatialReference=this.spatialReference,t}lerp(e,t,i,s){return h(s,e,t,i)}addDelta(e,t,i){e[0]+=t,e[1]+=i}distance(e,t){return c(e,t)}getZ(e,t){return t}hasZ(){return!1}getM(e,t){return t}hasM(){return!1}clone(e){return this._tag(y(e))}copy(e,t){return d(t,e)}fromXYZ(e){return this._tag(x(e[0],e[1]))}toXYZ(e,t=0){return _(e[0],e[1],t)}_tag(e){return e}}class ie{constructor(e,t){this.valueType=e,this.spatialReference=t}createVector(){return this._tag(v())}pointToVector(e){return this._tag(_(e.x,e.y,this.valueType===Q.Z?e.z:e.m))}arrayToVector(e){return this._tag(_(e[0],e[1],e[2]||0))}vectorToArray(e){return[e[0],e[1],e[2]]}pointToArray(e){return this.valueType===Q.Z?[e.x,e.y,e.z]:[e.x,e.y,e.m]}vectorToPoint(e,t=new X){return t.x=e[0],t.y=e[1],t.z=this.valueType===Q.Z?e[2]:void 0,t.m=this.valueType===Q.M?e[2]:void 0,t.spatialReference=this.spatialReference,t}arrayToPoint(e,t=new X){return t.x=e[0],t.y=e[1],t.z=this.valueType===Q.Z?e[2]:void 0,t.m=this.valueType===Q.M?e[2]:void 0,t.spatialReference=this.spatialReference,t}vectorToDehydratedPoint(e,t={x:void 0,y:void 0,z:void 0,m:void 0,hasZ:void 0,hasM:void 0,spatialReference:void 0,type:"point"}){const i=this.valueType===Q.Z,s=this.valueType===Q.M;return t.x=e[0],t.y=e[1],t.z=i?e[2]:void 0,t.m=s?e[2]:void 0,t.hasZ=i,t.hasM=s,t.spatialReference=this.spatialReference,t}lerp(e,t,i,s){return V(s,e,t,i)}addDelta(e,t,i,s){e[0]+=t,e[1]+=i,this.valueType===Q.Z&&(e[2]+=s)}distance(e,t){return this.valueType===Q.Z?E(e,t):c(e,t)}getZ(e,t){return this.valueType===Q.Z?e[2]:t}hasZ(){return this.valueType===Q.Z}getM(e,t){return this.valueType===Q.M?e[2]:t}hasM(){return this.valueType===Q.M}clone(e){return this._tag(T(e))}copy(e,t){return D(t,e)}fromXYZ(e,t=0,i=0){return this._tag(_(e[0],e[1],this.valueType===Q.Z?e.length>2?e[2]:t:i))}toXYZ(e,t=0){return this._tag(_(e[0],e[1],this.valueType===Q.Z?e[2]:t))}_tag(e){return e}}class se{constructor(e){this.spatialReference=e}createVector(){return this._tag(I())}pointToVector(e){return this._tag(G(e.x,e.y,e.z,e.m))}arrayToVector(e){return this._tag(G(e[0],e[1],e[2]||0,e[3]||0))}vectorToArray(e){return[e[0],e[1],e[2],e[3]]}pointToArray(e){return[e.x,e.y,e.z,e.m]}vectorToPoint(e,t=new X){return t.x=e[0],t.y=e[1],t.z=e[2],t.m=e[3],t.spatialReference=this.spatialReference,t}arrayToPoint(e,t=new X){return t.x=e[0],t.y=e[1],t.z=e[2],t.m=e[3],t.spatialReference=this.spatialReference,t}vectorToDehydratedPoint(e,t={x:void 0,y:void 0,z:void 0,m:void 0,hasZ:void 0,hasM:void 0,spatialReference:void 0,type:"point"}){return t.x=e[0],t.y=e[1],t.z=e[2],t.m=e[3],t.hasZ=!0,t.hasM=!0,t.spatialReference=this.spatialReference,t}lerp(e,t,i,s){return P(s,e,t,i)}addDelta(e,t,i,s){e[0]+=t,e[1]+=i,e[2]+=s}distance(e,t){return E(e,t)}getZ(e){return e[2]}hasZ(){return!0}getM(e){return e[3]}hasM(){return!0}clone(e){return this._tag(L(e))}copy(e,t){return M(t,e)}fromXYZ(e,t=0,i=0){return this._tag(G(e[0],e[1],e.length>2?e[2]:t,i))}toXYZ(e){return _(e[0],e[1],e[2])}_tag(e){return e}}function re(e,t,i){return e&&t?new se(i):t?new ie(Q.M,i):e?new ie(Q.Z,i):new te(i)}class ne{constructor(e){this.component=e,this.leftEdge=null,this.rightEdge=null,this.type="vertex",this.index=null}get pos(){return this._pos}set pos(e){this._pos=e,this.component.unnormalizeVertexPositions()}}class oe{constructor(e,t,i){this.component=e,this.leftVertex=t,this.rightVertex=i,this.type="edge",t.rightEdge=this,i.leftEdge=this}}class ae{constructor(e,t){this.spatialReference=e,this.viewingMode=t,this.vertices=[],this.edges=[]}unnormalizeVertexPositions(){this.vertices.length<=1||function(e,t){if(!t.supported)return;let i=1/0,s=-1/0;const r=t.upperBoundX-t.lowerBoundX;e.forEach((e=>{let n=e.pos[0];for(;n<t.lowerBoundX;)n+=r;for(;n>t.upperBoundX;)n-=r;i=Math.min(i,n),s=Math.max(s,n),e.pos[0]=n}));const n=s-i;r-n<n&&e.forEach((e=>{e.pos[0]<0&&(e.pos[0]+=r)}))}(this.vertices,function(e,t){const i=O(e);return t===N.Global&&i?{supported:!0,lowerBoundX:i.valid[0],upperBoundX:i.valid[1]}:{supported:!1,lowerBoundX:null,upperBoundX:null}}(this.spatialReference,this.viewingMode))}updateVertexIndex(e,t){if(0===this.vertices.length)return;const i=this.vertices[0];let s=null,r=e,n=t;do{s=r,s.index=n++,r=s.rightEdge?s.rightEdge.rightVertex:null}while(null!=r&&r!==i);s.leftEdge&&s!==this.vertices[this.vertices.length-1]&&this.swapVertices(this.vertices.indexOf(s),this.vertices.length-1)}getFirstVertex(){return 0===this.vertices.length?null:this.vertices[0]}getLastVertex(){return 0===this.vertices.length?null:this.vertices[this.vertices.length-1]}isClosed(){return this.vertices.length>2&&null!==this.vertices[0].leftEdge}swapVertices(e,t){const i=this.vertices[e];this.vertices[e]=this.vertices[t],this.vertices[t]=i}iterateVertices(e){if(0===this.vertices.length)return;const i=this.vertices[0];let s=i;do{e(s,s.index),s=t(s.rightEdge)?s.rightEdge.rightVertex:null}while(s!==i&&null!=s)}}class he extends e{constructor(e,t){super(),this.type=e,this.coordinateHelper=t,this._geometry=null,this.dirty=!0,this.components=[]}get geometry(){if(this.dirty){switch(this.type){case"point":this._geometry=this._toPoint();break;case"polyline":this._geometry=this._toPolyline();break;case"polygon":this._geometry=this._toPolygon()}this.dirty=!1}return this._geometry}get spatialReference(){return this.coordinateHelper.spatialReference}notifyChanges(e){this.dirty=!0,this.emit("change",e)}_toPoint(){return 0===this.components.length||0===this.components[0].vertices.length?null:this.coordinateHelper.vectorToPoint(this.components[0].vertices[0].pos)}_toPolyline(){const e=[],t=this.coordinateHelper.vectorToArray;for(const i of this.components){if(i.vertices.length<1)continue;const s=[];let r=i.vertices.find((e=>null==e.leftEdge));const n=r;do{s.push(t(r.pos)),r=r.rightEdge?r.rightEdge.rightVertex:null}while(r&&r!==n);e.push(s)}return new a({paths:e,spatialReference:this.spatialReference,hasZ:this.coordinateHelper.hasZ(),hasM:this.coordinateHelper.hasM()})}_toPolygon(){const e=[],i=this.coordinateHelper.vectorToArray;for(const s of this.components){if(s.vertices.length<1)continue;const r=[],n=s.vertices[0];let o=n;const a=o;do{r.push(i(o.pos)),o=t(o.rightEdge)?o.rightEdge.rightVertex:null}while(o&&o!==a);s.isClosed()&&r.push(i(n.pos)),e.push(r)}return new o({rings:e,spatialReference:this.spatialReference,hasZ:this.coordinateHelper.hasZ(),hasM:this.coordinateHelper.hasM()})}static fromGeometry(e,t){const i=e.spatialReference,s=re(e.hasZ,e.hasM,i),n=new he(e.type,s);switch(e.type){case"polygon":{const o=e.rings;for(let e=0;e<o.length;++e){const a=o[e],h=new ae(i,t),c=a.length>2&&r(a[0],a[a.length-1]),d=c?a.length-1:a.length;for(let e=0;e<d;++e){const t=s.arrayToVector(a[e]),i=new ne(h);h.vertices.push(i),i.pos=t,i.index=e}const l=h.vertices.length-1;for(let e=0;e<l;++e){const t=h.vertices[e],i=h.vertices[e+1],s=new oe(h,t,i);h.edges.push(s)}if(c){const e=new oe(h,h.vertices[h.vertices.length-1],h.vertices[0]);h.edges.push(e)}n.components.push(h)}break}case"polyline":for(const r of e.paths){const e=new ae(i,t),o=r.length;for(let t=0;t<o;++t){const i=s.arrayToVector(r[t]),n=new ne(e);e.vertices.push(n),n.pos=i,n.index=t}const a=e.vertices.length-1;for(let t=0;t<a;++t){const i=e.vertices[t],s=e.vertices[t+1],r=new oe(e,i,s);e.edges.push(r)}n.components.push(e)}break;case"point":{const r=new ae(i,t),o=new ne(r);o.index=0,o.pos=s.pointToVector(e),r.vertices.push(o),n.components.push(r);break}}return n}}!function(e){e[e.NEW_STEP=0]="NEW_STEP",e[e.ACCUMULATE_STEPS=1]="ACCUMULATE_STEPS"}($||($={}));class ce{constructor(e,t,i){this.editGeometry=e,this.component=t,this.pos=i,this.addedVertex=null,this.originalEdge=null,this.left=null,this.right=null}apply(){let e="redo";i(this.addedVertex)&&(e="apply",this.addedVertex=new ne(this.component));const s=this.component.getLastVertex();if(i(s))this.component.vertices.push(this.addedVertex),this.addedVertex.pos=this.pos,this.addedVertex.index=0;else{let e=null;s.rightEdge&&(this.originalEdge=s.rightEdge,e=this.originalEdge.rightVertex,this.component.edges.splice(this.component.edges.indexOf(this.originalEdge),1)),this.component.vertices.push(this.addedVertex),this.addedVertex.pos=this.pos,i(this.left)&&(this.left=new oe(this.component,s,this.addedVertex)),this.component.edges.push(this.left),s.rightEdge=this.left,t(this.originalEdge)&&t(e)&&(i(this.right)&&(this.right=new oe(this.component,this.addedVertex,e)),this.component.edges.push(this.right),e.leftEdge=this.right),this.component.updateVertexIndex(this.addedVertex,s.index+1)}this.editGeometry.notifyChanges({operation:e,addedVertices:[this.addedVertex]})}undo(){if(i(this.addedVertex))return null;this.component.vertices.splice(this.component.vertices.indexOf(this.addedVertex),1),t(this.left)&&(this.component.edges.splice(this.component.edges.indexOf(this.left),1),this.left.leftVertex.rightEdge=null),t(this.right)&&(this.component.edges.splice(this.component.edges.indexOf(this.right),1),this.right.rightVertex.leftEdge=null),t(this.originalEdge)&&(this.component.edges.push(this.originalEdge),this.originalEdge.leftVertex.rightEdge=this.originalEdge,this.originalEdge.rightVertex.leftEdge=this.originalEdge),t(this.left)?this.component.updateVertexIndex(this.left.leftVertex,this.left.leftVertex.index):this.component.updateVertexIndex(this.addedVertex,0),this.editGeometry.notifyChanges({operation:"undo",removedVertices:[this.addedVertex]})}accumulate(){return!1}}class de{constructor(e,t,i){this.editGeometry=e,this.vertices=t,this.operation=i,this.undone=!1}apply(){this.vertices.forEach((e=>this.operation.apply(e))),this.editGeometry.components.forEach((e=>e.unnormalizeVertexPositions())),this.editGeometry.notifyChanges({operation:this.undone?"redo":"apply",updatedVertices:this.vertices})}undo(){this.vertices.forEach((e=>this.operation.undo(e))),this.editGeometry.notifyChanges({operation:"undo",updatedVertices:this.vertices}),this.undone=!0}canAccumulate(e){if(this.undone||e.vertices.length!==this.vertices.length)return!1;for(let t=0;t<e.vertices.length;++t)if(e.vertices[t]!==this.vertices[t])return!1;return this.operation.canAccumulate(e.operation)}accumulate(e){return!!(e instanceof de&&this.canAccumulate(e))&&(this.vertices.forEach((t=>this.operation.accumulate(t,e.operation))),this.operation.accumulateParams(e.operation),this.editGeometry.components.forEach((e=>e.unnormalizeVertexPositions())),this.editGeometry.notifyChanges({operation:"apply",updatedVertices:this.vertices}),!0)}}!function(e){e[e.CUMULATIVE=0]="CUMULATIVE",e[e.REPLACE=1]="REPLACE"}(ee||(ee={}));class le{constructor(e,t,i=0){this.editGeometry=e,this.vertices=t,this.minNumberOfVertices=i,this.removedVertices=null}apply(){let e="redo";null==this.removedVertices?(this.removedVertices=[],this.vertices.forEach((e=>{const i=this._removeVertex(e);t(i)&&this.removedVertices.push(i)})),e="apply"):this.removedVertices.forEach((e=>{this._removeVertex(e.removedVertex)})),this.editGeometry.notifyChanges({operation:e,removedVertices:this.vertices})}undo(){this.removedVertices.forEach((e=>{this._undoRemoveVertex(e)})),this.editGeometry.notifyChanges({operation:"undo",addedVertices:this.vertices})}accumulate(){return!1}_removeVertex(e){const t=e.component;if(t.vertices.length<=this.minNumberOfVertices)return null;const i={removedVertex:e,createdEdge:null},s=e.leftEdge,r=e.rightEdge;return t.vertices.splice(t.vertices.indexOf(e),1),s&&(t.edges.splice(t.edges.indexOf(s),1),s.leftVertex.rightEdge=null),r&&(t.edges.splice(t.edges.indexOf(r),1),r.rightVertex.leftEdge=null),0===e.index&&r&&this.vertices.length>0&&t.swapVertices(t.vertices.indexOf(r.rightVertex),0),s&&r&&(i.createdEdge=new oe(t,s.leftVertex,r.rightVertex),t.edges.push(i.createdEdge)),r&&t.updateVertexIndex(r.rightVertex,r.rightVertex.index-1),i}_undoRemoveVertex(e){const t=e.removedVertex,i=e.removedVertex.component,s=t.leftEdge,r=t.rightEdge;e.createdEdge&&i.edges.splice(i.edges.indexOf(e.createdEdge),1),i.vertices.push(t),s&&(i.edges.push(s),s.leftVertex.rightEdge=s),r&&(i.edges.push(r),r.rightVertex.leftEdge=r),i.updateVertexIndex(t,t.index)}}class pe{constructor(e,t,i){this.editGeometry=e,this.edge=t,this.t=i,this.createdVertex=null,this.left=null,this.right=null}apply(){let e="redo";const t=this.edge,s=t.component,r=t.leftVertex,n=t.rightVertex;s.edges.splice(s.edges.indexOf(t),1),i(this.createdVertex)&&(e="apply",this.createdVertex=new ne(t.component)),s.vertices.push(this.createdVertex),this.createdVertex.pos=this.editGeometry.coordinateHelper.lerp(t.leftVertex.pos,t.rightVertex.pos,this.t,this.editGeometry.coordinateHelper.createVector()),i(this.left)&&(this.left=new oe(s,r,this.createdVertex)),this.left.leftVertex.leftEdge?s.edges.push(this.left):s.edges.unshift(this.left),r.rightEdge=this.left,i(this.right)&&(this.right=new oe(s,this.createdVertex,n)),s.edges.push(this.right),n.leftEdge=this.right,s.updateVertexIndex(this.createdVertex,r.index+1),this.editGeometry.notifyChanges({operation:e,addedVertices:[this.createdVertex]})}undo(){if(i(this.createdVertex)||i(this.left)||i(this.right))return null;const e=this.edge,t=e.component,s=this.createdVertex.leftEdge,r=this.createdVertex.rightEdge,n=s.leftVertex,o=r.rightVertex;t.vertices.splice(t.vertices.indexOf(this.createdVertex),1),t.edges.splice(t.edges.indexOf(this.left),1),t.edges.splice(t.edges.indexOf(this.right),1),this.edge.leftVertex.leftEdge?t.edges.push(this.edge):t.edges.unshift(this.edge),n.rightEdge=e,o.leftEdge=e,t.updateVertexIndex(n,n.index),this.editGeometry.notifyChanges({operation:"undo",removedVertices:[this.createdVertex]})}accumulate(){return!1}}class ue{constructor(e,t,i){this.editGeometry=e,this.vertex=t,this.pos=i}apply(){const e=i(this.originalPosition);e&&(this.originalPosition=this.vertex.pos),this._apply(e?"apply":"redo")}undo(){this.vertex.pos=s(this.originalPosition),this.editGeometry.notifyChanges({operation:"undo",updatedVertices:[this.vertex]})}accumulate(e){return e instanceof ue&&e.vertex===this.vertex&&(this.pos=e.pos,this._apply("apply"),!0)}_apply(e){this.vertex.pos=this.pos,this.editGeometry.components.forEach((e=>e.unnormalizeVertexPositions())),this.editGeometry.notifyChanges({operation:e,updatedVertices:[this.vertex]})}}class ge{constructor(e,t){this.editGeometry=e,this.component=t,this.createdEdge=null}apply(){let e="redo";if(i(this.createdEdge)){e="apply";const t=this.component.getFirstVertex(),s=this.component.getLastVertex();if(this.component.isClosed()||this.component.vertices.length<3||i(t)||i(s))return;this.createdEdge=new oe(this.component,s,t)}this.createdEdge.leftVertex.rightEdge=this.createdEdge,this.createdEdge.rightVertex.leftEdge=this.createdEdge,this.component.edges.push(this.createdEdge),this.editGeometry.notifyChanges({operation:e})}undo(){i(this.createdEdge)||(n(this.component.edges,this.createdEdge),this.createdEdge.leftVertex.rightEdge=null,this.createdEdge.rightVertex.leftEdge=null,this.editGeometry.notifyChanges({operation:"undo"}))}accumulate(){return!1}}class fe{constructor(e,t,i,s){this.helper=e,this.dx=t,this.dy=i,this.dz=s}_move(e,t,i,s){this.helper.addDelta(e.pos,t,i,s)}apply(e){this._move(e,this.dx,this.dy,this.dz)}undo(e){this._move(e,-this.dx,-this.dy,-this.dz)}canAccumulate(e){return e instanceof fe}accumulate(e,t){this._move(e,t.dx,t.dy,t.dz)}accumulateParams(e){this.dx+=e.dx,this.dy+=e.dy,this.dz+=e.dz}}class me{constructor(e,t,i,s=0,r=_e.IMMEDIATE){this.helper=e,this.planeType=t,this.edge=i,this.distance=s,this._plane=k(),this._offsetPlane=k(),this._minDistance=-1/0,this._maxDistance=1/0,r===_e.IMMEDIATE&&this._initialize()}get plane(){return this._plane}get requiresSplitEdgeLeft(){return!this._left.isOriginalDirection}get requiresSplitEdgeRight(){return!this._right.isOriginalDirection}get edgeDirection(){return this._edgeDirection}_initialize(){this._initializeNeighbors(),this._initializePlane(),this._initializeDistanceConstraints()}_initializeNeighbors(){const e=this._toXYZ(this.edge.leftVertex.pos),t=this._toXYZ(this.edge.leftVertex.leftEdge?.leftVertex?.pos),i=this._toXYZ(this.edge.rightVertex.pos),s=this._toXYZ(this.edge.rightVertex.rightEdge?.rightVertex?.pos);this._edgeDirection=w(v(),e,i),this._left=this._computeNeighbor(e,t,this._edgeDirection),this._right=this._computeNeighbor(i,s,this._edgeDirection)}_toXYZ(e){return t(e)?this.helper.toXYZ(e):null}_computeNeighbor(e,t,s){if(i(t))return{start:e,end:t,direction:_(-s[1],s[0],0),isOriginalDirection:!0};const r=w(v(),e,t),n=!this._passesBisectingAngleThreshold(r,s);return{start:e,end:t,direction:n?this._bisectVectorsPerpendicular(s,r):r,isOriginalDirection:!n}}_passesBisectingAngleThreshold(e,t){const i=Math.abs(F(t,e));return i>=xe&&i<=Math.PI-xe}_bisectVectorsPerpendicular(e,t){const i=C(e,t)<0?e:R(v(),e),s=Math.abs(C(i,t));if(!(s<.001||s>.999))return this._bisectDirection(i,t);const r=A(v(),i,[0,0,1]);return Z(r,r)}_bisectDirection(e,t){const i=S(v(),e,t);return Z(i,i)}_initializePlane(){const e=this._computeNormalDirection(this._left),t=this._computeNormalDirection(this._right);C(e,t)<0&&R(t,t),Y(this._left.start,this._bisectDirection(e,t),this._plane)}_computeNormalDirection(e){const t=A(v(),e.direction,this._edgeDirection);Z(t,t);const i=A(v(),this._edgeDirection,t);return this.planeType===ye.XY&&(i[2]=0),Z(i,i)}_initializeDistanceConstraints(){t(this._left.end)&&!this.requiresSplitEdgeLeft&&this._updateDistanceConstraint(j(this._plane,this._left.end)),t(this._right.end)&&!this.requiresSplitEdgeRight&&this._updateDistanceConstraint(j(this._plane,this._right.end)),this._updateIntersectDistanceConstraint(this._plane)}_updateDistanceConstraint(e){e<=0&&(this._minDistance=Math.max(this._minDistance,e)),e>=0&&(this._maxDistance=Math.min(this._maxDistance,e))}_updateIntersectDistanceConstraint(e){const t=q(e),i=this._edgeDirection,s=S(v(),this._left.start,this._left.direction),r=S(v(),this._right.start,this._right.direction),n=this._pointInBasis2D(m(),t,i,this._left.start),o=this._pointInBasis2D(m(),t,i,s),a=this._pointInBasis2D(m(),t,i,this._right.start),h=this._pointInBasis2D(m(),t,i,r),[c]=J({start:o,end:n,type:K.LINE},{start:h,end:a,type:K.LINE});if(!c)return;const d=l(m(),n,o);p(d,d);const g=l(m(),c,o),f=u(d,g),x=S(v(),s,z(v(),this._left.direction,-f)),y=j(e,x);this._updateDistanceConstraint(y)}_pointInBasis2D(e,t,i,s){return e[0]=W(t,s),e[1]=W(i,s),e}_offset(e,i){Number.isFinite(this._minDistance)&&(i=Math.max(this._minDistance,i)),Number.isFinite(this._maxDistance)&&(i=Math.min(this._maxDistance,i)),B(this._offsetPlane,this._plane),this._offsetPlane[3]-=i;const s=(e,i,s)=>t(i)&&H(this._offsetPlane,e,S(v(),e,i),s),r=v();(e===this.edge.leftVertex?s(this._left.start,this._left.direction,r):s(this._right.start,this._right.direction,r))&&this.helper.copy(this.helper.fromXYZ(r,void 0,this.helper.getM(e.pos)),e.pos)}signedDistanceToPoint(e){return j(this.plane,this.helper.toXYZ(this.helper.pointToVector(e)))}apply(e){this._offset(e,this.distance)}undo(e){this._offset(e,0)}canAccumulate(e){return e instanceof me&&this.edge.leftVertex.index===e.edge.leftVertex.index&&this.edge.rightVertex.index===e.edge.rightVertex.index&&this.edge.component===e.edge.component&&this._maybeEqualsVec3(this._left.direction,e._left.direction)&&this._maybeEqualsVec3(this._right.direction,e._right.direction)&&U(q(this._plane),q(e._plane))}accumulate(e,t){const i=this._plane[3]-t._plane[3]+t.distance;this._offset(e,i)}accumulateParams(e){const t=e.distance-e._plane[3];this.distance=t+this._plane[3]}clone(){const e=new me(this.helper,this.planeType,this.edge,this.distance,_e.DEFERRED);return B(e._plane,this._plane),B(e._offsetPlane,this._offsetPlane),e._maxDistance=this._maxDistance,e._minDistance=this._minDistance,e._left=this._cloneNeighbor(this._left),e._right=this._cloneNeighbor(this._right),e._edgeDirection=D(v(),this._edgeDirection),e}_maybeEqualsVec3(e,s){return i(e)&&i(s)||t(e)&&t(s)&&U(e,s)}_cloneNeighbor({start:e,end:i,direction:s,isOriginalDirection:r}){return{start:D(v(),e),end:t(i)?D(v(),i):null,direction:D(v(),s),isOriginalDirection:r}}}const xe=b(15);var ye,_e;!function(e){e[e.XYZ=0]="XYZ",e[e.XY=1]="XY"}(ye||(ye={})),function(e){e[e.IMMEDIATE=0]="IMMEDIATE",e[e.DEFERRED=1]="DEFERRED"}(_e||(_e={}));class ve{constructor(e,t,i=ee.CUMULATIVE){this.origin=e,this.angle=t,this.accumulationType=i}_rotate(e,t){g(e.pos,e.pos,this.origin,t)}apply(e){this._rotate(e,this.angle)}undo(e){this._rotate(e,-this.angle)}canAccumulate(e){return e instanceof ve&&r(this.origin,e.origin)}accumulate(e,t){const i=t.accumulationType===ee.REPLACE;this._rotate(e,i?t.angle-this.angle:t.angle)}accumulateParams(e){const t=e.accumulationType===ee.REPLACE;this.angle=t?e.angle:this.angle+e.angle}}class Ve{constructor(e,t,i,s,r=ee.CUMULATIVE){this.origin=e,this.axis1=t,this.factor1=i,this.factor2=s,this.accumulationType=r,this.axis2=x(t[1],-t[0])}_scale(e,t,i){f(e.pos,e.pos,this.origin,this.axis1,t),f(e.pos,e.pos,this.origin,this.axis2,i)}apply(e){this._scale(e,this.factor1,this.factor2)}undo(e){this._scale(e,1/this.factor1,1/this.factor2)}canAccumulate(e){return e instanceof Ve&&r(this.origin,e.origin)&&r(this.axis1,e.axis1)}accumulate(e,t){t.accumulationType===ee.REPLACE?this._scale(e,t.factor1/this.factor1,t.factor2/this.factor2):this._scale(e,t.factor1,t.factor2)}accumulateParams(e){const t=e.accumulationType===ee.REPLACE;this.factor1=t?e.factor1:this.factor1*e.factor1,this.factor2=t?e.factor2:this.factor2*e.factor2}}class Ee{constructor(){this.operations=[],this.closed=!1}close(){this.closed=!0}apply(){for(const e of this.operations)e.apply()}undo(){for(let e=this.operations.length-1;e>=0;e--)this.operations[e].undo()}accumulate(e){if(this.closed)return!1;const t=this.operations.length?this.operations[this.operations.length-1]:null;return t&&t.accumulate(e)||(this.operations.push(e),e.apply()),!0}}class Te extends e{constructor(e){super(),this.data=e,this.undoStack=[],this.redoStack=[],this.listener=this.data.on("change",(e=>{e.addedVertices&&this.emit("vertex-add",{type:"vertex-add",vertices:e.addedVertices,operation:e.operation}),e.removedVertices&&this.emit("vertex-remove",{type:"vertex-remove",vertices:e.removedVertices,operation:e.operation}),e.updatedVertices&&this.emit("vertex-update",{type:"vertex-update",vertices:e.updatedVertices,operation:e.operation})}))}destroy(){this.listener.remove()}splitEdge(e,t){return this._apply(new pe(this.data,e,t))}updateVertices(e,t,i=$.ACCUMULATE_STEPS){return this._apply(new de(this.data,e,t),i)}moveVertices(e,t,i,s,r=$.ACCUMULATE_STEPS){return this.updateVertices(e,new fe(this.data.coordinateHelper,t,i,s),r)}scaleVertices(e,t,i,s,r,n=$.ACCUMULATE_STEPS,o=ee.CUMULATIVE){return this.updateVertices(e,new Ve(t,i,s,r,o),n)}rotateVertices(e,t,i,s=$.ACCUMULATE_STEPS,r=ee.CUMULATIVE){return this.updateVertices(e,new ve(t,i,r),s)}removeVertices(e){return this._apply(new le(this.data,e,this._minNumVerticesPerType))}appendVertex(e){return 0===this.data.components.length?null:this._apply(new ce(this.data,this.data.components[0],e))}setVertexPosition(e,t){return this._apply(new ue(this.data,e,t))}offsetEdge(e,t,i,s=$.ACCUMULATE_STEPS){return this.updateVertices([t.leftVertex,t.rightVertex],new me(this.data.coordinateHelper,e,t,i),s)}closeComponent(e){return this.data.components.includes(e)?this._apply(new ge(this.data,e)):null}canRemoveVertex(){return this.data.components[0].vertices.length>this._minNumVerticesPerType}createUndoGroup(){const e=new Ee;return this._apply(e),{remove:()=>e.close()}}undo(){if(this.undoStack.length>0){const e=this.undoStack.pop();return e.undo(),this.redoStack.push(e),e}return null}redo(){if(this.redoStack.length>0){const e=this.redoStack.pop();return e.apply(),this.undoStack.push(e),e}return null}get canUndo(){return this.undoStack.length>0}get canRedo(){return this.redoStack.length>0}get lastOperation(){return this.undoStack.length>0?this.undoStack[this.undoStack.length-1]:null}get _minNumVerticesPerType(){switch(this.data.type){case"point":return 1;case"polyline":return 2;case"polygon":return 3;default:return 0}}_apply(e,t=$.ACCUMULATE_STEPS){return t!==$.NEW_STEP&&!i(this.lastOperation)&&this.lastOperation.accumulate(e)||(e.apply(),this.undoStack.push(e),this.redoStack=[]),e}static fromGeometry(e,t){return new Te(he.fromGeometry(e,t))}}export{$ as A,ae as C,Te as E,fe as M,me as O,ye as P,ve as R,Ve as S,de as U,he as a,ee as b,re as c};
