/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import s from"../../request.js";import t from"../../core/Error.js";import{L as o}from"../../chunks/Logger.js";import{property as r}from"../../core/accessorSupport/decorators/property.js";import"../../core/lang.js";import"../../chunks/ensureType.js";import{subclass as i}from"../../core/accessorSupport/decorators/subclass.js";import m from"./MediaElementBase.js";import"../../config.js";import"../../chunks/object.js";import"../../chunks/maybe.js";import"../../kernel.js";import"../../core/urlUtils.js";import"../../chunks/string.js";import"../../core/promiseUtils.js";import"../../chunks/get.js";import"../../chunks/utils.js";import"../../chunks/handleUtils.js";import"../../chunks/metadata.js";import"../../chunks/tracking.js";import"../../chunks/Identifiable.js";import"../../core/Loadable.js";import"../../core/Promise.js";import"../../core/Accessor.js";import"../../chunks/ArrayPool.js";import"../../chunks/watch.js";import"../../core/scheduling.js";import"../../chunks/nextTick.js";import"./CornersGeoreference.js";import"../../geometry/Point.js";import"../../core/accessorSupport/decorators/cast.js";import"../../chunks/reader.js";import"../../chunks/writer.js";import"../../geometry/Geometry.js";import"../../core/JSONSupport.js";import"../../geometry/SpatialReference.js";import"../../geometry/support/webMercatorUtils.js";import"../../chunks/Ellipsoid.js";import"../../geometry/Polygon.js";import"../../geometry/Extent.js";import"../../chunks/extentUtils.js";import"../../chunks/zmUtils.js";import"../../geometry/projection.js";import"../../chunks/mathUtils.js";import"../../chunks/common.js";import"../../chunks/unitUtils.js";import"../../chunks/jsonMap.js";import"../../chunks/projectionEllipsoid.js";import"../../chunks/SimpleObservable.js";import"../../chunks/mat4.js";import"../../geometry/Multipoint.js";import"../../chunks/pe.js";import"../../chunks/assets.js";import"../../geometry/Polyline.js";import"../../chunks/aaBoundingRect.js";import"../../chunks/geodesicConstants.js";import"../../geometry/support/GeographicTransformation.js";import"../../geometry/support/GeographicTransformationStep.js";import"../../chunks/zscale.js";import"../../chunks/GeoreferenceBase.js";import"../../core/Clonable.js";import"./ExtentAndRotationGeoreference.js";let n=class extends m{constructor(e){super(e),this.content=null,this.type="image",this.image=null}load(){const e=this.image;if("string"==typeof e){const t=s(e,{responseType:"image"}).then((({data:e})=>{this._set("content",e)}));this.addResolvingPromise(t)}else if(e instanceof HTMLImageElement){const s=e.decode().then((()=>{this._set("content",e)}));this.addResolvingPromise(s)}else e?this._set("content",e):this.addResolvingPromise(Promise.reject(new t("image-element:invalid-image-type","Invalid image type",{image:e})));return Promise.resolve(this)}set image(e){"not-loaded"===this.loadStatus?this._set("image",e):o.getLogger(this.declaredClass).error("#image","image cannot be changed after the element is loaded.")}};e([r({readOnly:!0})],n.prototype,"content",void 0),e([r()],n.prototype,"image",null),n=e([i("esri.layers.support.ImageElement")],n);const p=n;export{p as default};
