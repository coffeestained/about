/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{_ as e}from"../chunks/tslib.es6.js";import t from"../request.js";import r from"../core/Error.js";import{clone as s}from"../core/lang.js";import{u as o}from"../chunks/maybe.js";import{M as i}from"../chunks/MultiOriginJSONSupport.js";import{throwIfAborted as l,isAbortError as n,throwIfAbortError as a,createTask as p}from"../core/promiseUtils.js";import{urlToObject as u,objectToQuery as c,isAbsolute as m,join as h,addQueryParameters as y,removeTrailingSlash as d,getOrigin as f,isProtocolRelative as g,normalize as j,removeFile as S,getAppBaseUrl as w}from"../core/urlUtils.js";import{property as x}from"../core/accessorSupport/decorators/property.js";import"../chunks/ensureType.js";import{r as v}from"../chunks/reader.js";import{subclass as k}from"../core/accessorSupport/decorators/subclass.js";import{w as U}from"../chunks/writer.js";import b from"../geometry/Extent.js";import _ from"../geometry/SpatialReference.js";import I from"./Layer.js";import{APIKeyMixin as T}from"./mixins/APIKeyMixin.js";import{ArcGISCachedService as P}from"./mixins/ArcGISCachedService.js";import{A as R}from"../chunks/ArcGISService.js";import{BlendLayer as L}from"./mixins/BlendLayer.js";import{CustomParametersMixin as O}from"./mixins/CustomParametersMixin.js";import{O as M}from"../chunks/OperationalLayer.js";import{PortalLayer as E}from"./mixins/PortalLayer.js";import{ScaleRangeLayer as A}from"./mixins/ScaleRangeLayer.js";import{L as B}from"../chunks/Logger.js";import D from"./support/TileInfo.js";import C from"../config.js";import{r as N,T as q}from"../chunks/TilemapCache.js";import{T as V}from"../chunks/TileKey.js";import{c as z}from"../chunks/jsonContext.js";import{e as $}from"../chunks/persistableUrlUtils.js";import{S as F}from"../chunks/StyleRepository.js";import{g as K}from"../chunks/capabilities2.js";import"../kernel.js";import"../chunks/object.js";import"../chunks/string.js";import"../core/Accessor.js";import"../chunks/get.js";import"../chunks/utils.js";import"../chunks/handleUtils.js";import"../chunks/metadata.js";import"../chunks/ArrayPool.js";import"../chunks/tracking.js";import"../chunks/watch.js";import"../core/scheduling.js";import"../chunks/nextTick.js";import"../core/JSONSupport.js";import"../geometry/Geometry.js";import"../geometry/Point.js";import"../core/accessorSupport/decorators/cast.js";import"../geometry/support/webMercatorUtils.js";import"../chunks/Ellipsoid.js";import"../geometry.js";import"../geometry/Multipoint.js";import"../chunks/zmUtils.js";import"../geometry/Polygon.js";import"../chunks/extentUtils.js";import"../geometry/Polyline.js";import"../chunks/typeUtils.js";import"../chunks/jsonMap.js";import"../geometry/support/jsonUtils.js";import"../core/Evented.js";import"../chunks/Identifiable.js";import"../core/Loadable.js";import"../core/Promise.js";import"../chunks/unitUtils.js";import"../chunks/projectionEllipsoid.js";import"../chunks/aaBoundingRect.js";import"../chunks/mathUtils.js";import"../chunks/common.js";import"./support/LOD.js";import"../chunks/byteSizeEstimations.js";import"../core/HandleOwner.js";import"../core/Handles.js";import"../core/Collection.js";import"../chunks/shared.js";import"../chunks/SimpleObservable.js";import"../core/reactiveUtils.js";import"../chunks/LRUCache.js";import"../chunks/MemCache.js";import"../chunks/arcgisLayerUrl.js";import"../chunks/jsonUtils.js";import"../chunks/parser2.js";import"../chunks/colorUtils.js";import"../chunks/screenUtils.js";import"../chunks/mat4f32.js";import"../chunks/mat4.js";import"../chunks/_commonjsHelpers.js";import"../chunks/commonProperties.js";import"../TimeExtent.js";import"../chunks/timeUtils.js";import"../support/timeUtils.js";import"../chunks/ElevationInfo.js";import"./support/fieldUtils.js";import"../chunks/arcadeOnDemand.js";import"../chunks/unitConversionUtils.js";import"../chunks/lengthUtils.js";import"../chunks/opacityUtils.js";import"../chunks/asyncUtils.js";import"../portal/Portal.js";import"../chunks/locale.js";import"../portal/PortalQueryParams.js";import"../portal/PortalQueryResult.js";import"../portal/PortalUser.js";import"../portal/PortalFolder.js";import"../portal/PortalGroup.js";import"../portal/PortalItem.js";import"../chunks/assets.js";import"../portal/PortalItemResource.js";import"../portal/PortalRating.js";import"../chunks/StyleDefinition.js";import"../chunks/enums2.js";import"../chunks/enums3.js";import"../chunks/enums.js";import"../chunks/VertexElementDescriptor.js";import"../Color.js";import"../chunks/colorUtils2.js";import"../chunks/unitBezier.js";import"../chunks/GeometryUtils.js";import"../chunks/Geometry.js";import"../chunks/definitions.js";import"../chunks/context-util.js";let H=null;const G=B.getLogger("esri.layers.support.SpriteSource");class W{constructor(e,t,r,s){this.baseURL=e,this.devicePixelRatio=t,this.maxTextureSize=r,this._spriteImageFormat=s,this._isRetina=!1,this._spritesData={},this.image=null,this.width=null,this.height=null,this.loadStatus="not-loaded"}get spriteNames(){const e=[];for(const t in this._spritesData)e.push(t);return e.sort(),e}getSpriteInfo(e){return this._spritesData[e]}async load(e){if(this.baseURL){this.loadStatus="loading";try{await this._loadSprites(e),this.loadStatus="loaded"}catch{this.loadStatus="failed"}}else this.loadStatus="failed"}_loadSprites(e){this._isRetina=this.devicePixelRatio>1.15;const s=u(this.baseURL),o=s.query?"?"+c(s.query):"",i=this._isRetina?"@2x":"",l=`${s.path}${i}.${this._spriteImageFormat}${o}`,n=`${s.path}${i}.json${o}`;return Promise.all([t(n,e),t(l,{responseType:"image",...e})]).then((([e,t])=>{const o=Object.keys(e.data);if(!o||0===o.length||1===o.length&&"_ssl"===o[0]||!t||!t.data)return this._spritesData=this.image=null,this.width=this.height=0,null;this._spritesData=e.data;const i=t.data,l=Math.max(this.maxTextureSize,4096);if(i.width>l||i.height>l){const e=`Sprite resource for style ${s.path} is bigger than the maximum allowed of ${l} pixels}`;throw G.error(e),new r("SpriteSource",e)}this.width=i.width,this.height=i.height;const n=document.createElement("canvas"),a=n.getContext("2d");n.width=i.width,n.height=i.height,a.drawImage(i,0,0,i.width,i.height);const p=a.getImageData(0,0,i.width,i.height),u=new Uint8Array(p.data);let c;for(let e=0;e<u.length;e+=4)c=u[e+3]/255,u[e]=u[e]*c,u[e+1]=u[e+1]*c,u[e+2]=u[e+2]*c;this.image=u}))}}class J{constructor(e){this.url=e}async fetchTileIndex(){return this._tileIndexPromise||(this._tileIndexPromise=t(this.url).then((e=>e.data.index))),this._tileIndexPromise}async dataKey(e,t){const r=await this.fetchTileIndex();return l(t),this._getIndexedDataKey(r,e)}_getIndexedDataKey(e,t){const r=[t];if(t.level<0||t.row<0||t.col<0||t.row>>t.level>0||t.col>>t.level>0)return null;let s=t;for(;0!==s.level;)s=new V(s.level-1,s.row>>1,s.col>>1,s.world),r.push(s);let o,i,l=e,n=r.pop();if(1===l)return n;for(;r.length;)if(o=r.pop(),i=(1&o.col)+((1&o.row)<<1),l){if(0===l[i]){n=null;break}if(1===l[i]){n=o;break}n=o,l=l[i]}return n}}class Q{constructor(e,t){this._tilemap=e,this._tileIndexUrl=t}async fetchTileIndex(e){return this._tileIndexPromise||(this._tileIndexPromise=t(this._tileIndexUrl,{query:{...e?.query}}).then((e=>e.data.index))),this._tileIndexPromise}dataKey(e,t){const{level:r,row:s,col:o}=e,i=new V(e);return this._tilemap.fetchAvailabilityUpsample(r,s,o,i,t).then((()=>(i.world=e.world,i))).catch((e=>{if(n(e))throw e;return null}))}}const Y=new Map;class X{constructor(e,t,r){this.tilemap=null,this.tileInfo=null,this.capabilities=null,this.fullExtent=null,this.name=e,this.sourceUrl=t;const o=u(this.sourceUrl),i=s(r),l=i.tiles;if(o)for(let e=0;e<l.length;e++){const t=u(l[e]);t&&(m(t.path)||(t.path=h(o.path,t.path)),l[e]=y(t.path,{...o.query,...t.query}))}this.tileServers=l;const n=r.capabilities&&r.capabilities.split(",").map((e=>e.toLowerCase().trim())),a=!0===r?.exportTilesAllowed,p=!0===n?.includes("tilemap"),c=a&&r.hasOwnProperty("maxExportTilesCount")?r.maxExportTilesCount:0;this.capabilities={operations:{supportsExportTiles:a,supportsTileMap:p},exportTiles:a?{maxExportTilesCount:+c}:null},this.tileInfo=N(i.tileInfo,i,null,{ignoreMinMaxLOD:!0});const d=r.tileMap?y(h(o.path,r.tileMap),o.query):null;p?(this.type="vector-tile",this.tilemap=new Q(new q({layer:{parsedUrl:o,tileInfo:this.tileInfo,type:"vector-tile",tileServers:this.tileServers}}),d)):d&&(this.tilemap=new J(d)),this.fullExtent=b.fromJSON(r.fullExtent)}destroy(){}async getRefKey(e,t){return this.tilemap?.dataKey(e,t)??e}requestTile(e,r,o,i){return function(e,r,o,i,l){return function(e,r){const o=Y.get(e);if(o)return o.then((e=>s(e)));const i=t(e,{responseType:"array-buffer",...r}).then((({data:t})=>(Y.delete(e),t))).catch((t=>{throw Y.delete(e),t}));return Y.set(e,i),i}(e.replace(/\{z\}/gi,r.toString()).replace(/\{y\}/gi,o.toString()).replace(/\{x\}/gi,i.toString()),l)}(this.tileServers[r%this.tileServers.length],e,r,o,i)}isCompatibleWith(e){const t=this.tileInfo,r=e.tileInfo;if(!t.spatialReference.equals(r.spatialReference))return!1;if(!t.origin.equals(r.origin))return!1;if(Math.round(t.dpi)!==Math.round(r.dpi))return!1;const s=t.lods,o=r.lods,i=Math.min(s.length,o.length);for(let e=0;e<i;e++){const t=s[e],r=o[e];if(t.level!==r.level||Math.round(t.scale)!==Math.round(r.scale))return!1}return!0}}const Z=C.defaults&&C.defaults.io.corsEnabledServers;function ee(e){if(!e)return;const t=f(e);Z&&!Z.includes(t)&&Z.push(t)}function te(...e){let t;for(let r=0;r<e.length;++r)if(g(e[r])){if(t){const s=t.split("://")[0];t=s+":"+e[r].trim()}}else t=m(e[r])?e[r]:h(t,e[r]);return d(t)}async function re(e,r,s,o,i){let n,a,p;if(l(i),"string"==typeof s){const e=j(s);ee(e),p=await t(e,{...i,responseType:"json",query:{f:"json",...i?.query}}),p.ssl&&(n&&(n=n.replace(/^http:/i,"https:")),a&&(a=a.replace(/^http:/i,"https:"))),n=e,a=e}else p={data:s},n=s.jsonUrl||null,a=o;const u=p.data;if(se(u))return e.styleUrl=n||null,async function(e,t,r,s){const o=r?S(r):w();e.styleBase=o,e.style=t,e.styleUrl&&ee(e.styleUrl),t["sprite-format"]&&"webp"===t["sprite-format"].toLowerCase()&&(e.spriteFormat="webp");const i=[];if(t.sources&&t.sources.esri){const r=t.sources.esri;r.url?await re(e,"esri",te(o,r.url),void 0,s):i.push(re(e,"esri",r,o,s))}for(const r of Object.keys(t.sources))"esri"!==r&&"vector"===t.sources[r].type&&(t.sources[r].url?i.push(re(e,r,te(o,t.sources[r].url),void 0,s)):t.sources[r].tiles&&i.push(re(e,r,t.sources[r],o,s)));await Promise.all(i)}(e,u,a,i);if(!se(u))return e.sourceUrl?oe(e,u,a,!1,r,i):(e.sourceUrl=n||null,oe(e,u,a,!0,r,i));throw new Error("You must specify the URL or the JSON for a service or for a style.")}function se(e){return!!e.sources}async function oe(e,t,r,s,o,i){const l=r?d(r)+"/":w(),n=function(e,t){if(e.hasOwnProperty("tileInfo"))return e;const r={xmin:-20037507.067161843,ymin:-20037507.067161843,xmax:20037507.067161843,ymax:20037507.067161843,spatialReference:{wkid:102100}};let s=78271.51696400007,o=295828763.7957775;const i=[],l=e.hasOwnProperty("minzoom")?+e.minzoom:0,n=e.hasOwnProperty("maxzoom")?+e.maxzoom:22;for(let e=0;e<=n;e++)e>=l&&i.push({level:e,scale:o,resolution:s}),s/=2,o/=2;for(const r of e.tiles)ee(te(t,r));return{capabilities:"TilesOnly",initialExtent:r,fullExtent:r,minScale:0,maxScale:0,tiles:e.tiles,tileInfo:{rows:512,cols:512,dpi:96,format:"pbf",origin:{x:-20037508.342787,y:20037508.342787},lods:i,spatialReference:{wkid:102100}}}}(t,l),a=new X(o,y(l,i?.query),n);if(!s&&e.primarySourceName in e.sourceNameToSource){const t=e.sourceNameToSource[e.primarySourceName];if(!t.isCompatibleWith(a))return;null!=a.fullExtent&&(null!=t.fullExtent?t.fullExtent.union(a.fullExtent):t.fullExtent=a.fullExtent.clone()),t.tileInfo.lods.length<a.tileInfo.lods.length&&(t.tileInfo=a.tileInfo)}if(s?(e.sourceBase=l,e.source=t,e.validatedSource=n,e.primarySourceName=o,e.sourceUrl&&ee(e.sourceUrl)):ee(l),e.sourceNameToSource[o]=a,!e.style){if(null==t.defaultStyles)throw new Error;return"string"==typeof t.defaultStyles?re(e,"",te(l,t.defaultStyles,"root.json"),void 0,i):re(e,"",t.defaultStyles,te(l,"root.json"),i)}}const ie=/^https:\/\/([a-z\d-]+)(\.maps([^.]*))?\.arcgis\.com/i,le={devext:{customBaseUrl:"mapsdevext.arcgis.com",portalHostname:"devext.arcgis.com"},qaext:{customBaseUrl:"mapsqa.arcgis.com",portalHostname:"qaext.arcgis.com"},www:{customBaseUrl:"maps.arcgis.com",portalHostname:"www.arcgis.com"}};function ne(e,t){if(e===t)return!0;if(!e&&null!=t)return!1;if(null!=e&&!t)return!1;if(!e.spatialReference.equals(t.spatialReference)||e.dpi!==t.dpi)return!1;const r=e.origin,s=t.origin;if(Math.abs(r.x-s.x)>=1e-6||Math.abs(r.y-s.y)>=1e-6)return!1;let o,i;e.lods[0].scale>t.lods[0].scale?(o=e,i=t):(i=e,o=t);for(let e=o.lods[0].scale;e>=i.lods[i.lods.length-1].scale-1e-6;e/=2)if(Math.abs(e-i.lods[0].scale)<1e-6)return!0;return!1}function ae(e,t){if(e===t)return e;if(!e&&null!=t)return t;if(null!=e&&!t)return e;const r=e.size[0],s=e.format,o=e.dpi,i={x:e.origin.x,y:e.origin.y},l=e.spatialReference.toJSON(),n=e.lods[0].scale>t.lods[0].scale?e.lods[0]:t.lods[0],a=e.lods[e.lods.length-1].scale<=t.lods[t.lods.length-1].scale?e.lods[e.lods.length-1]:t.lods[t.lods.length-1],p=n.scale,u=n.resolution,c=a.scale,m=[];let h=p,y=u,d=0;for(;h>c;)m.push({level:d,resolution:y,scale:h}),d++,h/=2,y/=2;return new D({size:[r,r],dpi:o,format:s||"pbf",origin:i,lods:m,spatialReference:l})}let pe=class extends(L(A(P(R(M(E(O(T(i(I)))))))))){constructor(...e){super(...e),this._spriteSourceMap=new Map,this.currentStyleInfo=null,this.style=null,this.isReference=null,this.operationalLayerType="VectorTileLayer",this.type="vector-tile",this.url=null,this.symbolCollisionBoxesVisible=!1,this.path=null}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}destroy(){if(this.sourceNameToSource)for(const e of Object.values(this.sourceNameToSource))e?.destroy();this._spriteSourceMap.clear()}async prefetchResources(e){await this.loadSpriteSource(globalThis.devicePixelRatio||1,e)}load(e){const r=this.loadFromPortal({supportedTypes:["Vector Tile Service"],supportsData:!1},e).catch(a).then((async()=>{if(!this.portalItem||!this.portalItem.id)return;const r=`${this.portalItem.itemUrl}/resources/styles/root.json`;(await t(r,{...e,query:{f:"json",...this.customParameters,token:this.apiKey}})).data&&this.read({url:r},z(this.portalItem))})).catch(a).then((()=>this._loadStyle(e)));return this.addResolvingPromise(r),Promise.resolve(this)}get attributionDataUrl(){const e=this.currentStyleInfo,t=e&&e.serviceUrl&&u(e.serviceUrl);if(!t)return null;const r=this._getDefaultAttribution(t.path);return r?y(r,{...this.customParameters,token:this.apiKey}):null}get capabilities(){const e=this.primarySource;return e?e.capabilities:{operations:{supportsExportTiles:!1,supportsTileMap:!1},exportTiles:null}}get fullExtent(){return this.primarySource?.fullExtent||null}get parsedUrl(){return this.serviceUrl?u(this.serviceUrl):null}get serviceUrl(){return this.currentStyleInfo&&this.currentStyleInfo.serviceUrl||null}get spatialReference(){return this.tileInfo&&this.tileInfo.spatialReference||null}get styleUrl(){return this.currentStyleInfo&&this.currentStyleInfo.styleUrl||null}writeStyleUrl(e,t){e&&g(e)&&(e=`https:${e}`);const r=o(function(e){const t=e?.match(ie);if(!t)return null;const[,r,s,o]=t;if(!r)return null;let i=null,l=null,n=null;const{devext:a,qaext:p,www:u}=le;if(s)if(i=r,o)switch(o.toLowerCase()){case"devext":({customBaseUrl:l,portalHostname:n}=a);break;case"qa":({customBaseUrl:l,portalHostname:n}=p);break;default:return null}else({customBaseUrl:l,portalHostname:n}=u);else switch(r.toLowerCase()){case"devext":({customBaseUrl:l,portalHostname:n}=a);break;case"qaext":({customBaseUrl:l,portalHostname:n}=p);break;case"www":({customBaseUrl:l,portalHostname:n}=u);break;default:return null}return{customBaseUrl:l,isPortal:!1,portalHostname:n,urlKey:i}}(e));t.styleUrl=$(e,r)}get tileInfo(){const e=[];for(const t in this.sourceNameToSource)e.push(this.sourceNameToSource[t]);let t=this.primarySource?.tileInfo||new D;if(e.length>1)for(let r=0;r<e.length;r++)ne(t,e[r].tileInfo)&&(t=ae(t,e[r].tileInfo));return t}readVersion(e,t){return t.version?parseFloat(t.version):parseFloat(t.currentVersion)}async loadSpriteSource(e=1,t){if(!this._spriteSourceMap.has(e)){const r=K("2d").maxTextureSize,s=this.currentStyleInfo?.spriteUrl?y(this.currentStyleInfo.spriteUrl,{...this.customParameters,token:this.apiKey}):null,o=new W(s,e,r,this.currentStyleInfo.spriteFormat);await o.load(t),this._spriteSourceMap.set(e,o)}return this._spriteSourceMap.get(e)}async setSpriteSource(e,t="png",r=1,s){const o=K("2d").maxTextureSize,i=e?y(e,{...this.customParameters,token:this.apiKey}):null;if(!i)return null;const l=new W(i,r,o,t);try{return await l.load(s),this._spriteSourceMap.clear(),this._spriteSourceMap.set(r,l),this.currentStyleInfo.spriteUrl=i,this.emit("spriteSource-change",{spriteSource:l}),l}catch(e){a(e)}return null}async loadStyle(e,t){const r=e||this.style||this.url;return this._loadingTask&&"string"==typeof r&&this.url===r||(this._loadingTask?.abort(),this._loadingTask=p((e=>(this._spriteSourceMap.clear(),this._getSourceAndStyle(r,{signal:e}))),t)),this._loadingTask.promise}getStyleLayerId(e){return this.styleRepository.getStyleLayerId(e)}getStyleLayerIndex(e){return this.styleRepository.getStyleLayerIndex(e)}getPaintProperties(e){return s(this.styleRepository.getPaintProperties(e))}setPaintProperties(e,t){const r=this.styleRepository.isPainterDataDriven(e);this.styleRepository.setPaintProperties(e,t);const s=this.styleRepository.isPainterDataDriven(e);this.emit("paint-change",{layer:e,paint:t,isDataDriven:r||s})}getStyleLayer(e){return s(this.styleRepository.getStyleLayer(e))}setStyleLayer(e,t){this.styleRepository.setStyleLayer(e,t),this.emit("style-layer-change",{layer:e,index:t})}deleteStyleLayer(e){this.styleRepository.deleteStyleLayer(e),this.emit("delete-style-layer",{layer:e})}getLayoutProperties(e){return s(this.styleRepository.getLayoutProperties(e))}setLayoutProperties(e,t){this.styleRepository.setLayoutProperties(e,t),this.emit("layout-change",{layer:e,layout:t})}setStyleLayerVisibility(e,t){this.styleRepository.setStyleLayerVisibility(e,t),this.emit("style-layer-visibility-change",{layer:e,visibility:t})}getStyleLayerVisibility(e){return this.styleRepository.getStyleLayerVisibility(e)}write(e,t){return t?.origin&&!this.styleUrl?(t.messages&&t.messages.push(new r("vectortilelayer:unsupported",`VectorTileLayer (${this.title}, ${this.id}) with style defined by JSON only are not supported`,{layer:this})),null):super.write(e,t)}getTileUrl(e,t,r){return null}async _getSourceAndStyle(e,t){if(!e)throw new Error("invalid style!");const r=await async function(e,t){const r={source:null,sourceBase:null,sourceUrl:null,validatedSource:null,style:null,styleBase:null,styleUrl:null,sourceNameToSource:{},primarySourceName:"",spriteFormat:"png"},[s,o]="string"==typeof e?[e,null]:[null,e.jsonUrl];await re(r,"esri",e,o,t);const i={layerDefinition:r.validatedSource,url:s,serviceUrl:r.sourceUrl,style:r.style,styleUrl:r.styleUrl,spriteUrl:r.style.sprite&&te(r.styleBase,r.style.sprite),spriteFormat:r.spriteFormat,glyphsUrl:r.style.glyphs&&te(r.styleBase,r.style.glyphs),sourceNameToSource:r.sourceNameToSource,primarySourceName:r.primarySourceName};return ee(i.spriteUrl),ee(i.glyphsUrl),i}(e,{...t,query:{...this.customParameters,token:this.apiKey}});"webp"===r.spriteFormat&&(await function(e){if(H)return H;const t="UklGRiIAAABXRUJQVlA4IBYAAAAwAQCdASoBAAEADsD+JaQAA3AAAAAA";return H=new Promise((e=>{const r=new Image;r.onload=()=>{r.onload=r.onerror=null,e(r.width>0&&r.height>0)},r.onerror=()=>{r.onload=r.onerror=null,e(!1)},r.src="data:image/webp;base64,"+t})),H}()||(r.spriteFormat="png")),this._set("currentStyleInfo",{...r}),"string"==typeof e?(this.url=e,this.style=null):(this.url=null,this.style=e),this._set("sourceNameToSource",r.sourceNameToSource),this._set("primarySource",r.sourceNameToSource[r.primarySourceName]),this._set("styleRepository",new F(r.style)),this.read(r.layerDefinition,{origin:"service"}),this.emit("load-style")}_getDefaultAttribution(e){const t=e.match(/^https?:\/\/(?:basemaps|basemapsbeta|basemapsdev)(?:-api)?\.arcgis\.com(\/[^\/]+)?\/arcgis\/rest\/services\/([^\/]+(\/[^\/]+)*)\/vectortileserver/i),r=["OpenStreetMap_v2","OpenStreetMap_Daylight_v2","OpenStreetMap_Export_v2","OpenStreetMap_FTS_v2","OpenStreetMap_GCS_v2","World_Basemap","World_Basemap_v2","World_Basemap_Export_v2","World_Basemap_GCS_v2","World_Basemap_WGS84","World_Contours_v2"];if(!t)return;const s=t[2]&&t[2].toLowerCase();if(!s)return;const o=t[1]||"";for(const e of r)if(e.toLowerCase().includes(s))return j(`//static.arcgis.com/attribution/Vector${o}/${e}`)}async _loadStyle(e){return this._loadingTask?.promise??this.loadStyle(null,e)}};e([x({readOnly:!0})],pe.prototype,"attributionDataUrl",null),e([x({type:["show","hide"]})],pe.prototype,"listMode",void 0),e([x({json:{read:!0,write:!0}})],pe.prototype,"blendMode",void 0),e([x({readOnly:!0,json:{read:!1}})],pe.prototype,"capabilities",null),e([x({readOnly:!0})],pe.prototype,"currentStyleInfo",void 0),e([x({json:{read:!1},readOnly:!0,type:b})],pe.prototype,"fullExtent",null),e([x()],pe.prototype,"style",void 0),e([x({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],pe.prototype,"isReference",void 0),e([x({type:["VectorTileLayer"]})],pe.prototype,"operationalLayerType",void 0),e([x({readOnly:!0})],pe.prototype,"parsedUrl",null),e([x({readOnly:!0})],pe.prototype,"serviceUrl",null),e([x({type:_,readOnly:!0})],pe.prototype,"spatialReference",null),e([x({readOnly:!0})],pe.prototype,"styleRepository",void 0),e([x({readOnly:!0})],pe.prototype,"sourceNameToSource",void 0),e([x({readOnly:!0})],pe.prototype,"primarySource",void 0),e([x({type:String,readOnly:!0,json:{write:{ignoreOrigin:!0},origins:{"web-document":{write:{ignoreOrigin:!0,isRequired:!0}}}}})],pe.prototype,"styleUrl",null),e([U(["portal-item","web-document"],"styleUrl")],pe.prototype,"writeStyleUrl",null),e([x({json:{read:!1,origins:{service:{read:!1}}},readOnly:!0,type:D})],pe.prototype,"tileInfo",null),e([x({json:{read:!1},readOnly:!0,value:"vector-tile"})],pe.prototype,"type",void 0),e([x({json:{origins:{"web-document":{read:{source:"styleUrl"}},"portal-item":{read:{source:"url"}}},write:!1,read:!1}})],pe.prototype,"url",void 0),e([x({readOnly:!0})],pe.prototype,"version",void 0),e([v("version",["version","currentVersion"])],pe.prototype,"readVersion",null),e([x({type:Boolean})],pe.prototype,"symbolCollisionBoxesVisible",void 0),e([x({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],pe.prototype,"path",void 0),pe=e([k("esri.layers.VectorTileLayer")],pe);const ue=pe;export{ue as default};
