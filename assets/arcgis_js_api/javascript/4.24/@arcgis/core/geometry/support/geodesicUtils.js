/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import"../../geometry.js";import t from"../../core/Error.js";import{c as e}from"../../chunks/unitUtils.js";import{s,W as n,t as i}from"../../chunks/geodesicConstants.js";import r,{l as o,e as a}from"../SpatialReference.js";import c from"../Polyline.js";import p from"../Polygon.js";import h from"../Point.js";import"../../chunks/ensureType.js";import"../../core/lang.js";import"../../chunks/maybe.js";import"../../chunks/Logger.js";import"../../config.js";import"../../chunks/object.js";import"../../chunks/string.js";import"../Extent.js";import"../../chunks/tslib.es6.js";import"../../core/accessorSupport/decorators/property.js";import"../../chunks/get.js";import"../../chunks/utils.js";import"../../chunks/handleUtils.js";import"../../chunks/metadata.js";import"../../core/accessorSupport/decorators/subclass.js";import"../../chunks/tracking.js";import"../Geometry.js";import"../../core/JSONSupport.js";import"../../core/Accessor.js";import"../../chunks/ArrayPool.js";import"../../chunks/watch.js";import"../../core/scheduling.js";import"../../chunks/nextTick.js";import"../../core/promiseUtils.js";import"../../chunks/reader.js";import"../../chunks/writer.js";import"./webMercatorUtils.js";import"../../chunks/Ellipsoid.js";import"../../core/accessorSupport/decorators/cast.js";import"../Multipoint.js";import"../../chunks/zmUtils.js";import"../../chunks/typeUtils.js";import"../../chunks/jsonMap.js";import"./jsonUtils.js";import"../../chunks/extentUtils.js";import"../../chunks/projectionEllipsoid.js";function l(t){if(!t)return null;if(o(t)&&t.wkid){const e=s[t.wkid];if(e)return e}if(t.wkt){const e=function(t){const e=n.exec(t);if(!e||2!==e.length)return null;const s=e[1].split(",");if(!s||s.length<3)return null;const i=parseFloat(s[1]),r=parseFloat(s[2]);return isNaN(i)||isNaN(r)?null:{a:i,f:0===r?0:1/r}}(t.wkt);if(e)return e}return null}function u(t){const e=l(t||r.WGS84);if(function(t){return"b"in t&&"eSq"in t&&"radius"in t}(e))return e;const s=e.a*(1-e.f);return Object.assign(e,{b:s,eSq:1-(s/e.a)**2,radius:(2*e.a+s)/3,densificationRatio:1e4/((2*e.a+s)/3)})}function m(t){return t<0?t+360:t}function f(t,e,s){const{a:n,eSq:r}=u(s),o=Math.sqrt(r),a=Math.sin(e[1]*i),c=n*e[0]*i;let p;return p=r>0?n*((1-r)*(a/(1-r*(a*a))-1/(2*o)*Math.log((1-o*a)/(1+o*a))))*.5:n*a,t[0]=c,t[1]=p,t}function d(t){return null!==l(t)}function g(s,n="square-meters"){if(s.some((t=>!d(t.spatialReference))))throw new t("geodesic-areas:invalid-spatial-reference","the input geometries spatial reference is not supported");const i=[];for(let t=0;t<s.length;t++){const e=s[t],n=e.spatialReference,{radius:r,densificationRatio:o}=u(n),a=r*o;i.push(j(e,a))}const r=[],o=[0,0],a=[0,0];for(let t=0;t<i.length;t++){const{rings:s,spatialReference:c}=i[t];let p=0;for(let t=0;t<s.length;t++){const e=s[t];f(o,e[0],c),f(a,e[e.length-1],c);let n=a[0]*o[1]-o[0]*a[1];for(let t=0;t<e.length-1;t++)f(o,e[t+1],c),f(a,e[t],c),n+=a[0]*o[1]-o[0]*a[1];p+=n}p=e(p,"square-meters",n),r.push(p/-2)}return r}function M(s,n="meters"){if(!s)throw new t("geodesic-lengths:invalid-geometries","the input geometries type is not supported");if(s.some((t=>!d(t.spatialReference))))throw new t("geodesic-lengths:invalid-spatial-reference","the input geometries spatial reference is not supported");const i=[];for(let t=0;t<s.length;t++){const r=s[t],{spatialReference:o}=r,a="polyline"===r.type?r.paths:r.rings;let c=0;for(let t=0;t<a.length;t++){const e=a[t];let s=0;for(let t=1;t<e.length;t++){const n=e[t-1][0],i=e[t][0],r=e[t-1][1],a=e[t][1];if(r!==a||n!==i){const t={distance:null};y(t,[n,r],[i,a],o),s+=t.distance}}c+=s}c=e(c,"meters",n),i.push(c)}return i}function j(e,s){if("polyline"!==e.type&&"polygon"!==e.type)throw new t("geodesic-densify:invalid-geometry","the input geometry is neither polyline nor polygon");const{spatialReference:n}=e;if(!d(n))throw new t("geodesic-densify:invalid-spatial-reference","the input geometry spatial reference is not supported");const i="polyline"===e.type?e.paths:e.rings,r=[],o=[0,0],a={distance:null};for(const t of i){const e=[];r.push(e),e.push([t[0][0],t[0][1]]);let i,c,p=t[0][0],h=t[0][1];for(let r=0;r<t.length-1;r++){if(i=t[r+1][0],c=t[r+1][1],p===i&&h===c)continue;const l=[p,h];y(a,[p,h],[i,c],n);const{azimuth:u,distance:m}=a,f=m/s;if(f>1){for(let t=1;t<=f-1;t++)w(o,l,u,t*s,n),e.push(o.slice(0));w(o,l,u,(m+Math.floor(f-1)*s)/2,n),e.push(o.slice(0))}w(o,l,u,m,n),e.push(o.slice(0)),p=o[0],h=o[1]}}return"polyline"===e.type?new c({paths:r,spatialReference:n}):new p({rings:r,spatialReference:n})}function w(t,e,s,n,r){const o=e[0],a=e[1],c=o*i,p=a*i,h=s*i,{a:l,b:m,f}=u(r),d=Math.sin(h),g=Math.cos(h),M=(1-f)*Math.tan(p),j=1/Math.sqrt(1+M*M),w=M*j,y=Math.atan2(M,g),k=j*d,R=k*k,v=1-R,b=v*(l*l-m*m)/(m*m),z=1+b/16384*(4096+b*(b*(320-175*b)-768)),x=b/1024*(256+b*(b*(74-47*b)-128));let S,q,A,U,N=n/(m*z),P=2*Math.PI;for(;Math.abs(N-P)>1e-12;)A=Math.cos(2*y+N),S=Math.sin(N),q=Math.cos(N),U=x*S*(A+x/4*(q*(2*A*A-1)-x/6*A*(4*S*S-3)*(4*A*A-3))),P=N,N=n/(m*z)+U;const E=w*S-j*q*g,F=Math.atan2(w*q+j*S*g,(1-f)*Math.sqrt(R+E*E)),G=Math.atan2(S*d,j*q-w*S*g),O=f/16*v*(4+f*(4-3*v)),T=F/i,W=(c+(G-(1-O)*f*k*(N+O*S*(A+O*q*(2*A*A-1)))))/i;return t[0]=W,t[1]=T,t}function y(t,e,s,n){const r=e[0]*i,o=e[1]*i,a=s[0]*i,c=s[1]*i,{a:p,b:h,f:l,radius:m}=u(n),f=a-r,d=Math.atan((1-l)*Math.tan(o)),g=Math.atan((1-l)*Math.tan(c)),M=Math.sin(d),j=Math.cos(d),w=Math.sin(g),y=Math.cos(g);let k,R,v,b,z,x,S,q,A,U,N=1e3,P=f;do{if(S=Math.sin(P),q=Math.cos(P),v=Math.sqrt(y*S*(y*S)+(j*w-M*y*q)*(j*w-M*y*q)),0===v)return t.distance=0,t.azimuth=void 0,t.reverseAzimuth=void 0,t;z=M*w+j*y*q,x=Math.atan2(v,z),A=j*y*S/v,R=1-A*A,b=z-2*M*w/R,isNaN(b)&&(b=0),U=l/16*R*(4+l*(4-3*R)),k=P,P=f+(1-U)*l*A*(x+U*v*(b+U*z*(2*b*b-1)))}while(Math.abs(P-k)>1e-12&&--N>0);if(0===N){const e=m,s=Math.acos(Math.sin(o)*Math.sin(c)+Math.cos(o)*Math.cos(c)*Math.cos(a-r))*e,n=a-r,p=Math.sin(n)*Math.cos(c),h=Math.cos(o)*Math.sin(c)-Math.sin(o)*Math.cos(c)*Math.cos(n),l=Math.atan2(p,h);return t.azimuth=l/i,t.distance=s,t.reverseAzimuth=void 0,t}const E=R*(p*p-h*h)/(h*h),F=E/1024*(256+E*(E*(74-47*E)-128)),G=h*(1+E/16384*(4096+E*(E*(320-175*E)-768)))*(x-F*v*(b+F/4*(z*(2*b*b-1)-F/6*b*(4*v*v-3)*(4*b*b-3)))),O=Math.atan2(y*Math.sin(P),j*w-M*y*Math.cos(P)),T=Math.atan2(j*Math.sin(P),j*w*Math.cos(P)-M*y);return t.azimuth=O/i,t.distance=G,t.reverseAzimuth=T/i,t}function k(s,n,i="meters"){if(!s||!n)throw new t("geodesic-distance:missing-parameters","one or both input parameters are missing");if(!s.spatialReference||!n.spatialReference)throw new t("geodesic-distance:invalid-parameters","one or both input points do not have a spatial reference");if(!a(s.spatialReference,n.spatialReference))throw new t("geodesic-distance:invalid-parameters","spatial references of input parameters do not match");const{spatialReference:r}=s;if(!d(r))throw new t("geodesic-distance:not-supported","input geometry spatial reference is not supported");if(s.x===n.x&&s.y===n.y)return{distance:0,azimuth:0,reverseAzimuth:0};const o={distance:null};return y(o,[s.x,s.y],[n.x,n.y],r),o.distance=e(o.distance,"meters",i),o.azimuth=m(o.azimuth),o.reverseAzimuth=m(o.reverseAzimuth),o}function R(e,s,n){if(!e||null==s||null==n)throw new t("point-from-distance:missing-parameters","one or more input parameters are missing or undefined");if(n<0||n>360)throw new t("point-from-distance:-of-bounds","azimuth is restricted to angles between, and including, 0° to 360° degrees");if(!e.spatialReference)throw new t("point-from-distance:missing-spatial-reference","the input point must have a spatial reference");const{spatialReference:i}=e;if(!d(i))throw new t("geodesic-distance:not-supported","input geometry spatial reference is not supported");const r=[0,0];return w(r,[e.x,e.y],n,s,i),new h({x:r[0],y:r[1],spatialReference:i})}export{w as directGeodeticSolver,g as geodesicAreas,j as geodesicDensify,k as geodesicDistance,M as geodesicLengths,y as inverseGeodeticSolver,d as isSupported,R as pointFromDistance};
