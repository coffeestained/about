/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{_ as s}from"../chunks/tslib.es6.js";import e from"./Accessor.js";import t from"./Handles.js";import{property as n}from"./accessorSupport/decorators/property.js";import{subclass as i}from"./accessorSupport/decorators/subclass.js";import{a as r}from"../chunks/maybe.js";import{watch as a,when as d,on as o,sync as h}from"./reactiveUtils.js";import{schedule as l}from"./scheduling.js";import"../chunks/get.js";import"../chunks/utils.js";import"../chunks/handleUtils.js";import"./lang.js";import"../chunks/metadata.js";import"../chunks/Logger.js";import"../config.js";import"../chunks/object.js";import"../chunks/string.js";import"../chunks/ArrayPool.js";import"../chunks/tracking.js";import"../chunks/watch.js";import"../chunks/ensureType.js";import"./Error.js";import"../chunks/nextTick.js";import"./promiseUtils.js";import"./Collection.js";import"./Evented.js";import"../chunks/shared.js";import"../chunks/SimpleObservable.js";let c=class extends e{constructor(){super(...arguments),this.updating=!1,this.handleId=0,this.handles=new t,this.scheduleHandleId=0,this.pendingPromises=new Set}destroy(){this.removeAll(),this.handles.destroy()}add(s,e,t={}){return this._installWatch(s,e,t,a)}addWhen(s,e,t={}){return this._installWatch(s,e,t,d)}addOnCollectionChange(s,e,{initial:t=!1,final:n=!1}={}){const i=++this.handleId;return this.handles.add([o(s,"after-changes",this._createSyncUpdatingCallback(),h),o(s,"change",e,{onListenerAdd:t?s=>e({added:s.toArray(),removed:[]}):void 0,onListenerRemove:n?s=>e({added:[],removed:s.toArray()}):void 0})],i),{remove:()=>this.handles.remove(i)}}addPromise(s){if(r(s))return s;const e=++this.handleId;this.handles.add({remove:()=>{this.pendingPromises.delete(s)&&(0!==this.pendingPromises.size||this.handles.has(p)||this._set("updating",!1))}},e),this.pendingPromises.add(s),this._set("updating",!0);const t=()=>this.handles.remove(e);return s.then(t,t),s}removeAll(){this.pendingPromises.clear(),this.handles.removeAll(),this._set("updating",!1)}_installWatch(s,e,t={},n){const i=++this.handleId;t.sync||this._installSyncUpdatingWatch(s,i);const r=n(s,e,t);return this.handles.add(r,i),{remove:()=>this.handles.remove(i)}}_installSyncUpdatingWatch(s,e){const t=this._createSyncUpdatingCallback(),n=a(s,t,{sync:!0,equals:()=>!1});return this.handles.add(n,e),n}_createSyncUpdatingCallback(){return()=>{this.handles.remove(p),++this.scheduleHandleId;const s=this.scheduleHandleId;this._get("updating")||this._set("updating",!0),this.handles.add(l((()=>{s===this.scheduleHandleId&&(this._set("updating",this.pendingPromises.size>0),this.handles.remove(p))})),p)}}};s([n({readOnly:!0})],c.prototype,"updating",void 0),c=s([i("esri.core.support.WatchUpdatingTracking")],c);const p=-42;var m;!function(s){s[s.NONE=0]="NONE",s[s.SYNC=1]="SYNC",s[s.INIT=2]="INIT"}(m||(m={}));const u=e=>{let r=class extends e{destroy(){this.destroyed||(this._get("handles")?.destroy(),this._get("updatingHandles")?.destroy())}get handles(){return this._get("handles")||new t}get updatingHandles(){return this._get("updatingHandles")||new c}};return s([n({readOnly:!0})],r.prototype,"handles",null),s([n({readOnly:!0})],r.prototype,"updatingHandles",null),r=s([i("esri.core.HandleOwner")],r),r};let g=class extends(u(e)){};g=s([i("esri.core.HandleOwner")],g);export{g as HandleOwner,u as HandleOwnerMixin,c as W};
