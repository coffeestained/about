/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
import{_ as e}from"../chunks/tslib.es6.js";import t from"../config.js";import{id as r}from"../kernel.js";import o,{s}from"../request.js";import i from"../core/Error.js";import{JSONSupportMixin as a}from"../core/JSONSupport.js";import l from"../core/Loadable.js";import{i as n}from"../chunks/maybe.js";import{throwIfAborted as u,isAborted as p,createAbortError as h,throwIfAbortError as d}from"../core/promiseUtils.js";import{property as c}from"../core/accessorSupport/decorators/property.js";import"../core/lang.js";import{j as m}from"../chunks/ensureType.js";import{r as y}from"../chunks/reader.js";import{subclass as v}from"../core/accessorSupport/decorators/subclass.js";import f from"../geometry/Extent.js";import{g as S}from"../chunks/locale.js";import g from"./PortalQueryParams.js";import P from"./PortalQueryResult.js";import j from"./PortalUser.js";import"../chunks/object.js";import"../core/urlUtils.js";import"../chunks/Logger.js";import"../chunks/string.js";import"../core/Accessor.js";import"../chunks/get.js";import"../chunks/utils.js";import"../chunks/handleUtils.js";import"../chunks/metadata.js";import"../chunks/ArrayPool.js";import"../chunks/tracking.js";import"../chunks/watch.js";import"../core/scheduling.js";import"../chunks/nextTick.js";import"../core/Promise.js";import"../geometry/Geometry.js";import"../geometry/SpatialReference.js";import"../chunks/writer.js";import"../geometry/Point.js";import"../core/accessorSupport/decorators/cast.js";import"../geometry/support/webMercatorUtils.js";import"../chunks/Ellipsoid.js";import"../chunks/jsonMap.js";import"./PortalFolder.js";import"./PortalGroup.js";var _;let G;const O={PortalGroup:()=>import("./PortalGroup.js"),PortalItem:()=>import("./PortalItem.js"),PortalUser:()=>import("./PortalUser.js")};let U=_=class extends(a(l)){constructor(e){super(e),this.access=null,this.allSSL=!1,this.authMode="auto",this.authorizedCrossOriginDomains=null,this.basemapGalleryGroupQuery=null,this.bingKey=null,this.canListApps=!1,this.canListData=!1,this.canListPreProvisionedItems=!1,this.canProvisionDirectPurchase=!1,this.canSearchPublic=!0,this.canShareBingPublic=!1,this.canSharePublic=!1,this.canSignInArcGIS=!1,this.canSignInIDP=!1,this.colorSetsGroupQuery=null,this.commentsEnabled=!1,this.created=null,this.culture=null,this.customBaseUrl=null,this.defaultBasemap=null,this.defaultDevBasemap=null,this.defaultExtent=null,this.defaultVectorBasemap=null,this.description=null,this.devBasemapGalleryGroupQuery=null,this.eueiEnabled=null,this.featuredGroups=null,this.featuredItemsGroupQuery=null,this.galleryTemplatesGroupQuery=null,this.livingAtlasGroupQuery=null,this.hasCategorySchema=!1,this.helperServices=null,this.homePageFeaturedContent=null,this.homePageFeaturedContentCount=null,this.httpPort=null,this.httpsPort=null,this.id=null,this.ipCntryCode=null,this.isPortal=!1,this.isReadOnly=!1,this.layerTemplatesGroupQuery=null,this.maxTokenExpirationMinutes=null,this.modified=null,this.name=null,this.portalHostname=null,this.portalMode=null,this.portalProperties=null,this.region=null,this.rotatorPanels=null,this.showHomePageDescription=!1,this.sourceJSON=null,this.supportsHostedServices=!1,this.symbolSetsGroupQuery=null,this.templatesGroupQuery=null,this.units=null,this.url=t.portalUrl,this.urlKey=null,this.user=null,this.useStandardizedQuery=!1,this.useVectorBasemaps=!1,this.vectorBasemapGalleryGroupQuery=null}normalizeCtorArgs(e){return"string"==typeof e?{url:e}:e}destroy(){this._esriId_credentialCreateHandle&&(this._esriId_credentialCreateHandle.remove(),this._esriId_credentialCreateHandle=null)}readAuthorizedCrossOriginDomains(e){if(e)for(const r of e)t.request.trustedServers.includes(r)||t.request.trustedServers.push(r);return e}readDefaultBasemap(e){return this._readBasemap(e)}readDefaultDevBasemap(e){return this._readBasemap(e)}readDefaultVectorBasemap(e){return this._readBasemap(e)}get extraQuery(){const e=!(this.user&&this.user.orgId)||this.canSearchPublic;return this.id&&!e?` AND orgid:${this.id}`:null}get isOrganization(){return!!this.access}get restUrl(){let e=this.url;if(e){const t=e.indexOf("/sharing");e=t>0?e.substring(0,t):this.url.replace(/\/+$/,""),e+="/sharing/rest"}return e}get thumbnailUrl(){const e=this.restUrl,t=this.thumbnail;return e&&t?this._normalizeSSL(e+"/portals/self/resources/"+t):null}readUrlKey(e){return e?e.toLowerCase():e}readUser(e){let t=null;return e&&(t=j.fromJSON(e),t.portal=this),t}load(e){const t=import("../Basemap.js").then((e=>e.B)).then((({default:t})=>{u(e),G=t})).then((()=>this.sourceJSON?this.sourceJSON:this._fetchSelf(this.authMode,!1,e))).then((e=>{if(r){const e=r;this.credential=e.findCredential(this.restUrl),this.credential||this.authMode!==_.AUTH_MODE_AUTO||(this._esriId_credentialCreateHandle=e.on("credential-create",(()=>{e.findCredential(this.restUrl)&&this._signIn()})))}this.sourceJSON=e,this.read(e)}));return this.addResolvingPromise(t),Promise.resolve(this)}async createElevationLayers(){await this.load();const e=this._getHelperService("defaultElevationLayers"),t=(await import("../layers/ElevationLayer.js")).default;return e?e.map((e=>new t({id:e.id,url:e.url}))):[]}fetchBasemaps(e,r){const o=new g;return o.query=e||(t.apiKey&&s(this.url)?this.devBasemapGalleryGroupQuery:this.useVectorBasemaps?this.vectorBasemapGalleryGroupQuery:this.basemapGalleryGroupQuery),o.disableExtraQuery=!0,this.queryGroups(o,r).then((e=>{if(o.num=100,o.query='type:"Web Map" -type:"Web Application"',e.total){const t=e.results[0];return o.sortField=t.sortField||"name",o.sortOrder=t.sortOrder||"desc",t.queryItems(o,r)}return null})).then((e=>{let t;return t=e&&e.total?e.results.filter((e=>"Web Map"===e.type)).map((e=>new G({portalItem:e}))):[],t}))}fetchCategorySchema(e){return this.hasCategorySchema?this._request(this.restUrl+"/portals/self/categorySchema",e).then((e=>e.categorySchema)):p(e)?Promise.reject(h()):Promise.resolve([])}fetchFeaturedGroups(e){const t=this.featuredGroups,r=new g;if(r.num=100,r.sortField="title",t&&t.length){const o=[];for(const e of t)o.push(`(title:"${e.title}" AND owner:${e.owner})`);return r.query=o.join(" OR "),this.queryGroups(r,e).then((e=>e.results))}return p(e)?Promise.reject(h()):Promise.resolve([])}fetchRegions(e){const t=this.user?.culture||this.culture||S();return this._request(this.restUrl+"/portals/regions",{...e,query:{culture:t}})}fetchSettings(e){const t=this.user?.culture||this.culture||S();return this._request(this.restUrl+"/portals/self/settings",{...e,query:{culture:t}})}static getDefault(){return _._default&&!_._default.destroyed||(_._default=new _),_._default}queryGroups(e,t){return this._queryPortal("/community/groups",e,"PortalGroup",t)}queryItems(e,t){return this._queryPortal("/search",e,"PortalItem",t)}queryUsers(e,t){return e.sortField||(e.sortField="username"),this._queryPortal("/community/users",e,"PortalUser",t)}toJSON(){throw new i("internal:not-yet-implemented","Portal.toJSON is not yet implemented")}static fromJSON(e){if(!e)return null;if(e.declaredClass)throw new Error("JSON object is already hydrated");return new _({sourceJSON:e})}_getHelperService(e){const t=this.helperServices&&this.helperServices[e];if(!t)throw new i("portal:service-not-found",`The \`helperServices\` do not include an entry named "${e}"`);return t}_getHelperServiceUrl(e){const t=this._getHelperService(e);if(!t.url)throw new i("portal:service-url-not-found",`The \`helperServices\` entry "${e}" does not include a \`url\` value`);return t.url}_fetchSelf(e=this.authMode,t=!1,r){const o=this.restUrl+"/portals/self",s={authMode:e,query:{culture:S().toLowerCase()},...r};return"auto"===s.authMode&&(s.authMode="no-prompt"),t&&(s.query.default=!0),this._request(o,s)}_queryPortal(e,t,r,o){const s=m(g,t),i=t=>this._request(this.restUrl+e,{...s.toRequestOptions(this),...o}).then((e=>{const r=s.clone();return r.start=e.nextStart,new P({nextQueryParams:r,queryParams:s,total:e.total,results:_._resultsToTypedArray(t,{portal:this},e,o)})})).then((e=>Promise.all(e.results.map((t=>"function"==typeof t.when?t.when():e))).then((()=>e),(t=>(d(t),e)))));return r&&O[r]?O[r]().then((({default:e})=>(u(o),i(e)))):i()}_signIn(){if(this.authMode===_.AUTH_MODE_ANONYMOUS)return Promise.reject(new i("portal:invalid-auth-mode",`Current "authMode"' is "${this.authMode}"`));if("failed"===this.loadStatus)return Promise.reject(this.loadError);const e=e=>Promise.resolve().then((()=>"not-loaded"===this.loadStatus?(e||(this.authMode="immediate"),this.load().then((()=>null))):"loading"===this.loadStatus?this.load().then((()=>this.credential?null:(this.credential=e,this._fetchSelf("immediate")))):this.user&&this.credential===e?null:(this.credential=e,this._fetchSelf("immediate")))).then((e=>{e&&(this.sourceJSON=e,this.read(e))}));return r?r.getCredential(this.restUrl).then((t=>e(t))):e(this.credential)}_normalizeSSL(e){return e.replace(/^http:/i,"https:").replace(":7080",":7443")}_normalizeUrl(e){const t=this.credential&&this.credential.token;return this._normalizeSSL(t?e+(e.includes("?")?"&":"?")+"token="+t:e)}_requestToTypedArray(e,t,r){return this._request(e,t).then((e=>{const t=_._resultsToTypedArray(r,{portal:this},e);return Promise.all(t.map((t=>"function"==typeof t.when?t.when():e))).then((()=>t),(()=>t))}))}_readBasemap(e){if(e){const t=G.fromJSON(e);return t.portalItem={portal:this},t}return null}_request(e,t={}){const r={f:"json",...t.query},{authMode:s=(this.authMode===_.AUTH_MODE_ANONYMOUS?"anonymous":"auto"),body:i=null,cacheBust:a=!1,method:l="auto",responseType:n="json",signal:u}=t,p={authMode:s,body:i,cacheBust:a,method:l,query:r,responseType:n,timeout:0,signal:u};return o(this._normalizeSSL(e),p).then((e=>e.data))}static _resultsToTypedArray(e,t,r,o){let s;if(r){const i=n(o)?o.signal:null;s=r.listings||r.notifications||r.userInvitations||r.tags||r.items||r.groups||r.comments||r.provisions||r.results||r.relatedItems||r,(e||t)&&(s=s.map((r=>{const o=Object.assign(e?e.fromJSON(r):r,t);return"function"==typeof o.load&&o.load(i),o})))}else s=[];return s}};U.AUTH_MODE_ANONYMOUS="anonymous",U.AUTH_MODE_AUTO="auto",U.AUTH_MODE_IMMEDIATE="immediate",e([c()],U.prototype,"access",void 0),e([c()],U.prototype,"allSSL",void 0),e([c()],U.prototype,"authMode",void 0),e([c()],U.prototype,"authorizedCrossOriginDomains",void 0),e([y("authorizedCrossOriginDomains")],U.prototype,"readAuthorizedCrossOriginDomains",null),e([c()],U.prototype,"basemapGalleryGroupQuery",void 0),e([c()],U.prototype,"bingKey",void 0),e([c()],U.prototype,"canListApps",void 0),e([c()],U.prototype,"canListData",void 0),e([c()],U.prototype,"canListPreProvisionedItems",void 0),e([c()],U.prototype,"canProvisionDirectPurchase",void 0),e([c()],U.prototype,"canSearchPublic",void 0),e([c()],U.prototype,"canShareBingPublic",void 0),e([c()],U.prototype,"canSharePublic",void 0),e([c()],U.prototype,"canSignInArcGIS",void 0),e([c()],U.prototype,"canSignInIDP",void 0),e([c()],U.prototype,"colorSetsGroupQuery",void 0),e([c()],U.prototype,"commentsEnabled",void 0),e([c({type:Date})],U.prototype,"created",void 0),e([c()],U.prototype,"credential",void 0),e([c()],U.prototype,"culture",void 0),e([c()],U.prototype,"currentVersion",void 0),e([c()],U.prototype,"customBaseUrl",void 0),e([c()],U.prototype,"defaultBasemap",void 0),e([y("defaultBasemap")],U.prototype,"readDefaultBasemap",null),e([c()],U.prototype,"defaultDevBasemap",void 0),e([y("defaultDevBasemap")],U.prototype,"readDefaultDevBasemap",null),e([c({type:f})],U.prototype,"defaultExtent",void 0),e([c()],U.prototype,"defaultVectorBasemap",void 0),e([y("defaultVectorBasemap")],U.prototype,"readDefaultVectorBasemap",null),e([c()],U.prototype,"description",void 0),e([c()],U.prototype,"devBasemapGalleryGroupQuery",void 0),e([c()],U.prototype,"eueiEnabled",void 0),e([c({readOnly:!0})],U.prototype,"extraQuery",null),e([c()],U.prototype,"featuredGroups",void 0),e([c()],U.prototype,"featuredItemsGroupQuery",void 0),e([c()],U.prototype,"galleryTemplatesGroupQuery",void 0),e([c()],U.prototype,"livingAtlasGroupQuery",void 0),e([c()],U.prototype,"hasCategorySchema",void 0),e([c()],U.prototype,"helpBase",void 0),e([c()],U.prototype,"helperServices",void 0),e([c()],U.prototype,"helpMap",void 0),e([c()],U.prototype,"homePageFeaturedContent",void 0),e([c()],U.prototype,"homePageFeaturedContentCount",void 0),e([c()],U.prototype,"httpPort",void 0),e([c()],U.prototype,"httpsPort",void 0),e([c()],U.prototype,"id",void 0),e([c()],U.prototype,"ipCntryCode",void 0),e([c({readOnly:!0})],U.prototype,"isOrganization",null),e([c()],U.prototype,"isPortal",void 0),e([c()],U.prototype,"isReadOnly",void 0),e([c()],U.prototype,"layerTemplatesGroupQuery",void 0),e([c()],U.prototype,"maxTokenExpirationMinutes",void 0),e([c({type:Date})],U.prototype,"modified",void 0),e([c()],U.prototype,"name",void 0),e([c()],U.prototype,"portalHostname",void 0),e([c()],U.prototype,"portalMode",void 0),e([c()],U.prototype,"portalProperties",void 0),e([c()],U.prototype,"region",void 0),e([c({readOnly:!0})],U.prototype,"restUrl",null),e([c()],U.prototype,"rotatorPanels",void 0),e([c()],U.prototype,"showHomePageDescription",void 0),e([c()],U.prototype,"sourceJSON",void 0),e([c()],U.prototype,"staticImagesUrl",void 0),e([c({json:{name:"2DStylesGroupQuery"}})],U.prototype,"stylesGroupQuery2d",void 0),e([c({json:{name:"stylesGroupQuery"}})],U.prototype,"stylesGroupQuery3d",void 0),e([c()],U.prototype,"supportsHostedServices",void 0),e([c()],U.prototype,"symbolSetsGroupQuery",void 0),e([c()],U.prototype,"templatesGroupQuery",void 0),e([c()],U.prototype,"thumbnail",void 0),e([c({readOnly:!0})],U.prototype,"thumbnailUrl",null),e([c()],U.prototype,"units",void 0),e([c()],U.prototype,"url",void 0),e([c()],U.prototype,"urlKey",void 0),e([y("urlKey")],U.prototype,"readUrlKey",null),e([c()],U.prototype,"user",void 0),e([y("user")],U.prototype,"readUser",null),e([c()],U.prototype,"useStandardizedQuery",void 0),e([c()],U.prototype,"useVectorBasemaps",void 0),e([c()],U.prototype,"vectorBasemapGalleryGroupQuery",void 0),U=_=e([v("esri.portal.Portal")],U);const B=U;export{B as default};
