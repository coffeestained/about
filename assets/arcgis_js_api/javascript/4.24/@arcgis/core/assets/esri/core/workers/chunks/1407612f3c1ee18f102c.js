"use strict";(self.webpackChunkRemoteClient=self.webpackChunkRemoteClient||[]).push([[8119],{10638:(e,t,r)=>{r.d(t,{T:()=>g,a:()=>m,c:()=>f,i:()=>p,w:()=>h});var i=r(76506),o=r(82426),n=r(71252),a=r(60991),s=r(92143),l=r(95708),c=r(30752);const d=s.L.getLogger("esri/views/webgl"),u=!!(0,i.h)("enable-feature:webgl-debug");function h(){return u}function m(){return u}function f(e){if(h()){const t=e.getError();if(t){const r=function(e,t){switch(t){case e.INVALID_ENUM:return"Invalid Enum. An unacceptable value has been specified for an enumerated argument.";case e.INVALID_VALUE:return"Invalid Value. A numeric argument is out of range.";case e.INVALID_OPERATION:return"Invalid Operation. The specified command is not allowed for the current state.";case e.INVALID_FRAMEBUFFER_OPERATION:return"Invalid Framebuffer operation. The currently bound framebuffer is not framebuffer complete when trying to render to or to read from it.";case e.OUT_OF_MEMORY:return"Out of memory. Not enough memory is left to execute the command.";case e.CONTEXT_LOST_WEBGL:return"WebGL context has been lost";default:return"Unknown error"}}(e,t),i=(new Error).stack;d.error(new a.Z("webgl-error","WebGL error occured",{message:r,stack:i}))}}}function p(e){return window.WebGL2RenderingContext&&e instanceof window.WebGL2RenderingContext}class g{constructor(e,t,r=null){if(this._context=e,this.type="texture",this._glName=null,this._descriptor=void 0,this._samplingModeDirty=!1,this._wrapModeDirty=!1,this._wasImmutablyAllocated=!1,e.instanceCounter.increment(c.R.Texture,this),this._descriptor={target:c.T.TEXTURE_2D,samplingMode:c.c.LINEAR,wrapMode:c.f.REPEAT,flipped:!1,hasMipmap:!1,isOpaque:!1,unpackAlignment:4,preMultiplyAlpha:!1,isImmutable:!1,...t},e.type!==l.C.WEBGL2&&(this._descriptor.isImmutable&&(this._descriptor.isImmutable=!1),x(this._descriptor.target)))throw new Error("3D and array textures are not supported in WebGL1");this._descriptor.target===c.T.TEXTURE_CUBE_MAP?this._setDataCubeMap(r):this.setData(r)}get glName(){return this._glName}get descriptor(){return this._descriptor}get isDirty(){return this._samplingModeDirty||this._wrapModeDirty}dispose(){this._context.gl&&this._glName&&(this._context.unbindTexture(this),this._context.gl.deleteTexture(this._glName),this._glName=null,this._context.instanceCounter.decrement(c.R.Texture,this))}release(){this.dispose()}resize(e,t){const r=this._descriptor;if(r.width!==e||r.height!==t){if(this._wasImmutablyAllocated)throw new Error("Immutable textures can't be resized!");r.width=e,r.height=t,this._descriptor.target===c.T.TEXTURE_CUBE_MAP?this._setDataCubeMap(null):this.setData(null)}}_setDataCubeMap(e=null){for(let t=c.T.TEXTURE_CUBE_MAP_POSITIVE_X;t<=c.T.TEXTURE_CUBE_MAP_NEGATIVE_Z;t++)this._setData(e,t)}setData(e){this._setData(e)}_setData(e,t){if(!this._context||!this._context.gl)return;const r=this._context.gl;this._glName||(this._glName=r.createTexture()),void 0===e&&(e=null);const i=this._descriptor;t??(t=i.target);const o=x(t);null===e&&(i.width=i.width||4,i.height=i.height||4,o&&(i.depth=i.depth??1));const a=this._context.bindTexture(this,g.TEXTURE_UNIT_FOR_UPDATES);this._context.setActiveTexture(g.TEXTURE_UNIT_FOR_UPDATES),g._validateTexture(this._context,i),this._configurePixelStorage();const s=i.pixelFormat;let l=i.internalFormat?i.internalFormat:this._deriveInternalFormat(s,i.dataType);if(v(e)){let n=e.width,a=e.height;const s=1;e instanceof HTMLVideoElement&&(n=e.videoWidth,a=e.videoHeight),i.width&&i.height,o&&i.depth,i.isImmutable&&!this._wasImmutablyAllocated&&this._texStorage(t,l,i.hasMipmap,n,a,s),this._texImage(t,0,l,n,a,s,e),f(r),i.hasMipmap&&this.generateMipmap(),void 0===i.width&&(i.width=n),void 0===i.height&&(i.height=a),o&&void 0===i.depth&&(i.depth=s)}else{const{width:a,height:s,depth:d}=i;if(null!=a&&null!=s||console.error("Width and height must be specified!"),o&&null==d&&console.error("Depth must be specified!"),i.isImmutable&&!this._wasImmutablyAllocated&&this._texStorage(t,l,i.hasMipmap,a,s,d),r.DEPTH24_STENCIL8&&l===r.DEPTH_STENCIL&&(l=r.DEPTH24_STENCIL8),_(e)){const o=e.levels,n=T(t,a,s,d),u=Math.min(n-1,o.length-1);p(r)?r.texParameteri(i.target,r.TEXTURE_MAX_LEVEL,u):i.hasMipmap=i.hasMipmap&&n===o.length;const h=l;if(!(h in c.j))throw new Error("Attempting to use compressed data with an umcompressed format!");this._forEachMipmapLevel(((e,r,i,n)=>{const a=o[Math.min(e,o.length-1)];this._compressedTexImage(t,e,h,r,i,n,a)}),u)}else(0,n.i)(e)?(this._texImage(t,0,l,a,s,d,e),f(r),i.hasMipmap&&this.generateMipmap()):this._forEachMipmapLevel(((e,i,o,n)=>{this._texImage(t,e,l,i,o,n,null),f(r)}))}g._applySamplingMode(r,this._descriptor),g._applyWrapMode(r,this._descriptor),g._applyAnisotropicFilteringParameters(this._context,this._descriptor),f(r),this._context.bindTexture(a,g.TEXTURE_UNIT_FOR_UPDATES)}updateData(e,t,r,i,o,n){n||console.error("An attempt to use uninitialized data!"),this._glName||console.error("An attempt to update uninitialized texture!");const a=this._context.gl,s=this._descriptor,{pixelFormat:l,internalFormat:c,dataType:d,isImmutable:u,target:h}=s;if(u&&!this._wasImmutablyAllocated)throw new Error("Cannot update immutable texture before allocation!");const m=this._context.bindTexture(this,g.TEXTURE_UNIT_FOR_UPDATES);(t<0||r<0||i>s.width||o>s.height||t+i>s.width||r+o>s.height)&&console.error("An attempt to update out of bounds of the texture!"),this._configurePixelStorage(),v(n)?a.texSubImage2D(h,e,t,r,l,d,n):_(n)?a.compressedTexSubImage2D(h,e,t,r,i,o,c,n.levels[e]):a.texSubImage2D(h,e,t,r,i,o,l,d,n),this._context.bindTexture(m,g.TEXTURE_UNIT_FOR_UPDATES)}updateData3D(e,t,r,i,o,n,a,s){s||console.error("An attempt to use uninitialized data!"),this._glName||console.error("An attempt to update uninitialized texture!");const l=this._context.gl;if(!p(l))throw new Error("3D textures are not supported in WebGL1");const c=this._descriptor,{pixelFormat:d,dataType:u,isImmutable:h,target:m,internalFormat:f}=c;if(h&&!this._wasImmutablyAllocated)throw new Error("Cannot update immutable texture before allocation!");x(m)||console.warn("Attempting to set 3D texture data on a non-3D texture");const v=this._context.bindTexture(this,g.TEXTURE_UNIT_FOR_UPDATES);if(this._context.setActiveTexture(g.TEXTURE_UNIT_FOR_UPDATES),(t<0||r<0||i<0||o>c.width||n>c.height||a>c.depth||t+o>c.width||r+n>c.height||i+a>c.depth)&&console.error("An attempt to update out of bounds of the texture!"),this._configurePixelStorage(),_(s))s=s.levels[e],l.compressedTexSubImage3D(m,e,t,r,i,o,n,a,f,s);else{const c=s;l.texSubImage3D(m,e,t,r,i,o,n,a,d,u,c)}this._context.bindTexture(v,g.TEXTURE_UNIT_FOR_UPDATES)}generateMipmap(){const e=this._descriptor;if(!e.hasMipmap){if(this._wasImmutablyAllocated)throw new Error("Cannot add mipmaps to immutable texture after allocation");e.hasMipmap=!0,this._samplingModeDirty=!0,g._validateTexture(this._context,e)}e.samplingMode===c.c.LINEAR?(this._samplingModeDirty=!0,e.samplingMode=c.c.LINEAR_MIPMAP_NEAREST):e.samplingMode===c.c.NEAREST&&(this._samplingModeDirty=!0,e.samplingMode=c.c.NEAREST_MIPMAP_NEAREST);const t=this._context.bindTexture(this,g.TEXTURE_UNIT_FOR_UPDATES);this._context.setActiveTexture(g.TEXTURE_UNIT_FOR_UPDATES),this._context.gl.generateMipmap(e.target),this._context.bindTexture(t,g.TEXTURE_UNIT_FOR_UPDATES)}setSamplingMode(e){e!==this._descriptor.samplingMode&&(this._descriptor.samplingMode=e,this._samplingModeDirty=!0)}setWrapMode(e){e!==this._descriptor.wrapMode&&(this._descriptor.wrapMode=e,g._validateTexture(this._context,this._descriptor),this._wrapModeDirty=!0)}applyChanges(){const e=this._context.gl,t=this._descriptor;this._samplingModeDirty&&(g._applySamplingMode(e,t),this._samplingModeDirty=!1),this._wrapModeDirty&&(g._applyWrapMode(e,t),this._wrapModeDirty=!1)}_deriveInternalFormat(e,t){if(this._context.type===l.C.WEBGL1)return e;switch(t){case c.b.FLOAT:switch(e){case c.a.RGBA:return c.k.RGBA32F;case c.a.RGB:return c.k.RGB32F;default:throw new Error("Unable to derive format")}case c.b.UNSIGNED_BYTE:switch(e){case c.a.RGBA:return c.k.RGBA8;case c.a.RGB:return c.k.RGB8}default:return e}}_configurePixelStorage(){const e=this._context.gl,{unpackAlignment:t,flipped:r,preMultiplyAlpha:i}=this._descriptor;e.pixelStorei(e.UNPACK_ALIGNMENT,t),e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL,r?1:0),e.pixelStorei(e.UNPACK_PREMULTIPLY_ALPHA_WEBGL,i?1:0)}_texStorage(e,t,r,i,o,n){const a=this._context.gl;if(!p(a))throw new Error("Immutable textures are not supported in WebGL1");if(!(t in c.k))throw new Error("Immutable textures must have a sized internal format");if(!this._descriptor.isImmutable)return;const s=r?T(e,i,o,n):1;x(e)?a.texStorage3D(e,s,t,i,o,n):a.texStorage2D(e,s,t,i,o),this._wasImmutablyAllocated=!0}_texImage(e,t,r,i,o,a,s){const c=this._context.gl;let d=null;const u=this._context.type===l.C.WEBGL2,h=x(e),{isImmutable:m,pixelFormat:f,dataType:p}=this._descriptor;if(u&&(d=c),u||!v(s))if(m){if((0,n.i)(s)){const r=s;h?d.texSubImage3D(e,t,0,0,0,i,o,a,f,p,r):c.texSubImage2D(e,t,0,0,i,o,f,p,r)}}else{const l=(0,n.u)(s);h?d.texImage3D(e,t,r,i,o,a,0,f,p,l):c.texImage2D(e,t,r,i,o,0,f,p,l)}else c.texImage2D(e,0,r,f,p,s)}_compressedTexImage(e,t,r,i,o,a,s){const c=this._context.gl;let d=null;const u=x(e),h=this._descriptor.isImmutable;if(u){if(this._context.type!==l.C.WEBGL2)throw new Error("3D textures are not supported in WebGL1");d=c}h?(0,n.i)(s)&&(u?d.compressedTexSubImage3D(e,t,0,0,0,i,o,a,r,s):c.compressedTexSubImage2D(e,t,0,0,i,o,r,s)):u?d.compressedTexImage3D(e,t,r,i,o,a,0,s):c.compressedTexImage2D(e,t,r,i,o,0,s)}_forEachMipmapLevel(e,t=1/0){let{width:r,height:i,depth:o,hasMipmap:n,target:a}=this._descriptor;const s=a===c.T.TEXTURE_3D;for(let a=0;e(a,r,i,o),n&&(1!==r||1!==i||s&&1!==o)&&!(a>=t);++a)r=Math.max(1,r>>1),i=Math.max(1,i>>1),s&&(o=Math.max(1,o>>1))}static _validateTexture(e,t){(t.width<0||t.height<0||t.depth<0)&&console.error("Negative dimension parameters are not allowed!");const r=p(e.gl),i=(0,o.S)(t.width)&&(0,o.S)(t.height);r||!t.isImmutable&&!x(t.target)||console.error("Immutable and 3D-like textures are not supported in WebGL1!"),r||i||("number"==typeof t.wrapMode?t.wrapMode!==c.f.CLAMP_TO_EDGE&&console.error("Non-power-of-two textures must have a wrap mode of CLAMP_TO_EDGE!"):t.wrapMode.s===c.f.CLAMP_TO_EDGE&&t.wrapMode.t===c.f.CLAMP_TO_EDGE||console.error("Non-power-of-two textures must have a wrap mode of CLAMP_TO_EDGE!"),t.hasMipmap&&console.error("Mipmapping requires power-of-two textures!"))}static _applySamplingMode(e,t){let r=t.samplingMode,i=t.samplingMode;r===c.c.LINEAR_MIPMAP_NEAREST||r===c.c.LINEAR_MIPMAP_LINEAR?(r=c.c.LINEAR,t.hasMipmap||(i=c.c.LINEAR)):r!==c.c.NEAREST_MIPMAP_NEAREST&&r!==c.c.NEAREST_MIPMAP_LINEAR||(r=c.c.NEAREST,t.hasMipmap||(i=c.c.NEAREST)),e.texParameteri(t.target,e.TEXTURE_MAG_FILTER,r),e.texParameteri(t.target,e.TEXTURE_MIN_FILTER,i)}static _applyWrapMode(e,t){"number"==typeof t.wrapMode?(e.texParameteri(t.target,e.TEXTURE_WRAP_S,t.wrapMode),e.texParameteri(t.target,e.TEXTURE_WRAP_T,t.wrapMode)):(e.texParameteri(t.target,e.TEXTURE_WRAP_S,t.wrapMode.s),e.texParameteri(t.target,e.TEXTURE_WRAP_T,t.wrapMode.t))}static _applyAnisotropicFilteringParameters(e,t){const r=e.capabilities.textureFilterAnisotropic;r&&e.gl.texParameterf(t.target,r.TEXTURE_MAX_ANISOTROPY,t.maxAnisotropy??1)}}function _(e){return(0,n.i)(e)&&"type"in e&&"compressed"===e.type}function v(e){return(0,n.i)(e)&&!_(e)&&!function(e){return(0,n.i)(e)&&"byteLength"in e}(e)}function x(e){return e===c.T.TEXTURE_3D||e===c.T.TEXTURE_2D_ARRAY}function T(e,t,r,i=1){let o=Math.max(t,r);return e===c.T.TEXTURE_3D&&(o=Math.max(o,i)),Math.round(Math.log(o)/Math.LN2)+1}g.TEXTURE_UNIT_FOR_UPDATES=0},62348:(e,t,r)=>{r.d(t,{a:()=>o,e:()=>n}),r(32191),r(82426),(0,r(68681).c)();class i{constructor(e){this.message=e}toString(){return`AssertException: ${this.message}`}}function o(e,t){if(!e)throw t=t||"assert",console.log(new Error(t).stack),new i(t)}function n(e,t,r,i){let o,n=(r[0]-e[0])/t[0],a=(i[0]-e[0])/t[0];n>a&&(o=n,n=a,a=o);let s=(r[1]-e[1])/t[1],l=(i[1]-e[1])/t[1];if(s>l&&(o=s,s=l,l=o),n>l||s>a)return!1;s>n&&(n=s),l<a&&(a=l);let c=(r[2]-e[2])/t[2],d=(i[2]-e[2])/t[2];return c>d&&(o=c,c=d,d=o),!(n>d||c>a||(d<a&&(a=d),a<0))}},95708:(e,t,r)=>{r.d(t,{C:()=>i,c:()=>s,g:()=>a});var i,o,n=r(76506);function a(e){const t=(0,n.h)("esri-force-webgl");if(t===i.WEBGL1||t===i.WEBGL2)return[t];switch(e){case"2d":return(0,n.h)("mac")&&(0,n.h)("chrome")?[i.WEBGL1,i.WEBGL2]:[i.WEBGL2,i.WEBGL1];case"3d":return[i.WEBGL2,i.WEBGL1]}}function s(e,t,r={}){const o=t===i.WEBGL1?["webgl","experimental-webgl","webkit-3d","moz-webgl"]:["webgl2"];let n=null;for(const t of o){try{n=e.getContext(t,r)}catch(e){}if(n)break}return n}(o=i||(i={}))[o.WEBGL1=1]="WEBGL1",o[o.WEBGL2=2]="WEBGL2"},49500:(e,t,r)=>{function i(e){return e=e||globalThis.location.hostname,c.some((t=>null!=e?.match(t)))}function o(e,t){return e&&(t=t||globalThis.location.hostname)?null!=t.match(n)||null!=t.match(s)?e.replace("static.arcgis.com","staticdev.arcgis.com"):null!=t.match(a)||null!=t.match(l)?e.replace("static.arcgis.com","staticqa.arcgis.com"):e:e}r.d(t,{a:()=>o,i:()=>i});const n=/^devext.arcgis.com$/,a=/^qaext.arcgis.com$/,s=/^[\w-]*\.mapsdevext.arcgis.com$/,l=/^[\w-]*\.mapsqa.arcgis.com$/,c=[/^([\w-]*\.)?[\w-]*\.zrh-dev-local.esri.com$/,n,a,/^jsapps.esri.com$/,s,l]},26923:(e,t,r)=>{r.d(t,{a:()=>a,f:()=>o,i:()=>s,t:()=>n});var i=r(29794);function o(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[4],e[4]=t[5],e[5]=t[6],e[6]=t[8],e[7]=t[9],e[8]=t[10],e}function n(e,t){if(e===t){const r=t[1],i=t[2],o=t[5];e[1]=t[3],e[2]=t[6],e[3]=r,e[5]=t[7],e[6]=i,e[7]=o}else e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8];return e}function a(e,t){const r=t[0],i=t[1],o=t[2],n=t[3],a=t[4],s=t[5],l=t[6],c=t[7],d=t[8],u=t[9],h=t[10],m=t[11],f=t[12],p=t[13],g=t[14],_=t[15],v=r*s-i*a,x=r*l-o*a,T=r*c-n*a,b=i*l-o*s,A=i*c-n*s,E=o*c-n*l,S=d*p-u*f,R=d*g-h*f,M=d*_-m*f,w=u*g-h*p,C=u*_-m*p,y=h*_-m*g;let O=v*y-x*C+T*w+b*M-A*R+E*S;return O?(O=1/O,e[0]=(s*y-l*C+c*w)*O,e[1]=(l*M-a*y-c*R)*O,e[2]=(a*C-s*M+c*S)*O,e[3]=(o*C-i*y-n*w)*O,e[4]=(r*y-o*M+n*R)*O,e[5]=(i*M-r*C-n*S)*O,e[6]=(p*E-g*A+_*b)*O,e[7]=(g*T-f*E-_*x)*O,e[8]=(f*A-p*T+_*v)*O,e):null}function s(e){const t=i.E,r=e[0],o=e[1],n=e[2],a=e[3],s=e[4],l=e[5],c=e[6],d=e[7],u=e[8];return Math.abs(1-(r*r+a*a+c*c))<=t&&Math.abs(1-(o*o+s*s+d*d))<=t&&Math.abs(1-(n*n+l*l+u*u))<=t}},57532:(e,t,r)=>{function i(){return[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]}function o(e){return[e[0],e[1],e[2],e[3],e[4],e[5],e[6],e[7],e[8],e[9],e[10],e[11],e[12],e[13],e[14],e[15]]}function n(e,t){return new Float64Array(e,t,16)}r.d(t,{I:()=>a,a:()=>n,b:()=>o,c:()=>i});const a=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]},48119:(e,t,r)=>{r.r(t),r.d(t,{C:()=>fo,D:()=>bo,E:()=>Po,F:()=>So,H:()=>Do,M:()=>Io,N:()=>co,a:()=>Oo,b:()=>Mo,c:()=>yo,d:()=>ko,e:()=>go,f:()=>Bo,g:()=>Xo,h:()=>dn,i:()=>lo,j:()=>Eo,l:()=>rn,o:()=>mn,p:()=>po});var i,o,n,a,s,l,c,d,u,h,m,f,p,g,_,v=r(49500),x=r(71252),T=r(26923),b=r(45087),A=r(65775),E=r(57532),S=r(82426),R=r(53326),M=r(40167),w=r(72836),C=r(90779),y=r(82058),O=r(41864),N=r(60991),P=r(92143),D=r(50406),I=r(10738);async function L(e,t){const{data:r}=await(0,y.default)(e,{responseType:"image",...t});return r}(_=i||(i={}))[_.None=0]="None",_[_.Front=1]="Front",_[_.Back=2]="Back",_[_.COUNT=3]="COUNT",function(e){e[e.Less=0]="Less",e[e.Lequal=1]="Lequal",e[e.COUNT=2]="COUNT"}(o||(o={})),function(e){e[e.NONE=0]="NONE",e[e.SMAA=1]="SMAA"}(n||(n={})),function(e){e[e.Color=0]="Color",e[e.Alpha=1]="Alpha",e[e.FrontFace=2]="FrontFace",e[e.NONE=3]="NONE",e[e.COUNT=4]="COUNT"}(a||(a={})),function(e){e[e.BACKGROUND=0]="BACKGROUND",e[e.UPDATE=1]="UPDATE"}(s||(s={})),function(e){e[e.NOT_LOADED=0]="NOT_LOADED",e[e.LOADING=1]="LOADING",e[e.LOADED=2]="LOADED"}(l||(l={})),function(e){e[e.IntegratedMeshMaskExcluded=1]="IntegratedMeshMaskExcluded",e[e.OutlineVisualElementMask=2]="OutlineVisualElementMask"}(c||(c={})),function(e){e[e.ASYNC=0]="ASYNC",e[e.SYNC=1]="SYNC"}(d||(d={})),function(e){e[e.Highlight=0]="Highlight",e[e.MaskOccludee=1]="MaskOccludee",e[e.COUNT=2]="COUNT"}(u||(u={})),function(e){e[e.Triangle=0]="Triangle",e[e.Point=1]="Point",e[e.Line=2]="Line"}(h||(h={})),function(e){e[e.STRETCH=1]="STRETCH",e[e.PAD=2]="PAD"}(m||(m={})),function(e){e[e.CHANGED=0]="CHANGED",e[e.UNCHANGED=1]="UNCHANGED"}(f||(f={})),function(e){e[e.Blend=0]="Blend",e[e.Opaque=1]="Opaque",e[e.Mask=2]="Mask",e[e.MaskBlend=3]="MaskBlend",e[e.COUNT=4]="COUNT"}(p||(p={})),function(e){e[e.OFF=0]="OFF",e[e.ON=1]="ON"}(g||(g={}));var F,B,V=r(6906),U=r(62348),G=r(19657),z=r(99520),H=r(76506);(B=F||(F={}))[B.Global=1]="Global",B[B.Local=2]="Local";const k=new Float32Array(2);new Float64Array(3),new Float32Array(6),(0,E.c)();class W{constructor(){this.id=(0,G.g)()}unload(){}}var $,q;(q=$||($={}))[q.Layer=0]="Layer",q[q.Object=1]="Object",q[q.Geometry=2]="Geometry",q[q.Material=3]="Material",q[q.Texture=4]="Texture",q[q.COUNT=5]="COUNT";class X{}function j(e,...t){let r="";for(let i=0;i<t.length;i++)r+=e[i]+t[i];return r+=e[e.length-1],r}!function(e){e.int=function(e){return Math.round(e).toString()},e.float=function(e){return e.toPrecision(8)}}(j||(j={}));const Y=new Map([[z.V.POSITION,0],[z.V.NORMAL,1],[z.V.UV0,2],[z.V.COLOR,3],[z.V.SIZE,4],[z.V.TANGENT,4],[z.V.AUXPOS1,5],[z.V.SYMBOLCOLOR,5],[z.V.AUXPOS2,6],[z.V.FEATUREATTRIBUTE,6],[z.V.INSTANCEFEATUREATTRIBUTE,6],[z.V.INSTANCECOLOR,7],[z.V.MODEL,8],[z.V.MODELNORMAL,12],[z.V.MODELORIGINHI,11],[z.V.MODELORIGINLO,15]]);(0,S.g)(10),(0,S.g)(12),(0,S.g)(70),(0,S.g)(40);const K={scale:0,factor:0,minPixelSize:0,paddingPixels:0},Z=(0,R.a)();function Q(e,t,r,i,o,n,a){if(!function(e){return!!(0,x.i)(e)&&!e.visible}(t))if(e.boundingInfo){(0,U.a)(e.primitiveType===h.Triangle);const t=r.tolerance;ee(e.boundingInfo,i,o,t,n,a)}else{const t=e.indices.get(z.V.POSITION),r=e.vertexAttributes.get(z.V.POSITION);re(i,o,0,t.length/3,t,r,void 0,n,a)}}const J=(0,S.h)();function ee(e,t,r,i,o,n){if((0,x.a)(e))return;const a=function(e,t,r){return(0,S.s)(r,1/(t[0]-e[0]),1/(t[1]-e[1]),1/(t[2]-e[2]))}(t,r,J);if((0,R.b)(Z,e.getBBMin()),(0,R.d)(Z,e.getBBMax()),(0,x.i)(o)&&o.applyToAabb(Z),function(e,t,r,i){return function(e,t,r,i,o){const n=(e[0]-i-t[0])*r[0],a=(e[3]+i-t[0])*r[0];let s=Math.min(n,a),l=Math.max(n,a);const c=(e[1]-i-t[1])*r[1],d=(e[4]+i-t[1])*r[1];if(l=Math.min(l,Math.max(c,d)),l<0)return!1;if(s=Math.max(s,Math.min(c,d)),s>l)return!1;const u=(e[2]-i-t[2])*r[2],h=(e[5]+i-t[2])*r[2];return l=Math.min(l,Math.max(u,h)),!(l<0)&&(s=Math.max(s,Math.min(u,h)),!(s>l)&&s<1/0)}(e,t,r,i)}(Z,t,a,i)){const{primitiveIndices:a,indices:s,position:l}=e,c=a?a.length:s.length/3;if(c>ce){const a=e.getChildren();if(void 0!==a){for(let e=0;e<8;++e)void 0!==a[e]&&ee(a[e],t,r,i,o,n);return}}re(t,r,0,c,s,l,a,o,n)}}const te=(0,S.h)();function re(e,t,r,i,o,n,a,s,l){if(a)return function(e,t,r,i,o,n,a,s,l){const c=n.data,d=n.stride||n.size,u=e[0],h=e[1],m=e[2],f=t[0]-u,p=t[1]-h,g=t[2]-m;for(let e=r;e<i;++e){const t=a[e];let r=3*t,i=d*o[r++],n=c[i++],_=c[i++],v=c[i];i=d*o[r++];let T=c[i++],b=c[i++],A=c[i];i=d*o[r];let E=c[i++],S=c[i++],R=c[i];(0,x.i)(s)&&([n,_,v]=s.applyToVertex(n,_,v,e),[T,b,A]=s.applyToVertex(T,b,A,e),[E,S,R]=s.applyToVertex(E,S,R,e));const M=T-n,w=b-_,C=A-v,y=E-n,O=S-_,N=R-v,P=p*N-O*g,D=g*y-N*f,I=f*O-y*p,L=M*P+w*D+C*I;if(Math.abs(L)<=Number.EPSILON)continue;const F=u-n,B=h-_,V=m-v,U=F*P+B*D+V*I;if(L>0){if(U<0||U>L)continue}else if(U>0||U<L)continue;const G=B*C-w*V,z=V*M-C*F,H=F*w-M*B,k=f*G+p*z+g*H;if(L>0){if(k<0||U+k>L)continue}else if(k>0||U+k<L)continue;const W=(y*G+O*z+N*H)/L;W>=0&&l(W,ne(M,w,C,y,O,N,te),t,!1)}}(e,t,r,i,o,n,a,s,l);const c=n.data,d=n.stride||n.size,u=e[0],h=e[1],m=e[2],f=t[0]-u,p=t[1]-h,g=t[2]-m;for(let e=r,t=3*r;e<i;++e){let r=d*o[t++],i=c[r++],n=c[r++],a=c[r];r=d*o[t++];let _=c[r++],v=c[r++],T=c[r];r=d*o[t++];let b=c[r++],A=c[r++],E=c[r];(0,x.i)(s)&&([i,n,a]=s.applyToVertex(i,n,a,e),[_,v,T]=s.applyToVertex(_,v,T,e),[b,A,E]=s.applyToVertex(b,A,E,e));const S=_-i,R=v-n,M=T-a,w=b-i,C=A-n,y=E-a,O=p*y-C*g,N=g*w-y*f,P=f*C-w*p,D=S*O+R*N+M*P;if(Math.abs(D)<=Number.EPSILON)continue;const I=u-i,L=h-n,F=m-a,B=I*O+L*N+F*P;if(D>0){if(B<0||B>D)continue}else if(B>0||B<D)continue;const V=L*M-R*F,U=F*S-M*I,G=I*R-S*L,z=f*V+p*U+g*G;if(D>0){if(z<0||B+z>D)continue}else if(z>0||B+z<D)continue;const H=(w*V+C*U+y*G)/D;H>=0&&l(H,ne(S,R,M,w,C,y,te),e,!1)}}const ie=(0,S.h)(),oe=(0,S.h)();function ne(e,t,r,i,o,n,a){return(0,S.s)(ie,e,t,r),(0,S.s)(oe,i,o,n),(0,S.k)(a,ie,oe),(0,S.n)(a,a),a}function ae(e,t){const r=t?ae(t):{};for(const t in e){let i=e[t];i&&i.forEach&&(i=se(i)),null==i&&t in r||(r[t]=i)}return r}function se(e){const t=[];return e.forEach((e=>t.push(e))),t}const le={multiply:1,ignore:2,replace:3,tint:4},ce=1e3;class de extends W{constructor(e,t){super(),this.type=$.Material,this.supportsEdges=!1,this._visible=!0,this._renderPriority=0,this._insertOrder=0,this._vertexAttributeLocations=Y,this._parameters=ae(e,t),this.validateParameters(this._parameters)}dispose(){}get parameters(){return this._parameters}update(e){return!1}setParameters(e,t=!0){(function(e,t){let r=!1;for(const i in t){const o=t[i];void 0!==o&&(Array.isArray(o)?null===e[i]?(e[i]=o.slice(),r=!0):(0,H.u)(e[i],o)&&(r=!0):e[i]!==o&&(r=!0,e[i]=o))}return r})(this._parameters,e)&&(this.validateParameters(this._parameters),t&&this.parametersChanged())}validateParameters(e){}get visible(){return this._visible}set visible(e){e!==this._visible&&(this._visible=e,this.parametersChanged())}shouldRender(e){return this.isVisible()&&this.isVisibleInPass(e.pass)&&0!=(this.renderOccluded&e.renderOccludedMask)}isVisibleInPass(e){return!0}get renderOccluded(){return this.parameters.renderOccluded}get renderPriority(){return this._renderPriority}set renderPriority(e){e!==this._renderPriority&&(this._renderPriority=e,this.parametersChanged())}get insertOrder(){return this._insertOrder}set insertOrder(e){e!==this._insertOrder&&(this._insertOrder=e,this.parametersChanged())}get vertexAttributeLocations(){return this._vertexAttributeLocations}isVisible(){return this._visible}parametersChanged(){(0,x.i)(this.repository)&&this.repository.materialChanged(this)}}var ue;!function(e){e[e.Occlude=1]="Occlude",e[e.Transparent=2]="Transparent",e[e.OccludeAndTransparent=4]="OccludeAndTransparent",e[e.OccludeAndTransparentStencil=8]="OccludeAndTransparentStencil",e[e.Opaque=16]="Opaque"}(ue||(ue={}));var he=r(14049),me=r(30752),fe=r(10638),pe=r(68681),ge=r(47880),_e=r(32191),ve=r(22465),xe=r(29768);function Te(e={}){return(t,r)=>{if(t._parameterNames=t._parameterNames??[],t._parameterNames.push(r),null!=e.constValue)Object.defineProperty(t,r,{get:()=>e.constValue});else{const i=t._parameterNames.length-1,o=e.count||2,n=Math.ceil(Math.log2(o)),a=t._parameterBits??[0];let s=0;for(;a[s]+n>16;)s++,s>=a.length&&a.push(0);t._parameterBits=a;const l=a[s],c=(1<<n)-1<<l;a[s]+=n,Object.defineProperty(t,r,{get(){return this[i]},set(e){if(this[i]!==e&&(this[i]=e,this._keyDirty=!0,this._parameterBits[s]=this._parameterBits[s]&~c|+e<<l&c,"number"!=typeof e&&"boolean"!=typeof e))throw"Configuration value for "+r+" must be boolean or number, got "+typeof e}})}}}var be=r(59696),Ae=r(95708);const Ee=P.L.getLogger("esri.views.webgl.BufferObject");class Se{constructor(e,t,r,i){this._context=e,this.bufferType=t,this.usage=r,this._glName=null,this._size=-1,this._indexType=void 0,e.instanceCounter.increment(me.R.BufferObject,this),this._glName=this._context.gl.createBuffer(),(0,fe.c)(this._context.gl),i&&this.setData(i)}static createIndex(e,t,r){return new Se(e,me.l.ELEMENT_ARRAY_BUFFER,t,r)}static createVertex(e,t,r){return new Se(e,me.l.ARRAY_BUFFER,t,r)}static createUniform(e,t,r){if(e.type!==Ae.C.WEBGL2)throw new Error("Uniform buffers are supported in WebGL2 only!");return new Se(e,me.l.UNIFORM_BUFFER,t,r)}static createPixelPack(e,t=me.U.STREAM_READ,r){if(e.type!==Ae.C.WEBGL2)throw new Error("Pixel pack buffers are supported in WebGL2 only!");const i=new Se(e,me.l.PIXEL_PACK_BUFFER,t);return r&&i.setSize(r),i}static createPixelUnpack(e,t=me.U.STREAM_DRAW,r){if(e.type!==Ae.C.WEBGL2)throw new Error("Pixel unpack buffers are supported in WebGL2 only!");return new Se(e,me.l.PIXEL_UNPACK_BUFFER,t,r)}get glName(){return this._glName}get size(){return this._size}get indexType(){return this._indexType}get byteSize(){return this.bufferType===me.l.ELEMENT_ARRAY_BUFFER?this._indexType===me.D.UNSIGNED_INT?4*this._size:2*this._size:this._size}get _isVAOAware(){return this.bufferType===me.l.ELEMENT_ARRAY_BUFFER||this.bufferType===me.l.ARRAY_BUFFER}dispose(){this._context?.gl?(this._glName&&(this._context.gl.deleteBuffer(this._glName),this._glName=null),this._context.instanceCounter.decrement(me.R.BufferObject,this),this._context=null):this._glName&&Ee.warn("Leaked WebGL buffer object")}setSize(e,t=null){if(e<=0&&Ee.error("Buffer size needs to be positive!"),this.bufferType===me.l.ELEMENT_ARRAY_BUFFER&&(0,x.i)(t))switch(this._indexType=t,t){case me.D.UNSIGNED_SHORT:e*=2;break;case me.D.UNSIGNED_INT:e*=4}this._setBufferData(e)}setData(e){if(!e)return;let t=e.byteLength;this.bufferType===me.l.ELEMENT_ARRAY_BUFFER&&((0,H.g)(e)&&(t/=2,this._indexType=me.D.UNSIGNED_SHORT),(0,H.j)(e)&&(t/=4,this._indexType=me.D.UNSIGNED_INT)),this._setBufferData(t,e)}_setBufferData(e,t=null){this._size=e;const r=this._context.getBoundVAO();this._isVAOAware&&this._context.bindVAO(null),this._context.bindBuffer(this);const i=this._context.gl;(0,x.i)(t)?i.bufferData(this.bufferType,t,this.usage):i.bufferData(this.bufferType,e,this.usage),(0,fe.c)(i),this._isVAOAware&&this._context.bindVAO(r)}setSubData(e,t=0,r=0,i=e.byteLength){if(!e)return;(t<0||t>=this._size)&&Ee.error("offset is out of range!");let o=t,n=r,a=i,s=e.byteLength;this.bufferType===me.l.ELEMENT_ARRAY_BUFFER&&((0,H.g)(e)?(s/=2,o*=2,n*=2,a*=2):(0,H.j)(e)&&(s/=4,o*=4,n*=4,a*=4)),void 0===i&&(i=s-1),r>=i&&Ee.error("end must be bigger than start!"),t+r-i>this._size&&Ee.error("An attempt to write beyond the end of the buffer!");const l=this._context.getBoundVAO();this._isVAOAware&&this._context.bindVAO(null),this._context.bindBuffer(this);const c=this._context.gl,d=ArrayBuffer.isView(e)?e.buffer:e,u=0===n&&a===e.byteLength?d:d.slice(n,a);c.bufferSubData(this.bufferType,o,u),(0,fe.c)(c),this._isVAOAware&&this._context.bindVAO(l)}setSubDataFromView(e,t,r,i){if(!e)return;(t<0||t>=this._size)&&Ee.error("offset is out of range!"),r>=i&&Ee.error("end must be bigger than start!"),t+r-i>this._size&&Ee.error("An attempt to write beyond the end of the buffer!");const o=this._context.getBoundVAO();this._isVAOAware&&this._context.bindVAO(null),this._context.bindBuffer(this);const n=this._context.gl;if(this._context.type===Ae.C.WEBGL2)n.bufferSubData(this.bufferType,t*e.BYTES_PER_ELEMENT,e,r,i-r);else{const o=0===r&&i===e.length?e:e.subarray(r,i);n.bufferSubData(this.bufferType,t*e.BYTES_PER_ELEMENT,o)}(0,fe.c)(n),this._isVAOAware&&this._context.bindVAO(o)}getSubData(e,t=0,r,i){if(this._context.type!==Ae.C.WEBGL2)return void Ee.error("Get buffer subdata is supported in WebGL2 only!");if(r<0||i<0)return void Ee.error("Problem getting subdata: offset and length were less than zero!");const o=(0,H.k)(e)?e.BYTES_PER_ELEMENT:1;if(o*((r??0)+(i??0))>e.byteLength)return void Ee.error("Problem getting subdata: offset and length exceeded destination size!");t+o*(i??0)>this.byteSize&&Ee.warn("Potential problem getting subdata: requested data exceeds buffer size!");const n=this._context.gl;this._context.bindBuffer(this,me.l.COPY_READ_BUFFER),n.getBufferSubData(me.l.COPY_READ_BUFFER,t,e,r,i),this._context.unbindBuffer(me.l.COPY_READ_BUFFER)}async getSubDataAsync(e,t=0,r,i){this._context.type===Ae.C.WEBGL2?(await this._context.clientWaitAsync(),this.getSubData(e,t,r,i)):Ee.error("Get buffer subdata is supported in WebGL2 only!")}}function Re(e,t,r,i,o=0){const n=e.gl,a=e.capabilities.instancing;e.bindBuffer(r);for(const e of i){const r=t.get(e.name);void 0===r&&console.error(`There is no location for vertex attribute '${e.name}' defined.`);const i=o*e.stride;if(e.count<=4)n.vertexAttribPointer(r,e.count,e.type,e.normalized,e.stride,e.offset+i),n.enableVertexAttribArray(r),e.divisor>0&&a&&a.vertexAttribDivisor(r,e.divisor);else if(9===e.count)for(let t=0;t<3;t++)n.vertexAttribPointer(r+t,3,e.type,e.normalized,e.stride,e.offset+12*t+i),n.enableVertexAttribArray(r+t),e.divisor>0&&a&&a.vertexAttribDivisor(r+t,e.divisor);else if(16===e.count)for(let t=0;t<4;t++)n.vertexAttribPointer(r+t,4,e.type,e.normalized,e.stride,e.offset+16*t+i),n.enableVertexAttribArray(r+t),e.divisor>0&&a&&a.vertexAttribDivisor(r+t,e.divisor);else console.error("Unsupported vertex attribute element count: "+e.count)}}function Me(e,t,r,i){const o=e.gl,n=e.capabilities.instancing;e.bindBuffer(r);for(const e of i){const r=t.get(e.name);if(e.count<=4)o.disableVertexAttribArray(r),e.divisor&&e.divisor>0&&n&&n.vertexAttribDivisor(r,0);else if(9===e.count)for(let t=0;t<3;t++)o.disableVertexAttribArray(r+t),e.divisor&&e.divisor>0&&n&&n.vertexAttribDivisor(r+t,0);else if(16===e.count)for(let t=0;t<4;t++)o.disableVertexAttribArray(r+t),e.divisor&&e.divisor>0&&n&&n.vertexAttribDivisor(r+t,0);else console.error("Unsupported vertex attribute element count: "+e.count)}e.unbindBuffer(me.l.ARRAY_BUFFER)}function we(e){switch(e){case me.a.ALPHA:case me.a.LUMINANCE:case me.a.RED:case me.a.RED_INTEGER:case me.k.R8:case me.k.R8I:case me.k.R8UI:case me.k.R8_SNORM:case me.m.STENCIL_INDEX8:return 1;case me.a.LUMINANCE_ALPHA:case me.a.RG:case me.a.RG_INTEGER:case me.k.RGBA4:case me.k.R16F:case me.k.R16I:case me.k.R16UI:case me.k.RG8:case me.k.RG8I:case me.k.RG8UI:case me.k.RG8_SNORM:case me.k.RGB565:case me.k.RGB5_A1:case me.m.DEPTH_COMPONENT16:return 2;case me.a.DEPTH_COMPONENT:case me.a.RGB:case me.a.RGB_INTEGER:case me.k.RGB8:case me.k.RGB8I:case me.k.RGB8UI:case me.k.RGB8_SNORM:case me.k.SRGB8:case me.m.DEPTH_COMPONENT24:return 3;case me.a.DEPTH_STENCIL:case me.a.RGBA:case me.a.RGBA_INTEGER:case me.k.RGBA8:case me.k.R32F:case me.k.R11F_G11F_B10F:case me.k.RG16F:case me.k.R32I:case me.k.R32UI:case me.k.RG16I:case me.k.RG16UI:case me.k.RGBA8I:case me.k.RGBA8UI:case me.k.RGBA8_SNORM:case me.k.SRGB8_ALPHA8:case me.k.RGB9_E5:case me.k.RGB10_A2UI:case me.k.RGB10_A2:case me.m.DEPTH_STENCIL:case me.m.DEPTH_COMPONENT32F:case me.m.DEPTH24_STENCIL8:return 4;case me.m.DEPTH32F_STENCIL8:return 5;case me.k.RGB16F:case me.k.RGB16I:case me.k.RGB16UI:return 6;case me.k.RG32F:case me.k.RG32I:case me.k.RG32UI:case me.k.RGBA16F:case me.k.RGBA16I:case me.k.RGBA16UI:return 8;case me.k.RGB32F:case me.k.RGB32I:case me.k.RGB32UI:return 12;case me.k.RGBA32F:case me.k.RGBA32I:case me.k.RGBA32UI:return 16;case me.j.COMPRESSED_RGB_S3TC_DXT1_EXT:case me.j.COMPRESSED_RGBA_S3TC_DXT1_EXT:return.5;case me.j.COMPRESSED_RGBA_S3TC_DXT3_EXT:case me.j.COMPRESSED_RGBA_S3TC_DXT5_EXT:return 1;case me.j.COMPRESSED_R11_EAC:case me.j.COMPRESSED_SIGNED_R11_EAC:case me.j.COMPRESSED_RGB8_ETC2:case me.j.COMPRESSED_SRGB8_ETC2:case me.j.COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2:case me.j.COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2:return.5;case me.j.COMPRESSED_RG11_EAC:case me.j.COMPRESSED_SIGNED_RG11_EAC:case me.j.COMPRESSED_RGBA8_ETC2_EAC:case me.j.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:return 1}return 0}function Ce(e){if((0,x.a)(e))return 0;if("descriptor"in e)return e.glName?Ce(e.descriptor):0;const t=e.internalFormat||"pixelFormat"in e&&e.pixelFormat;if(!t)return 0;const r="hasMipmap"in e&&e.hasMipmap?1.3:1,i=e.width*e.height;return we(t)*i*r}const ye=P.L.getLogger("esri.views.webgl.VertexArrayObject");class Oe{constructor(e,t,r,i,o=null){this._context=e,this._locations=t,this._layout=r,this._buffers=i,this._indexBuffer=o,this._glName=null,this._initialized=!1,e.instanceCounter.increment(me.R.VertexArrayObject,this)}get glName(){return this._glName}get context(){return this._context}get vertexBuffers(){return this._buffers}get indexBuffer(){return this._indexBuffer}get size(){return Object.keys(this._buffers).reduce(((e,t)=>e+this._buffers[t].size),(0,x.i)(this._indexBuffer)?this._indexBuffer.size:0)}get layout(){return this._layout}get locations(){return this._locations}dispose(e=!0){if(this._context){if(this._glName){const e=this._context?.capabilities?.vao;e?(e.deleteVertexArray(this._glName),this._glName=null):ye.warn("Leaked WebGL VAO")}if(this._context.getBoundVAO()===this&&this._context.bindVAO(null),e){for(const e in this._buffers)this._buffers[e].dispose(),delete this._buffers[e];this._indexBuffer=(0,x.j)(this._indexBuffer)}this._context.instanceCounter.decrement(me.R.VertexArrayObject,this),this._context=null}else(this._glName||e&&Object.getOwnPropertyNames(this._buffers).length>0)&&ye.warn("Leaked WebGL VAO")}initialize(){if(this._initialized)return;const e=this._context.capabilities.vao;if(e){const t=e.createVertexArray();e.bindVertexArray(t),this._bindLayout(),e.bindVertexArray(null),this._glName=t}this._initialized=!0}bind(){this.initialize();const e=this._context.capabilities.vao;e?e.bindVertexArray(this.glName):(this._context.bindVAO(null),this._bindLayout())}_bindLayout(){const{_buffers:e,_layout:t,_indexBuffer:r}=this;e||ye.error("Vertex buffer dictionary is empty!");const i=this._context.gl;for(const r in e){const i=e[r];i||ye.error("Vertex buffer is uninitialized!");const o=t[r];o||ye.error("Vertex element descriptor is empty!"),Re(this._context,this._locations,i,o)}(0,x.i)(r)&&(this._context.capabilities.vao?i.bindBuffer(i.ELEMENT_ARRAY_BUFFER,r.glName):this._context.bindBuffer(r))}unbind(){this.initialize();const e=this._context.capabilities.vao;e?e.bindVertexArray(null):this._unbindLayout()}_unbindLayout(){const{_buffers:e,_layout:t}=this;e||ye.error("Vertex buffer dictionary is empty!");for(const r in e){const i=e[r];i||ye.error("Vertex buffer is uninitialized!");const o=t[r];Me(this._context,this._locations,i,o)}(0,x.i)(this._indexBuffer)&&this._context.unbindBuffer(this._indexBuffer.bufferType)}}class Ne{constructor(e,t,r,i){this.primitiveIndices=e,this._numIndexPerPrimitive=t,this.indices=r,this.position=i,this.center=(0,S.h)(),(0,U.a)(e.length>=1),(0,U.a)(r.length%this._numIndexPerPrimitive==0),(0,U.a)(r.length>=e.length*this._numIndexPerPrimitive),(0,U.a)(3===i.size||4===i.size);const{data:o,size:n}=i,a=e.length;let s=n*r[this._numIndexPerPrimitive*e[0]];Pe.clear(),Pe.push(s),this.bbMin=(0,S.f)(o[s],o[s+1],o[s+2]),this.bbMax=(0,S.q)(this.bbMin);for(let t=0;t<a;++t){const i=this._numIndexPerPrimitive*e[t];for(let e=0;e<this._numIndexPerPrimitive;++e){s=n*r[i+e],Pe.push(s);let t=o[s];this.bbMin[0]=Math.min(t,this.bbMin[0]),this.bbMax[0]=Math.max(t,this.bbMax[0]),t=o[s+1],this.bbMin[1]=Math.min(t,this.bbMin[1]),this.bbMax[1]=Math.max(t,this.bbMax[1]),t=o[s+2],this.bbMin[2]=Math.min(t,this.bbMin[2]),this.bbMax[2]=Math.max(t,this.bbMax[2])}}(0,S.G)(this.center,this.bbMin,this.bbMax,.5),this.radius=.5*Math.max(Math.max(this.bbMax[0]-this.bbMin[0],this.bbMax[1]-this.bbMin[1]),this.bbMax[2]-this.bbMin[2]);let l=this.radius*this.radius;for(let e=0;e<Pe.length;++e){s=Pe.getItemAt(e);const t=o[s]-this.center[0],r=o[s+1]-this.center[1],i=o[s+2]-this.center[2],n=t*t+r*r+i*i;if(n<=l)continue;const a=Math.sqrt(n),c=.5*(a-this.radius);this.radius=this.radius+c,l=this.radius*this.radius;const d=c/a;this.center[0]+=t*d,this.center[1]+=r*d,this.center[2]+=i*d}Pe.clear()}getCenter(){return this.center}getBSRadius(){return this.radius}getBBMin(){return this.bbMin}getBBMax(){return this.bbMax}getChildren(){if(this._children)return this._children;if((0,S.y)(this.bbMin,this.bbMax)>1){const e=(0,S.G)((0,S.h)(),this.bbMin,this.bbMax,.5),t=this.primitiveIndices.length,r=new Uint8Array(t),i=new Array(8);for(let e=0;e<8;++e)i[e]=0;const{data:o,size:n}=this.position;for(let a=0;a<t;++a){let t=0;const s=this._numIndexPerPrimitive*this.primitiveIndices[a];let l=n*this.indices[s],c=o[l],d=o[l+1],u=o[l+2];for(let e=1;e<this._numIndexPerPrimitive;++e){l=n*this.indices[s+e];const t=o[l],r=o[l+1],i=o[l+2];t<c&&(c=t),r<d&&(d=r),i<u&&(u=i)}c<e[0]&&(t|=1),d<e[1]&&(t|=2),u<e[2]&&(t|=4),r[a]=t,++i[t]}let a=0;for(let e=0;e<8;++e)i[e]>0&&++a;if(a<2)return;const s=new Array(8);for(let e=0;e<8;++e)s[e]=i[e]>0?new Uint32Array(i[e]):void 0;for(let e=0;e<8;++e)i[e]=0;for(let e=0;e<t;++e){const t=r[e];s[t][i[t]++]=this.primitiveIndices[e]}this._children=new Array(8);for(let e=0;e<8;++e)void 0!==s[e]&&(this._children[e]=new Ne(s[e],this._numIndexPerPrimitive,this.indices,this.position))}return this._children}static prune(){Pe.prune()}}const Pe=new V.P({deallocator:null});class De extends W{constructor(e,t=[],r=h.Triangle,i=-1){super(),this._primitiveType=r,this.edgeIndicesLength=i,this.type=$.Geometry,this._vertexAttributes=new Map,this._indices=new Map,this._boundingInfo=null;for(const[t,r]of e)r&&this._vertexAttributes.set(t,{...r});if(null==t||0===t.length){const e=function(e){const t=e.values().next().value;return null==t?0:t.data.length/t.size}(this._vertexAttributes),t=(0,he.g)(e);this.edgeIndicesLength=this.edgeIndicesLength<0?e:this.edgeIndicesLength;for(const e of this._vertexAttributes.keys())this._indices.set(e,t)}else for(const[e,r]of t)r&&(this._indices.set(e,Ie(r)),e===z.V.POSITION&&(this.edgeIndicesLength=this.edgeIndicesLength<0?this._indices.get(e).length:this.edgeIndicesLength))}cloneShallow(){const e=new De([],void 0,this._primitiveType,void 0),{_vertexAttributes:t,_indices:r}=e;return this._vertexAttributes.forEach(((e,r)=>{t.set(r,e)})),this._indices.forEach(((e,t)=>{r.set(t,e)})),e.screenToWorldRatio=this.screenToWorldRatio,e._boundingInfo=this._boundingInfo,e}get vertexAttributes(){return this._vertexAttributes}getMutableAttribute(e){const t=this._vertexAttributes.get(e);return t&&!t.exclusive&&(t.data=Array.from(t.data),t.exclusive=!0),t}get indices(){return this._indices}get indexCount(){const e=this._indices.values().next().value;return e?e.length:0}get primitiveType(){return this._primitiveType}get faceCount(){return this.indexCount/3}get boundingInfo(){return(0,x.a)(this._boundingInfo)&&(this._boundingInfo=this._calculateBoundingInfo()),this._boundingInfo}computeAttachmentOrigin(e){return this.primitiveType===h.Triangle?this._computeAttachmentOriginTriangles(e):this._computeAttachmentOriginPoints(e)}_computeAttachmentOriginTriangles(e){const t=this.indices.get(z.V.POSITION),r=this.vertexAttributes.get(z.V.POSITION);return(0,he.c)(r,t,e)}_computeAttachmentOriginPoints(e){const t=this.indices.get(z.V.POSITION),r=this.vertexAttributes.get(z.V.POSITION);return(0,he.a)(r,t,e)}invalidateBoundingInfo(){this._boundingInfo=null}_calculateBoundingInfo(){const e=this.indices.get(z.V.POSITION);if(0===e.length)return null;const t=this.primitiveType===h.Triangle?3:1;(0,U.a)(e.length%t==0,"Indexing error: "+e.length+" not divisible by "+t);const r=(0,he.g)(e.length/t),i=this.vertexAttributes.get(z.V.POSITION);return new Ne(r,t,e,i)}}function Ie(e){if(e.BYTES_PER_ELEMENT===Uint16Array.BYTES_PER_ELEMENT)return e;for(const t of e)if(t>=65536)return e;return new Uint16Array(e)}var Le,Fe;function Be(e,t,r,i){const o=r.typedBuffer,n=r.typedBufferStride,a=e.length;i*=n;for(let r=0;r<a;++r){const a=2*e[r];o[i]=t[a],o[i+1]=t[a+1],i+=n}}function Ve(e,t,r,i,o){const n=r.typedBuffer,a=r.typedBufferStride,s=e.length;if(i*=a,null==o||1===o)for(let r=0;r<s;++r){const o=3*e[r];n[i]=t[o],n[i+1]=t[o+1],n[i+2]=t[o+2],i+=a}else for(let r=0;r<s;++r){const s=3*e[r];for(let e=0;e<o;++e)n[i]=t[s],n[i+1]=t[s+1],n[i+2]=t[s+2],i+=a}}function Ue(e,t,r,i,o,n=1){if(!r)return void Ve(e,t,i,o,n);const a=i.typedBuffer,s=i.typedBufferStride,l=e.length,c=r[0],d=r[1],u=r[2],h=r[4],m=r[5],f=r[6],p=r[8],g=r[9],_=r[10],v=r[12],x=r[13],T=r[14];if(o*=s,1===n)for(let r=0;r<l;++r){const i=3*e[r],n=t[i],l=t[i+1],b=t[i+2];a[o]=c*n+h*l+p*b+v,a[o+1]=d*n+m*l+g*b+x,a[o+2]=u*n+f*l+_*b+T,o+=s}else for(let r=0;r<l;++r){const i=3*e[r],l=t[i],b=t[i+1],A=t[i+2],E=c*l+h*b+p*A+v,S=d*l+m*b+g*A+x,R=u*l+f*b+_*A+T;for(let e=0;e<n;++e)a[o]=E,a[o+1]=S,a[o+2]=R,o+=s}}function Ge(e,t,r,i,o,n=1){if(!r)return void Ve(e,t,i,o,n);const a=r,s=i.typedBuffer,l=i.typedBufferStride,c=e.length,d=a[0],u=a[1],h=a[2],m=a[4],f=a[5],p=a[6],g=a[8],_=a[9],v=a[10],x=!(0,A.k)(a),T=1e-6,b=.999999;if(o*=l,1===n)for(let r=0;r<c;++r){const i=3*e[r],n=t[i],a=t[i+1],c=t[i+2];let A=d*n+m*a+g*c,E=u*n+f*a+_*c,S=h*n+p*a+v*c;if(x){const e=A*A+E*E+S*S;if(e<b&&e>T){const t=1/Math.sqrt(e);A*=t,E*=t,S*=t}}s[o+0]=A,s[o+1]=E,s[o+2]=S,o+=l}else for(let r=0;r<c;++r){const i=3*e[r],a=t[i],c=t[i+1],A=t[i+2];let E=d*a+m*c+g*A,S=u*a+f*c+_*A,R=h*a+p*c+v*A;if(x){const e=E*E+S*S+R*R;if(e<b&&e>T){const t=1/Math.sqrt(e);E*=t,S*=t,R*=t}}for(let e=0;e<n;++e)s[o+0]=E,s[o+1]=S,s[o+2]=R,o+=l}}function ze(e,t,r,i,o,n=1){if(!r)return void function(e,t,r,i,o=1){const n=r.typedBuffer,a=r.typedBufferStride,s=e.length;if(i*=a,1===o)for(let r=0;r<s;++r){const o=4*e[r];n[i]=t[o],n[i+1]=t[o+1],n[i+2]=t[o+2],n[i+3]=t[o+3],i+=a}else for(let r=0;r<s;++r){const s=4*e[r];for(let e=0;e<o;++e)n[i]=t[s],n[i+1]=t[s+1],n[i+2]=t[s+2],n[i+3]=t[s+3],i+=a}}(e,t,i,o,n);const a=r,s=i.typedBuffer,l=i.typedBufferStride,c=e.length,d=a[0],u=a[1],h=a[2],m=a[4],f=a[5],p=a[6],g=a[8],_=a[9],v=a[10],x=!(0,A.k)(a),T=1e-6,b=.999999;if(o*=l,1===n)for(let r=0;r<c;++r){const i=4*e[r],n=t[i],a=t[i+1],c=t[i+2],A=t[i+3];let E=d*n+m*a+g*c,S=u*n+f*a+_*c,R=h*n+p*a+v*c;if(x){const e=E*E+S*S+R*R;if(e<b&&e>T){const t=1/Math.sqrt(e);E*=t,S*=t,R*=t}}s[o+0]=E,s[o+1]=S,s[o+2]=R,s[o+3]=A,o+=l}else for(let r=0;r<c;++r){const i=4*e[r],a=t[i],c=t[i+1],A=t[i+2],E=t[i+3];let S=d*a+m*c+g*A,R=u*a+f*c+_*A,M=h*a+p*c+v*A;if(x){const e=S*S+R*R+M*M;if(e<b&&e>T){const t=1/Math.sqrt(e);S*=t,R*=t,M*=t}}for(let e=0;e<n;++e)s[o+0]=S,s[o+1]=R,s[o+2]=M,s[o+3]=E,o+=l}}function He(e,t,r,i,o,n=1){const a=i.typedBuffer,s=i.typedBufferStride,l=e.length;if(o*=s,1===n){if(4===r)for(let r=0;r<l;++r){const i=4*e[r];a[o]=t[i],a[o+1]=t[i+1],a[o+2]=t[i+2],a[o+3]=t[i+3],o+=s}else if(3===r)for(let r=0;r<l;++r){const i=3*e[r];a[o]=t[i],a[o+1]=t[i+1],a[o+2]=t[i+2],a[o+3]=255,o+=s}}else if(4===r)for(let r=0;r<l;++r){const i=4*e[r];for(let e=0;e<n;++e)a[o]=t[i],a[o+1]=t[i+1],a[o+2]=t[i+2],a[o+3]=t[i+3],o+=s}else if(3===r)for(let r=0;r<l;++r){const i=3*e[r];for(let e=0;e<n;++e)a[o]=t[i],a[o+1]=t[i+1],a[o+2]=t[i+2],a[o+3]=255,o+=s}}!function(e){e[e.Color=0]="Color",e[e.Depth=1]="Depth",e[e.Normal=2]="Normal",e[e.Shadow=3]="Shadow",e[e.Highlight=4]="Highlight",e[e.Draped=5]="Draped",e[e.Occlusion=6]="Occlusion",e[e.Alpha=7]="Alpha",e[e.COUNT=8]="COUNT"}(Le||(Le={}));class ke{constructor(e,t){this._module=e,this._loadModule=t}get(){return this._module}async reload(){return this._module=await this._loadModule(),this._module}}!function(e){e[e.Pass=0]="Pass",e[e.Draw=1]="Draw"}(Fe||(Fe={}));class We{constructor(e,t,r){this._context=e,this._locations=r,this._textures=new Map,this._freeTextureUnits=new V.P({deallocator:null}),this._glProgram=e.programCache.acquire(t.generate("vertex"),t.generate("fragment"),r),this._glProgram.stop=()=>{throw new Error("Wrapped _glProgram used directly")},this.bindPass=t.generateBind(Fe.Pass,this),this.bindDraw=t.generateBind(Fe.Draw,this),this._fragmentUniforms=(0,fe.w)()?t.fragmentUniforms:null}dispose(){this._glProgram.dispose()}get glName(){return this._glProgram.glName}get isCompiled(){return this._glProgram.isCompiled}setUniform1b(e,t){this._glProgram.setUniform1i(e,t?1:0)}setUniform1i(e,t){this._glProgram.setUniform1i(e,t)}setUniform1f(e,t){this._glProgram.setUniform1f(e,t)}setUniform2f(e,t,r){this._glProgram.setUniform2f(e,t,r)}setUniform2fv(e,t){this._glProgram.setUniform2fv(e,t)}setUniform3f(e,t,r,i){this._glProgram.setUniform3f(e,t,r,i)}setUniform3fv(e,t){this._glProgram.setUniform3fv(e,t)}setUniform4f(e,t,r,i,o){this._glProgram.setUniform4f(e,t,r,i,o)}setUniform4fv(e,t){this._glProgram.setUniform4fv(e,t)}setUniformMatrix3fv(e,t){this._glProgram.setUniformMatrix3fv(e,t)}setUniformMatrix4fv(e,t){this._glProgram.setUniformMatrix4fv(e,t)}setUniform1fv(e,t){this._glProgram.setUniform1fv(e,t)}setUniform1iv(e,t){this._glProgram.setUniform1iv(e,t)}setUniform2iv(e,t){this._glProgram.setUniform3iv(e,t)}setUniform3iv(e,t){this._glProgram.setUniform3iv(e,t)}setUniform4iv(e,t){this._glProgram.setUniform4iv(e,t)}assertCompatibleVertexAttributeLocations(e){e.locations!==this._locations&&console.error("VertexAttributeLocations are incompatible")}stop(){this._textures.clear(),this._freeTextureUnits.clear()}bindTexture(e,t){if((0,x.a)(t)||null==t.glName){const t=this._textures.get(e);return t&&(this._context.bindTexture(null,t.unit),this._freeTextureUnit(t),this._textures.delete(e)),null}let r=this._textures.get(e);return null==r?(r=this._allocTextureUnit(t),this._textures.set(e,r)):r.texture=t,this._context.useProgram(this),this.setUniform1i(e,r.unit),this._context.bindTexture(t,r.unit),r.unit}rebindTextures(){this._context.useProgram(this),this._textures.forEach(((e,t)=>{this._context.bindTexture(e.texture,e.unit),this.setUniform1i(t,e.unit)})),(0,x.i)(this._fragmentUniforms)&&this._fragmentUniforms.forEach((e=>{"sampler2D"!==e.type&&"samplerCube"!==e.type||this._textures.has(e.name)||console.error(`Texture sampler ${e.name} has no bound texture`)}))}_allocTextureUnit(e){return{texture:e,unit:0===this._freeTextureUnits.length?this._textures.size:this._freeTextureUnits.pop()}}_freeTextureUnit(e){this._freeTextureUnits.push(e.unit)}}me.C.LESS,me.C.ALWAYS;const $e={mask:255},qe={function:{func:me.C.ALWAYS,ref:c.OutlineVisualElementMask,mask:c.OutlineVisualElementMask},operation:{fail:me.S.KEEP,zFail:me.S.KEEP,zPass:me.S.ZERO}},Xe={function:{func:me.C.ALWAYS,ref:c.OutlineVisualElementMask,mask:c.OutlineVisualElementMask},operation:{fail:me.S.KEEP,zFail:me.S.KEEP,zPass:me.S.REPLACE}};me.C.EQUAL,c.OutlineVisualElementMask,c.OutlineVisualElementMask,me.S.KEEP,me.S.KEEP,me.S.KEEP,me.C.NOTEQUAL,c.OutlineVisualElementMask,c.OutlineVisualElementMask,me.S.KEEP,me.S.KEEP,me.S.KEEP;class je{constructor(e,t,r,i,o=null){this.name=e,this.type=t,this.arraySize=o,this.bind={[Fe.Pass]:null,[Fe.Draw]:null},(0,x.i)(r)&&(0,x.i)(i)&&(this.bind[r]=i)}equals(e){return this.type===e.type&&this.name===e.name&&this.arraySize===e.arraySize}}class Ye extends je{constructor(e,t){super(e,"vec3",Fe.Draw,((r,i,o)=>r.setUniform3fv(e,t(i,o))))}}class Ke extends je{constructor(e,t){super(e,"vec3",Fe.Pass,((r,i,o)=>r.setUniform3fv(e,t(i,o))))}}function Ze(e,t){!function(e,t,r){if(!t.hasSlicePlane){const r=j`#define rejectBySlice(_pos_) false
#define discardBySlice(_pos_) {}
#define highlightSlice(_color_, _pos_) (_color_)`;return t.hasSliceInVertexProgram&&e.vertex.code.add(r),void e.fragment.code.add(r)}e.extensions.add("GL_OES_standard_derivatives"),t.hasSliceInVertexProgram&&e.vertex.uniforms.add(r),e.fragment.uniforms.add(r);const i=j`struct SliceFactors {
float front;
float side0;
float side1;
float side2;
float side3;
};
SliceFactors calculateSliceFactors(vec3 pos) {
vec3 rel = pos - slicePlaneOrigin;
vec3 slicePlaneNormal = -cross(slicePlaneBasis1, slicePlaneBasis2);
float slicePlaneW = -dot(slicePlaneNormal, slicePlaneOrigin);
float basis1Len2 = dot(slicePlaneBasis1, slicePlaneBasis1);
float basis2Len2 = dot(slicePlaneBasis2, slicePlaneBasis2);
float basis1Dot = dot(slicePlaneBasis1, rel);
float basis2Dot = dot(slicePlaneBasis2, rel);
return SliceFactors(
dot(slicePlaneNormal, pos) + slicePlaneW,
-basis1Dot - basis1Len2,
basis1Dot - basis1Len2,
-basis2Dot - basis2Len2,
basis2Dot - basis2Len2
);
}
bool sliceByFactors(SliceFactors factors) {
return factors.front < 0.0
&& factors.side0 < 0.0
&& factors.side1 < 0.0
&& factors.side2 < 0.0
&& factors.side3 < 0.0;
}
bool sliceEnabled() {
return dot(slicePlaneBasis1, slicePlaneBasis1) != 0.0;
}
bool sliceByPlane(vec3 pos) {
return sliceEnabled() && sliceByFactors(calculateSliceFactors(pos));
}
#define rejectBySlice(_pos_) sliceByPlane(_pos_)
#define discardBySlice(_pos_) { if (sliceByPlane(_pos_)) discard; }`,o=j`vec4 applySliceHighlight(vec4 color, vec3 pos) {
SliceFactors factors = calculateSliceFactors(pos);
const float HIGHLIGHT_WIDTH = 1.0;
const vec4 HIGHLIGHT_COLOR = vec4(0.0, 0.0, 0.0, 0.3);
factors.front /= (2.0 * HIGHLIGHT_WIDTH) * fwidth(factors.front);
factors.side0 /= (2.0 * HIGHLIGHT_WIDTH) * fwidth(factors.side0);
factors.side1 /= (2.0 * HIGHLIGHT_WIDTH) * fwidth(factors.side1);
factors.side2 /= (2.0 * HIGHLIGHT_WIDTH) * fwidth(factors.side2);
factors.side3 /= (2.0 * HIGHLIGHT_WIDTH) * fwidth(factors.side3);
if (sliceByFactors(factors)) {
return color;
}
float highlightFactor = (1.0 - step(0.5, factors.front))
* (1.0 - step(0.5, factors.side0))
* (1.0 - step(0.5, factors.side1))
* (1.0 - step(0.5, factors.side2))
* (1.0 - step(0.5, factors.side3));
return mix(color, vec4(HIGHLIGHT_COLOR.rgb, color.a), highlightFactor * HIGHLIGHT_COLOR.a);
}`,n=t.hasSliceHighlight?j`
        ${o}
        #define highlightSlice(_color_, _pos_) (sliceEnabled() ? applySliceHighlight(_color_, _pos_) : (_color_))
      `:j`#define highlightSlice(_color_, _pos_) (_color_)`;t.hasSliceInVertexProgram&&e.vertex.code.add(i),e.fragment.code.add(i),e.fragment.code.add(n)}(e,t,[new Ye("slicePlaneOrigin",((e,r)=>function(e,t,r){if((0,x.a)(r.slicePlane))return S.Z;const i=Qe(e,t,r),o=Je(i,r.slicePlane),n=et(e,i,r);return(0,x.i)(n)?(0,S.w)(it,o,n):o}(t,e,r))),new Ye("slicePlaneBasis1",((e,r)=>tt(t,e,r,(0,x.u)(r.slicePlane)?.basis1))),new Ye("slicePlaneBasis2",((e,r)=>tt(t,e,r,(0,x.u)(r.slicePlane)?.basis2)))])}function Qe(e,t,r){return e.instancedDoublePrecision?(0,S.s)(rt,r.camera.viewInverseTransposeMatrix[3],r.camera.viewInverseTransposeMatrix[7],r.camera.viewInverseTransposeMatrix[11]):t.slicePlaneLocalOrigin}function Je(e,t){return(0,x.i)(e)?(0,S.d)(it,t.origin,e):t.origin}function et(e,t,r){return e.hasSliceTranslatedView?(0,x.i)(t)?(0,A.e)(nt,r.camera.viewMatrix,t):r.camera.viewMatrix:null}function tt(e,t,r,i){if((0,x.a)(i)||(0,x.a)(r.slicePlane))return S.Z;const o=Qe(e,t,r),n=Je(o,r.slicePlane),a=et(e,o,r);return(0,x.i)(a)?((0,S.b)(ot,i,n),(0,S.w)(it,n,a),(0,S.w)(ot,ot,a),(0,S.d)(ot,ot,it)):i}const rt=(0,S.h)(),it=(0,S.h)(),ot=(0,S.h)(),nt=(0,E.c)();function at(e,t={hasModelTransformation:!1,linearDepth:!1}){if(t.hasModelTransformation)return t.linearDepth?void e.vertex.code.add(j`vec4 transformPositionWithDepth(mat4 proj, mat4 view, mat4 model, vec3 pos, vec2 nearFar, out float depth) {
vec4 eye = view * (model * vec4(pos, 1.0));
depth = (-eye.z - nearFar[0]) / (nearFar[1] - nearFar[0]) ;
return proj * eye;
}`):void e.vertex.code.add(j`vec4 transformPosition(mat4 proj, mat4 view, mat4 model, vec3 pos) {
return proj * (view * (model * vec4(pos, 1.0)));
}`);t.linearDepth?e.vertex.code.add(j`vec4 transformPositionWithDepth(mat4 proj, mat4 view, vec3 pos, vec2 nearFar, out float depth) {
vec4 eye = view * vec4(pos, 1.0);
depth = (-eye.z - nearFar[0]) / (nearFar[1] - nearFar[0]) ;
return proj * eye;
}`):e.vertex.code.add(j`vec4 transformPosition(mat4 proj, mat4 view, vec3 pos) {
return proj * (view * vec4(pos, 1.0));
}`)}function st(e){e.code.add(j`const float MAX_RGBA_FLOAT =
255.0 / 256.0 +
255.0 / 256.0 / 256.0 +
255.0 / 256.0 / 256.0 / 256.0 +
255.0 / 256.0 / 256.0 / 256.0 / 256.0;
const vec4 FIXED_POINT_FACTORS = vec4(1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0);
vec4 float2rgba(const float value) {
float valueInValidDomain = clamp(value, 0.0, MAX_RGBA_FLOAT);
vec4 fixedPointU8 = floor(fract(valueInValidDomain * FIXED_POINT_FACTORS) * 256.0);
const float toU8AsFloat = 1.0 / 255.0;
return fixedPointU8 * toU8AsFloat;
}
const vec4 RGBA_2_FLOAT_FACTORS = vec4(
255.0 / (256.0),
255.0 / (256.0 * 256.0),
255.0 / (256.0 * 256.0 * 256.0),
255.0 / (256.0 * 256.0 * 256.0 * 256.0)
);
float rgba2float(vec4 rgba) {
return dot(rgba, RGBA_2_FLOAT_FACTORS);
}`)}function lt(e,t){e.fragment.include(st),t.output===Le.Shadow?(e.extensions.add("GL_OES_standard_derivatives"),e.fragment.code.add(j`float _calculateFragDepth(const in float depth) {
const float SLOPE_SCALE = 2.0;
const float BIAS = 2.0 * .000015259;
float m = max(abs(dFdx(depth)), abs(dFdy(depth)));
float result = depth + SLOPE_SCALE * m + BIAS;
return clamp(result, .0, .999999);
}
void outputDepth(float _linearDepth) {
gl_FragColor = float2rgba(_calculateFragDepth(_linearDepth));
}`)):t.output===Le.Depth&&e.fragment.code.add(j`void outputDepth(float _linearDepth) {
gl_FragColor = float2rgba(_linearDepth);
}`)}class ct extends je{constructor(e,t){super(e,"vec2",Fe.Pass,((r,i,o)=>r.setUniform2fv(e,t(i,o))))}}class dt extends je{constructor(e,t){super(e,"sampler2D",Fe.Pass,((r,i,o)=>r.bindTexture(e,t(i,o))))}}function ut(e,t,r){const i=[new dt(e,t)];if(r){const r=e+"Size";i.push(new ct(r,((e,r)=>{const i=t(e,r);return(0,x.i)(i)?(0,ge.a)(ht,i.descriptor.width,i.descriptor.height):_e.Z})))}return i}const ht=(0,_e.a)(),mt=(0,pe.a)(1,1,0,1),ft=(0,pe.a)(1,0,1,1);function pt(e){e.fragment.uniforms.add(new dt("depthTex",((e,t)=>t.highlightDepthTexture))),e.fragment.uniforms.add(new ct("highlightViewportPixelSz",((e,t)=>t.inverseViewport))),e.fragment.constants.add("occludedHighlightFlag","vec4",mt).add("unoccludedHighlightFlag","vec4",ft),e.fragment.code.add(j`void outputHighlight() {
vec4 fragCoord = gl_FragCoord;
float sceneDepth = texture2D(depthTex, fragCoord.xy * highlightViewportPixelSz.xy).r;
if (fragCoord.z > sceneDepth + 5e-7) {
gl_FragColor = occludedHighlightFlag;
}
else {
gl_FragColor = unoccludedHighlightFlag;
}
}`)}function gt(e){e.include(st),e.code.add(j`float linearDepthFromFloat(float depth, vec2 nearFar) {
return -(depth * (nearFar[1] - nearFar[0]) + nearFar[0]);
}
float linearDepthFromTexture(sampler2D depthTex, vec2 uv, vec2 nearFar) {
return linearDepthFromFloat(rgba2float(texture2D(depthTex, uv)), nearFar);
}`)}function _t(e,t){t.hasMultipassTerrain&&(e.fragment.include(gt),e.fragment.uniforms.add(new dt("terrainDepthTexture",((e,t)=>t.multipassTerrain.linearDepthTexture))),e.fragment.uniforms.add(new ct("nearFar",((e,t)=>t.camera.nearFar))),e.fragment.uniforms.add(new ct("inverseViewport",((e,t)=>t.inverseViewport))),e.fragment.code.add(j`
    void terrainDepthTest(vec4 fragCoord, float fragmentDepth){
      float terrainDepth = linearDepthFromTexture(terrainDepthTexture, fragCoord.xy * inverseViewport, nearFar);
      if(fragmentDepth ${t.cullAboveGround?">":"<="} terrainDepth){
        discard;
      }
    }
  `))}const vt=.001;function xt(e){e.code.add(j`vec4 premultiplyAlpha(vec4 v) {
return vec4(v.rgb * v.a, v.a);
}
vec3 rgb2hsv(vec3 c) {
vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);
vec4 p = c.g < c.b ? vec4(c.bg, K.wz) : vec4(c.gb, K.xy);
vec4 q = c.r < p.x ? vec4(p.xyw, c.r) : vec4(c.r, p.yzx);
float d = q.x - min(q.w, q.y);
float e = 1.0e-10;
return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), min(d / (q.x + e), 1.0), q.x);
}
vec3 hsv2rgb(vec3 c) {
vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);
vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);
return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);
}
float rgb2v(vec3 c) {
return max(c.x, max(c.y, c.z));
}`)}class Tt extends je{constructor(e,t){super(e,"mat4",Fe.Draw,((r,i,o)=>r.setUniformMatrix4fv(e,t(i,o))))}}class bt extends je{constructor(e,t){super(e,"mat4",Fe.Pass,((r,i,o)=>r.setUniformMatrix4fv(e,t(i,o))))}}function At(e,t){t.instancedDoublePrecision?e.constants.add("cameraPosition","vec3",S.Z):e.uniforms.add(new Ye("cameraPosition",((e,t)=>(0,S.s)(Rt,t.camera.viewInverseTransposeMatrix[3]-e.origin[0],t.camera.viewInverseTransposeMatrix[7]-e.origin[1],t.camera.viewInverseTransposeMatrix[11]-e.origin[2]))))}function Et(e,t){if(e.vertex.uniforms.add(new bt("proj",((e,t)=>t.camera.projectionMatrix))),t.instancedDoublePrecision){const t=(e,t)=>(0,S.s)(Rt,t.camera.viewInverseTransposeMatrix[3],t.camera.viewInverseTransposeMatrix[7],t.camera.viewInverseTransposeMatrix[11]);e.vertex.uniforms.add(new bt("view",((e,r)=>(0,A.e)(St,r.camera.viewMatrix,t(e,r)))));const r=new Ke("localOrigin",t);return e.vertex.uniforms.add(r),r}e.vertex.uniforms.add(new Tt("view",((e,t)=>(0,A.e)(St,t.camera.viewMatrix,e.origin))));const r=new Ye("localOrigin",(e=>e.origin));return e.vertex.uniforms.add(r),r}const St=(0,ve.c)(),Rt=(0,S.h)();class Mt extends je{constructor(e,t){super(e,"vec4",Fe.Pass,((r,i,o)=>r.setUniform4fv(e,t(i,o))))}}const wt=P.L.getLogger("esri.views.3d.webgl-engine.core.shaderModules.shaderBuilder");class Ct{constructor(){this.includedModules=new Map}include(e,t){if(this.includedModules.has(e)){const r=this.includedModules.get(e);if(r!==t){wt.error("Trying to include shader module multiple times with different sets of options.");const t=new Set;for(const i of Object.keys(r))r[i]!==e[i]&&t.add(i);for(const i of Object.keys(e))r[i]!==e[i]&&t.add(i);t.forEach((t=>console.error(`  ${t}: current ${r[t]} new ${e[t]}`)))}}else this.includedModules.set(e,t),e(this.builder,t)}}class yt extends Ct{constructor(){super(...arguments),this.vertex=new Pt,this.fragment=new Pt,this.attributes=new Dt,this.varyings=new It,this.extensions=new Lt,this.constants=new Ft}get fragmentUniforms(){return this.fragment.uniforms.entries}get builder(){return this}generate(e){const t=this.extensions.generateSource(e),r=this.attributes.generateSource(e),i=this.varyings.generateSource(),o="vertex"===e?this.vertex:this.fragment,n=o.uniforms.generateSource(),a=o.code.generateSource(),s="vertex"===e?Vt:Bt,l=this.constants.generateSource().concat(o.constants.generateSource());return`\n${t.join("\n")}\n\n${s}\n\n${l.join("\n")}\n\n${n.join("\n")}\n\n${r.join("\n")}\n\n${i.join("\n")}\n\n${a.join("\n")}`}generateBind(e,t){const r=new Map;this.vertex.uniforms.entries.forEach((t=>{const i=t.bind[e];(0,x.i)(i)&&r.set(t.name,i)})),this.fragment.uniforms.entries.forEach((t=>{const i=t.bind[e];(0,x.i)(i)&&r.set(t.name,i)}));const i=Array.from(r.values()),o=i.length;return(e,r)=>{for(let n=0;n<o;++n)i[n](t,e,r)}}}class Ot{constructor(){this._entries=new Map}add(e){if(!Array.isArray(e))return this._add(e);for(const t of e)this._add(t)}_add(e){if(this._entries.has(e.name)&&!this._entries.get(e.name).equals(e))throw new N.Z(`Duplicate uniform name ${e.name} for different uniform type`);this._entries.set(e.name,e)}generateSource(){return Array.from(this._entries.values()).map((e=>(0,x.i)(e.arraySize)?`uniform ${e.type} ${e.name}[${e.arraySize}];`:`uniform ${e.type} ${e.name};`))}get entries(){return Array.from(this._entries.values())}}class Nt{constructor(){this._entries=new Array}add(e){this._entries.push(e)}generateSource(){return this._entries}}class Pt extends Ct{constructor(){super(...arguments),this.uniforms=new Ot,this.code=new Nt,this.constants=new Ft}get builder(){return this}}class Dt{constructor(){this._entries=new Array}add(e,t){this._entries.push([e,t])}generateSource(e){return"fragment"===e?[]:this._entries.map((e=>`attribute ${e[1]} ${e[0]};`))}}class It{constructor(){this._entries=new Array}add(e,t){this._entries.push([e,t])}generateSource(){return this._entries.map((e=>`varying ${e[1]} ${e[0]};`))}}class Lt{constructor(){this._entries=new Set}add(e){this._entries.add(e)}generateSource(e){const t="vertex"===e?Lt.ALLOWLIST_VERTEX:Lt.ALLOWLIST_FRAGMENT;return Array.from(this._entries).filter((e=>t.includes(e))).map((e=>`#extension ${e} : enable`))}}Lt.ALLOWLIST_FRAGMENT=["GL_EXT_shader_texture_lod","GL_OES_standard_derivatives"],Lt.ALLOWLIST_VERTEX=[];class Ft{constructor(){this._entries=new Set}add(e,t,r){let i="ERROR_CONSTRUCTOR_STRING";switch(t){case"float":i=Ft._numberToFloatStr(r);break;case"int":i=Ft._numberToIntStr(r);break;case"bool":i=r.toString();break;case"vec2":i=`vec2(${Ft._numberToFloatStr(r[0])},                            ${Ft._numberToFloatStr(r[1])})`;break;case"vec3":i=`vec3(${Ft._numberToFloatStr(r[0])},                            ${Ft._numberToFloatStr(r[1])},                            ${Ft._numberToFloatStr(r[2])})`;break;case"vec4":i=`vec4(${Ft._numberToFloatStr(r[0])},                            ${Ft._numberToFloatStr(r[1])},                            ${Ft._numberToFloatStr(r[2])},                            ${Ft._numberToFloatStr(r[3])})`;break;case"ivec2":i=`ivec2(${Ft._numberToIntStr(r[0])},                             ${Ft._numberToIntStr(r[1])})`;break;case"ivec3":i=`ivec3(${Ft._numberToIntStr(r[0])},                             ${Ft._numberToIntStr(r[1])},                             ${Ft._numberToIntStr(r[2])})`;break;case"ivec4":i=`ivec4(${Ft._numberToIntStr(r[0])},                             ${Ft._numberToIntStr(r[1])},                             ${Ft._numberToIntStr(r[2])},                             ${Ft._numberToIntStr(r[3])})`;break;case"mat2":case"mat3":case"mat4":i=`${t}(${Array.prototype.map.call(r,(e=>Ft._numberToFloatStr(e))).join(", ")})`}return this._entries.add(`const ${t} ${e} = ${i};`),this}static _numberToIntStr(e){return e.toFixed(0)}static _numberToFloatStr(e){return Number.isInteger(e)?e.toFixed(1):e.toString()}generateSource(){return Array.from(this._entries)}}const Bt="#ifdef GL_FRAGMENT_PRECISION_HIGH\n  precision highp float;\n  precision highp sampler2D;\n#else\n  precision mediump float;\n  precision mediump sampler2D;\n#endif",Vt="precision highp float;\nprecision highp sampler2D;";class Ut extends class{constructor(){this._key="",this._keyDirty=!1,this._parameterBits=this._parameterBits?this._parameterBits.map((()=>0)):[],this._parameterNames||(this._parameterNames=[])}get key(){return this._keyDirty&&(this._keyDirty=!1,this._key=String.fromCharCode.apply(String,this._parameterBits)),this._key}snapshot(){const e=this._parameterNames,t={key:this.key};for(const r of e)t[r]=this[r];return t}}{}(0,xe._)([Te({constValue:!0})],Ut.prototype,"hasSliceHighlight",void 0),(0,xe._)([Te({constValue:!1})],Ut.prototype,"hasSliceInVertexProgram",void 0),(0,xe._)([Te({constValue:!1})],Ut.prototype,"instancedDoublePrecision",void 0),(0,xe._)([Te({constValue:!1})],Ut.prototype,"isGround",void 0),(0,xe._)([Te({constValue:Fe.Pass})],Ut.prototype,"pbrTextureBindType",void 0);class Gt extends je{constructor(e,t){super(e,"float",Fe.Pass,((r,i,o)=>r.setUniform1f(e,t(i,o))))}}new be.V(z.V.POSITION,3,me.D.FLOAT,0,12),new be.V(z.V.POSITION,3,me.D.FLOAT,0,20),new be.V(z.V.UV0,2,me.D.FLOAT,12,20),new be.V(z.V.POSITION,3,me.D.FLOAT,0,32),new be.V(z.V.NORMAL,3,me.D.FLOAT,12,32),new be.V(z.V.UV0,2,me.D.FLOAT,24,32),new be.V(z.V.POSITION,3,me.D.FLOAT,0,16),new be.V(z.V.COLOR,4,me.D.UNSIGNED_BYTE,12,16);const zt=[new be.V(z.V.POSITION,2,me.D.FLOAT,0,8)],Ht=[new be.V(z.V.POSITION,2,me.D.FLOAT,0,16),new be.V(z.V.UV0,2,me.D.FLOAT,8,16)];var kt=r(48190),Wt=r(75067),$t=r(32101),qt=r(73173);class Xt{constructor(e,t){this._context=e,this._desc=t,this.type="renderbuffer",this._context.instanceCounter.increment(me.R.Renderbuffer,this);const r=this._context.gl;this.glName=r.createRenderbuffer(),this._context.bindRenderbuffer(this);const{width:i,height:o,internalFormat:n,multisampled:a}=t;if(a){if(this._context.type!==Ae.C.WEBGL2)throw new Error("Multisampled renderbuffers are not supported in WebGL1!");r.renderbufferStorageMultisample(r.RENDERBUFFER,this.samples,n,i,o)}else r.renderbufferStorage(r.RENDERBUFFER,n,i,o)}get descriptor(){return this._desc}get samples(){const e=this._desc.samples,t=this._context.parameters.maxSamples;return e?Math.min(e,t):t}resize(e,t){const r=this._desc;if(r.width===e&&r.height===t)return;r.width=e,r.height=t;const i=this._context.gl;this._context.bindRenderbuffer(this),r.multisampled?i.renderbufferStorageMultisample(i.RENDERBUFFER,this.samples,r.internalFormat,r.width,r.height):i.renderbufferStorage(i.RENDERBUFFER,r.internalFormat,r.width,r.height)}dispose(){this._context&&(this._context.gl.deleteRenderbuffer(this.glName),this._context.instanceCounter.decrement(me.R.Renderbuffer,this),this._context=null)}}const jt=P.L.getLogger("esri.views.webgl.FrameBufferObject");class Yt{constructor(e,t,r=null,i=null){if(this._context=e,this._glName=null,this._depthAttachment=null,this._stencilAttachment=null,this._colorAttachments=new Map,this._initialized=!1,this._desc={...t},e.instanceCounter.increment(me.R.FramebufferObject,this),(0,x.i)(r)){Array.isArray(r)||(r=[r]);for(let e=0;e<r.length;++e){const t=r[e],i=me.n.COLOR_ATTACHMENT0+e;let o;Qt(t)?(Kt(t)?(o=t.descriptor,this._colorAttachments.set(i,t)):(o=t,this._colorAttachments.set(i,new fe.T(this._context,o))),Jt(o,this._desc)):(Zt(t)?(o=t.descriptor,this._colorAttachments.set(i,t)):(o=t,this._colorAttachments.set(i,new Xt(this._context,o))),er(o,this._desc)),this._validateColorAttachmentPoint(i)}}if((0,x.i)(i)){let e,t;if(Qt(i))this._context.capabilities.depthTexture||console.error("Setting the depth/stencil texture as an attachment requires WEBGL_depth_texture or WebGL2"),Kt(i)?(t=i.descriptor,this._depthStencilTexture=i):(t=i,this._depthStencilTexture=new fe.T(this._context,t)),Jt(t,this._desc);else{Zt(i)?(t=i.descriptor,e=i):(t=i,e=new Xt(this._context,t));const r=this._desc.depthStencilTarget??me.e.DEPTH_STENCIL_RENDER_BUFFER;r===me.e.STENCIL_RENDER_BUFFER?this._stencilAttachment=e:r===me.e.DEPTH_RENDER_BUFFER||r===me.e.DEPTH_STENCIL_RENDER_BUFFER?this._depthAttachment=e:console.error('If a Renderbuffer is provided, "depthStencilTarget" must be one of STENCIL_RENDER_BUFFER, DEPTH_RENDER_BUFFER or DEPTH_STENCIL_RENDER_BUFFER'),er(t,this._desc)}}}dispose(){if(!this._desc)return;const e=this._context.getBoundFramebufferObject();this._disposeColorAttachments(),this._disposeDepthStencilAttachments(),this._glName&&(this._context.gl.deleteFramebuffer(this._glName),this._glName=null),this._context.bindFramebuffer(e),this._context.instanceCounter.decrement(me.R.FramebufferObject,this),this._desc=null}get glName(){return this._glName}get descriptor(){return this._desc}get colorTexture(){const e=this._colorAttachments.get(me.n.COLOR_ATTACHMENT0);return e&&Kt(e)?e:null}get colorAttachment(){return this._colorAttachments.get(me.n.COLOR_ATTACHMENT0)}get depthStencilAttachment(){return this._depthStencilTexture||this._depthAttachment||this._stencilAttachment}get depthStencilTexture(){return this._depthStencilTexture}get width(){return this._desc.width}get height(){return this._desc.height}get gpuMemoryUsage(){return[...this._colorAttachments].reduce(((e,[t,r])=>e+Ce(r)),0)+Ce(this.depthStencilAttachment)}getColorTexture(e){const t=this._colorAttachments.get(e);return t&&Kt(t)?t:null}attachColorTexture(e,t=me.n.COLOR_ATTACHMENT0){e&&(this._validateColorAttachmentPoint(t),Jt(e.descriptor,this._desc),this._disposeColorAttachments(),this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(e.glName,t)),this._colorAttachments.set(t,e))}detachColorTexture(e=me.n.COLOR_ATTACHMENT0){const t=this._colorAttachments.get(e);if(Kt(t)){const r=t;return this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(null,e)),this._colorAttachments.delete(e),r}}setColorTextureTarget(e,t=me.n.COLOR_ATTACHMENT0){const r=this._colorAttachments.get(t);Kt(r)&&this._framebufferTexture2D(r.glName,t,e)}attachDepthStencilTexture(e){if((0,x.a)(e))return;const t=e.descriptor;t.pixelFormat!==me.a.DEPTH_STENCIL&&console.error("Depth/Stencil texture must have a pixel type of DEPTH_STENCIL!"),t.dataType!==me.b.UNSIGNED_INT_24_8&&console.error("Depth/Stencil texture must have data type of UNSIGNED_INT_24_8!"),this._context.capabilities.depthTexture||console.error("Extension WEBGL_depth_texture isn't supported therefore it is no possible to set the depth/stencil texture!"),Jt(t,this._desc),this._desc.depthStencilTarget&&this._desc.depthStencilTarget!==me.e.DEPTH_STENCIL_TEXTURE&&(this._desc.depthStencilTarget=me.e.DEPTH_STENCIL_TEXTURE),this._disposeDepthStencilAttachments(),this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(e.glName,me.o)),this._depthStencilTexture=e}detachDepthStencilTexture(){const e=this._depthStencilTexture;return e&&this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(null,me.o)),this._depthStencilTexture=null,e}attachDepthStencilBuffer(e){if((0,x.a)(e))return;const t=e.descriptor;if(t.internalFormat!==me.m.DEPTH_STENCIL&&t.internalFormat!==me.m.DEPTH_COMPONENT16&&console.error("Depth/Stencil buffer must have correct internalFormat"),er(t,this._desc),this._disposeDepthStencilAttachments(),this._desc.depthStencilTarget=t.internalFormat===me.m.DEPTH_STENCIL?me.e.DEPTH_STENCIL_RENDER_BUFFER:me.e.DEPTH_RENDER_BUFFER,this._initialized){this._context.bindFramebuffer(this);const t=this._context.gl,r=this._desc.depthStencilTarget===me.e.DEPTH_RENDER_BUFFER?t.DEPTH_ATTACHMENT:t.DEPTH_STENCIL_ATTACHMENT;t.framebufferRenderbuffer(me.p.FRAMEBUFFER,r,t.RENDERBUFFER,e.glName)}this._depthAttachment=e}detachDepthStencilBuffer(){const e=this._context.gl,t=this._depthAttachment;if(t&&this._initialized){this._context.bindFramebuffer(this);const t=this._desc.depthStencilTarget===me.e.DEPTH_RENDER_BUFFER?e.DEPTH_ATTACHMENT:e.DEPTH_STENCIL_ATTACHMENT;e.framebufferRenderbuffer(me.p.FRAMEBUFFER,t,e.RENDERBUFFER,null)}return this._depthAttachment=null,t}detachAll(){this._colorAttachments.forEach(((e,t)=>this._detachColorAttachment(t))),this.detachDepthStencilBuffer(),this.detachDepthStencilTexture()}copyToTexture(e,t,r,i,o,n,a){(e<0||t<0||o<0||n<0)&&console.error("Offsets cannot be negative!"),(r<=0||i<=0)&&console.error("Copy width and height must be greater than zero!");const s=this._desc,l=a.descriptor;a.descriptor.target!==me.T.TEXTURE_2D&&console.error("Texture target must be TEXTURE_2D!"),(e+r>s.width||t+i>s.height||o+r>l.width||n+i>l.height)&&console.error("Bad dimensions, the current input values will attempt to read or copy out of bounds!");const c=this._context,d=c.bindTexture(a,fe.T.TEXTURE_UNIT_FOR_UPDATES);c.setActiveTexture(fe.T.TEXTURE_UNIT_FOR_UPDATES),c.bindFramebuffer(this),c.gl.copyTexSubImage2D(me.T.TEXTURE_2D,0,o,n,e,t,r,i),c.bindTexture(d,fe.T.TEXTURE_UNIT_FOR_UPDATES)}readPixels(e,t,r,i,o,n,a){(r<=0||i<=0)&&console.error("Copy width and height must be greater than zero!"),a||console.error("Target memory is not initialized!"),this._context.bindFramebuffer(this),this._context.gl.readPixels(e,t,r,i,o,n,a)}async readPixelsAsync(e,t,r,i,o,n,a){if(this._context.type!==Ae.C.WEBGL2)return(0,fe.w)()&&console.warn("Attempting to read pixels using pixel buffer object without WebGL2"),void this.readPixels(e,t,r,i,o,n,a);const s=this._context.gl,l=Se.createPixelPack(this._context,me.U.STREAM_READ,a.byteLength);this._context.bindBuffer(l),this._context.bindFramebuffer(this),s.readPixels(e,t,r,i,o,n,0),this._context.unbindBuffer(me.l.PIXEL_PACK_BUFFER),await l.getSubDataAsync(a),l.dispose()}resize(e,t){const r=this._desc;if(r.width!==e||r.height!==t){if(!this._initialized)return r.width=e,r.height=t,this._colorAttachments.forEach((r=>{r&&r.resize(e,t)})),void(this._depthStencilTexture&&this._depthStencilTexture.resize(e,t));r.width=e,r.height=t,this._colorAttachments.forEach((r=>{r&&r.resize(e,t)})),null!=this._depthStencilTexture?this._depthStencilTexture.resize(e,t):(this._depthAttachment||this._stencilAttachment)&&(this._depthAttachment&&this._depthAttachment.resize(e,t),this._stencilAttachment&&this._stencilAttachment.resize(e,t)),this._context.getBoundFramebufferObject()===this&&this._context.bindFramebuffer(null),this._initialized=!1}}initializeAndBind(e=me.p.FRAMEBUFFER){const t=this._context.gl;if(this._initialized)return void t.bindFramebuffer(e,this.glName);this._glName&&t.deleteFramebuffer(this._glName);const r=this._context,i=t.createFramebuffer(),o=this._desc,n=o.colorTarget??me.d.RENDER_BUFFER,a=o.width??1,s=o.height??1;if(t.bindFramebuffer(e,i),0===this._colorAttachments.size)if(n===me.d.TEXTURE||n===me.d.CUBEMAP)this._colorAttachments.set(me.n.COLOR_ATTACHMENT0,function(e,t,r){return new fe.T(e,{target:r,pixelFormat:me.a.RGBA,dataType:me.b.UNSIGNED_BYTE,samplingMode:me.c.NEAREST,wrapMode:me.f.CLAMP_TO_EDGE,width:t.width,height:t.height})}(r,o,this.descriptor.colorTarget===me.d.CUBEMAP?me.T.TEXTURE_CUBE_MAP:me.T.TEXTURE_2D));else{const e=new Xt(r,{internalFormat:me.k.RGBA4,width:a,height:s});this._colorAttachments.set(me.n.COLOR_ATTACHMENT0,e)}this._colorAttachments.forEach(((r,i)=>{r&&(Kt(r)?this._framebufferTexture2D(r.glName,i,tr(r),e):t.framebufferRenderbuffer(e,i,t.RENDERBUFFER,r.glName))}));const l=o.depthStencilTarget??me.e.NONE;switch(l){case me.e.DEPTH_RENDER_BUFFER:case me.e.DEPTH_STENCIL_RENDER_BUFFER:{this._depthAttachment||(this._depthAttachment=new Xt(r,{internalFormat:o.depthStencilTarget===me.e.DEPTH_RENDER_BUFFER?me.m.DEPTH_COMPONENT16:me.m.DEPTH_STENCIL,width:a,height:s}));const i=l===me.e.DEPTH_RENDER_BUFFER?t.DEPTH_ATTACHMENT:t.DEPTH_STENCIL_ATTACHMENT;t.framebufferRenderbuffer(e,i,t.RENDERBUFFER,this._depthAttachment.glName);break}case me.e.STENCIL_RENDER_BUFFER:this._stencilAttachment||(this._stencilAttachment=new Xt(r,{internalFormat:me.m.STENCIL_INDEX8,width:a,height:s})),t.framebufferRenderbuffer(e,t.STENCIL_ATTACHMENT,t.RENDERBUFFER,this._stencilAttachment.glName);break;case me.e.DEPTH_STENCIL_TEXTURE:if(!this._depthStencilTexture){r.capabilities.depthTexture||console.error("Extension WEBGL_depth_texture isn't supported therefore it is no possible to set the depth/stencil texture as an attachment!");const e={target:me.T.TEXTURE_2D,pixelFormat:me.a.DEPTH_STENCIL,dataType:me.b.UNSIGNED_INT_24_8,samplingMode:me.c.NEAREST,wrapMode:me.f.CLAMP_TO_EDGE,width:a,height:s};this._depthStencilTexture=new fe.T(r,e)}this._framebufferTexture2D(this._depthStencilTexture.glName,t.DEPTH_STENCIL_ATTACHMENT,tr(this._depthStencilTexture),e)}(0,fe.a)()&&t.checkFramebufferStatus(e)!==t.FRAMEBUFFER_COMPLETE&&console.error("Framebuffer is incomplete!"),this._glName=i,this._initialized=!0}_framebufferTexture2D(e,t=me.n.COLOR_ATTACHMENT0,r=me.T.TEXTURE_2D,i=me.p.FRAMEBUFFER,o=0){this._context.gl.framebufferTexture2D(i,t,r,e,o)}_detachColorAttachment(e){(0,fe.w)()&&console.warn("Detaching an FBO attachment can be a slow due to invalidating framebuffer completeness!");const t=this._context.gl,r=this._colorAttachments.get(e);return Kt(r)?this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(null,e)):this._initialized&&(this._context.bindFramebuffer(this),t.framebufferRenderbuffer(me.p.FRAMEBUFFER,e,t.RENDERBUFFER,null)),this._colorAttachments.delete(e),r}_disposeColorAttachments(){this._colorAttachments.forEach(((e,t)=>{this._detachColorAttachment(t),e.dispose()})),this._colorAttachments.clear()}_disposeDepthStencilAttachments(){const e=this._context.gl;if(this._depthAttachment){if(this._initialized){this._context.bindFramebuffer(this);const t=this._desc.depthStencilTarget===me.e.DEPTH_RENDER_BUFFER?e.DEPTH_ATTACHMENT:e.DEPTH_STENCIL_ATTACHMENT;e.framebufferRenderbuffer(me.p.FRAMEBUFFER,t,e.RENDERBUFFER,null)}this._depthAttachment.dispose(),this._depthAttachment=null}this._stencilAttachment&&(this._initialized&&(this._context.bindFramebuffer(this),e.framebufferRenderbuffer(me.p.FRAMEBUFFER,e.STENCIL_ATTACHMENT,e.RENDERBUFFER,null)),this._stencilAttachment.dispose(),this._stencilAttachment=null),this._depthStencilTexture&&(this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(null,e.DEPTH_STENCIL_ATTACHMENT)),this._depthStencilTexture.dispose(),this._depthStencilTexture=null)}_validateColorAttachmentPoint(e){if(-1===Yt._MAX_COLOR_ATTACHMENTS){const e=this._context.capabilities.drawBuffers;if(e){const t=this._context.gl;Yt._MAX_COLOR_ATTACHMENTS=t.getParameter(e.MAX_COLOR_ATTACHMENTS)}else Yt._MAX_COLOR_ATTACHMENTS=1}const t=e-me.n.COLOR_ATTACHMENT0;t+1>Yt._MAX_COLOR_ATTACHMENTS&&jt.error("esri.FrameBufferObject",`illegal attachment point for color attachment: ${t+1}. Implementation supports up to ${Yt._MAX_COLOR_ATTACHMENTS} color attachments`)}}function Kt(e){return"type"in e&&"texture"===e.type}function Zt(e){return"type"in e&&"renderbuffer"===e.type}function Qt(e){return Kt(e)||"pixelFormat"in e}function Jt(e,t){e.target!==me.T.TEXTURE_2D&&e.target!==me.T.TEXTURE_CUBE_MAP&&console.error("Texture type must be TEXTURE_2D or TEXTURE_CUBE_MAP!"),void 0!==t.width&&t.width>=0&&void 0!==t.height&&t.height>=0?t.width===e.width&&t.height===e.height||console.error("Color attachment texture must match the framebuffer's!"):(t.width=e.width,t.height=e.height)}function er(e,t){void 0!==t.width&&t.width>=0&&void 0!==t.height&&t.height>=0?t.width===e.width&&t.height===e.height||console.error("Renderbuffer dimensions must match the framebuffer's!"):(t.width=e.width,t.height=e.height)}function tr(e){return e.descriptor.target===me.T.TEXTURE_CUBE_MAP?me.T.TEXTURE_CUBE_MAP_POSITIVE_X:me.T.TEXTURE_2D}let rr;var ir;Yt._MAX_COLOR_ATTACHMENTS=-1,function(e){e[e.ETC1_RGB=0]="ETC1_RGB",e[e.ETC2_RGBA=1]="ETC2_RGBA",e[e.BC1_RGB=2]="BC1_RGB",e[e.BC3_RGBA=3]="BC3_RGBA",e[e.BC4_R=4]="BC4_R",e[e.BC5_RG=5]="BC5_RG",e[e.BC7_M6_RGB=6]="BC7_M6_RGB",e[e.BC7_M5_RGBA=7]="BC7_M5_RGBA",e[e.PVRTC1_4_RGB=8]="PVRTC1_4_RGB",e[e.PVRTC1_4_RGBA=9]="PVRTC1_4_RGBA",e[e.ASTC_4x4_RGBA=10]="ASTC_4x4_RGBA",e[e.ATC_RGB=11]="ATC_RGB",e[e.ATC_RGBA=12]="ATC_RGBA",e[e.FXT1_RGB=17]="FXT1_RGB",e[e.PVRTC2_4_RGB=18]="PVRTC2_4_RGB",e[e.PVRTC2_4_RGBA=19]="PVRTC2_4_RGBA",e[e.ETC2_EAC_R11=20]="ETC2_EAC_R11",e[e.ETC2_EAC_RG11=21]="ETC2_EAC_RG11",e[e.RGBA32=13]="RGBA32",e[e.RGB565=14]="RGB565",e[e.BGR565=15]="BGR565",e[e.RGBA4444=16]="RGBA4444"}(ir||(ir={}));let or=null,nr=null;async function ar(){return(0,x.a)(nr)&&(nr=function(){if((0,x.a)(rr)){const e=e=>(0,qt.g)(`esri/libs/basisu/${e}`);rr=r.e(3786).then(r.bind(r,73786)).then((e=>e.b)).then((({default:t})=>t({locateFile:e}).then((e=>(e.initializeBasis(),delete e.then,e)))))}return rr}(),or=await nr),nr}function sr(e,t,r,i,o){const n=we(t?me.j.COMPRESSED_RGBA8_ETC2_EAC:me.j.COMPRESSED_RGB8_ETC2),a=o&&e>1?(4**e-1)/(3*4**(e-1)):1;return Math.ceil(r*i*n*a)}function lr(e){return e.getNumImages()>=1&&!e.isUASTC()}function cr(e){return e.getFaces()>=1&&e.isETC1S()}function dr(e,t,r,i,o,n,a,s){const{compressedTextureETC:l,compressedTextureS3TC:c}=e.capabilities,[d,u]=l?i?[ir.ETC2_RGBA,me.j.COMPRESSED_RGBA8_ETC2_EAC]:[ir.ETC1_RGB,me.j.COMPRESSED_RGB8_ETC2]:c?i?[ir.BC3_RGBA,me.j.COMPRESSED_RGBA_S3TC_DXT5_EXT]:[ir.BC1_RGB,me.j.COMPRESSED_RGB_S3TC_DXT1_EXT]:[ir.RGBA32,me.a.RGBA],h=t.hasMipmap?r:Math.min(1,r),m=[];for(let e=0;e<h;e++)m.push(new Uint8Array(a(e,d))),s(e,d,m[e]);const f=m.length>1,p=f?me.c.LINEAR_MIPMAP_LINEAR:me.c.LINEAR,g={...t,samplingMode:p,hasMipmap:f,internalFormat:u,width:o,height:n};return new fe.T(e,g,{type:"compressed",levels:m})}const ur=P.L.getLogger("esri.views.3d.webgl-engine.lib.DDSUtil");function hr(e){return e.charCodeAt(0)+(e.charCodeAt(1)<<8)+(e.charCodeAt(2)<<16)+(e.charCodeAt(3)<<24)}const mr=hr("DXT1"),fr=hr("DXT3"),pr=hr("DXT5");class gr extends W{constructor(e,t){super(),this.data=e,this.type=$.Texture,this._glTexture=null,this._powerOfTwoStretchInfo=null,this._loadingPromise=null,this._loadingController=null,this.events=new Wt.Z,this.params=t||{},this.params.mipmap=!1!==this.params.mipmap,this.params.noUnpackFlip=this.params.noUnpackFlip||!1,this.params.preMultiplyAlpha=this.params.preMultiplyAlpha||!1,this.params.wrap=this.params.wrap||{s:me.f.REPEAT,t:me.f.REPEAT},this.params.powerOfTwoResizeMode=this.params.powerOfTwoResizeMode||m.STRETCH,this.estimatedTexMemRequired=gr._estimateTexMemRequired(this.data,this.params),this._startPreload()}_startPreload(){const e=this.data;(0,x.a)(e)||(e instanceof HTMLVideoElement?this._startPreloadVideoElement(e):e instanceof HTMLImageElement&&this._startPreloadImageElement(e))}_startPreloadVideoElement(e){if(!((0,$t.jc)(e.src)||"auto"===e.preload&&e.crossOrigin)){e.preload="auto",e.crossOrigin="anonymous";const t=!e.paused;if(e.src=e.src,t&&e.autoplay){const t=()=>{e.removeEventListener("canplay",t),e.play()};e.addEventListener("canplay",t)}}}_startPreloadImageElement(e){(0,$t.HK)(e.src)||(0,$t.jc)(e.src)||e.crossOrigin||(e.crossOrigin="anonymous",e.src=e.src)}static _getDataDimensions(e){return e instanceof HTMLVideoElement?{width:e.videoWidth,height:e.videoHeight}:e}static _estimateTexMemRequired(e,t){if((0,x.a)(e))return 0;if((0,H.n)(e)||(0,H.o)(e))return t.encoding===gr.KTX2_ENCODING?function(e,t){if((0,x.a)(or))return e.byteLength;const r=new or.KTX2File(new Uint8Array(e)),i=cr(r)?sr(r.getLevels(),r.getHasAlpha(),r.getWidth(),r.getHeight(),t):0;return r.close(),r.delete(),i}(e,t.mipmap):t.encoding===gr.BASIS_ENCODING?function(e,t){if((0,x.a)(or))return e.byteLength;const r=new or.BasisFile(new Uint8Array(e)),i=lr(r)?sr(r.getNumLevels(0),r.getHasAlpha(),r.getImageWidth(0,0),r.getImageHeight(0,0),t):0;return r.close(),r.delete(),i}(e,t.mipmap):e.byteLength;const{width:r,height:i}=e instanceof Image||e instanceof ImageData||e instanceof HTMLCanvasElement||e instanceof HTMLVideoElement?gr._getDataDimensions(e):t;return(t.mipmap?4/3:1)*r*i*(t.components||4)||0}dispose(){this.data=void 0}get width(){return this.params.width}get height(){return this.params.height}_createDescriptor(e){return{target:me.T.TEXTURE_2D,pixelFormat:me.a.RGBA,dataType:me.b.UNSIGNED_BYTE,wrapMode:this.params.wrap,flipped:!this.params.noUnpackFlip,samplingMode:this.params.mipmap?me.c.LINEAR_MIPMAP_LINEAR:me.c.LINEAR,hasMipmap:this.params.mipmap,preMultiplyAlpha:this.params.preMultiplyAlpha,maxAnisotropy:this.params.maxAnisotropy??(this.params.mipmap?e.parameters.maxMaxAnisotropy:1)}}get glTexture(){return this._glTexture}load(e,t){if((0,x.i)(this._glTexture))return this._glTexture;if((0,x.i)(this._loadingPromise))return this._loadingPromise;const r=this.data;return(0,x.a)(r)?(this._glTexture=new fe.T(e,this._createDescriptor(e),null),this._glTexture):"string"==typeof r?this._loadFromURL(e,t,r):r instanceof Image?this._loadFromImageElement(e,t,r):r instanceof HTMLVideoElement?this._loadFromVideoElement(e,t,r):r instanceof ImageData||r instanceof HTMLCanvasElement?this._loadFromImage(e,r,t):((0,H.n)(r)||(0,H.o)(r))&&this.params.encoding===gr.DDS_ENCODING?(this.data=void 0,this._loadFromDDSData(e,r)):((0,H.n)(r)||(0,H.o)(r))&&this.params.encoding===gr.KTX2_ENCODING?(this.data=void 0,this._loadFromKTX2(e,r)):((0,H.n)(r)||(0,H.o)(r))&&this.params.encoding===gr.BASIS_ENCODING?(this.data=void 0,this._loadFromBasis(e,r)):(0,H.o)(r)?this._loadFromPixelData(e,r):(0,H.n)(r)?this._loadFromPixelData(e,new Uint8Array(r)):null}get requiresFrameUpdates(){return this.data instanceof HTMLVideoElement}frameUpdate(e,t,r){if(!(this.data instanceof HTMLVideoElement)||(0,x.a)(this._glTexture))return r;if(this.data.readyState<_r.HAVE_CURRENT_DATA||r===this.data.currentTime)return r;if((0,x.i)(this._powerOfTwoStretchInfo)){const{framebuffer:r,vao:i,sourceTexture:o}=this._powerOfTwoStretchInfo;o.setData(this.data),this._drawStretchedTexture(e,t,r,i,o,this._glTexture)}else{const{videoWidth:e,videoHeight:t}=this.data,{width:r,height:i}=this._glTexture.descriptor;e!==r||t!==i?this._glTexture.updateData(0,0,0,Math.min(e,r),Math.min(t,i),this.data):this._glTexture.setData(this.data)}return this._glTexture.descriptor.hasMipmap&&this._glTexture.generateMipmap(),this.params.updateCallback&&this.params.updateCallback(),this.data.currentTime}_loadFromDDSData(e,t){return this._glTexture=function(e,t,r){const{textureData:i,internalFormat:o,width:n,height:a}=function(e,t){const r=new Int32Array(e,0,31);if(542327876!==r[0])return ur.error("Invalid magic number in DDS header"),null;if(!(4&r[20]))return ur.error("Unsupported format, must contain a FourCC code"),null;const i=r[21];let o,n;switch(i){case mr:o=8,n=me.j.COMPRESSED_RGB_S3TC_DXT1_EXT;break;case fr:o=16,n=me.j.COMPRESSED_RGBA_S3TC_DXT3_EXT;break;case pr:o=16,n=me.j.COMPRESSED_RGBA_S3TC_DXT5_EXT;break;default:return ur.error("Unsupported FourCC code:",(a=i,String.fromCharCode(255&a,a>>8&255,a>>16&255,a>>24&255))),null}var a;let s=1,l=r[4],c=r[3];0==(3&l)&&0==(3&c)||(ur.warn("Rounding up compressed texture size to nearest multiple of 4."),l=l+3&-4,c=c+3&-4);const d=l,u=c;131072&r[2]&&!1!==t&&(s=Math.max(1,r[7])),1===s||(0,S.S)(l)&&(0,S.S)(c)||(ur.warn("Ignoring mipmaps of non power of two sized compressed texture."),s=1);let h,m,f=r[1]+4;const p=[];for(let t=0;t<s;++t)m=(l+3>>2)*(c+3>>2)*o,h=new Uint8Array(e,f,m),p.push(h),f+=m,l=Math.max(1,l>>1),c=Math.max(1,c>>1);return{textureData:{type:"compressed",levels:p},internalFormat:n,width:d,height:u}}(r,t.hasMipmap);return t.samplingMode=i.levels.length>1?me.c.LINEAR_MIPMAP_LINEAR:me.c.LINEAR,t.hasMipmap=i.levels.length>1,t.internalFormat=o,t.width=n,t.height=a,new fe.T(e,t,i)}(e,this._createDescriptor(e),t),this._glTexture}_loadFromKTX2(e,t){return this._loadAsync((()=>async function(e,t,r){(0,x.a)(or)&&(or=await ar());const i=new or.KTX2File(new Uint8Array(r));if(!cr(i))return null;i.startTranscoding();const o=dr(e,t,i.getLevels(),i.getHasAlpha(),i.getWidth(),i.getHeight(),((e,t)=>i.getImageTranscodedSizeInBytes(e,0,0,t)),((e,t,r)=>i.transcodeImage(r,e,0,0,t,0,-1,-1)));return i.close(),i.delete(),o}(e,this._createDescriptor(e),t).then((e=>(this._glTexture=e,e)))))}_loadFromBasis(e,t){return this._loadAsync((()=>async function(e,t,r){(0,x.a)(or)&&(or=await ar());const i=new or.BasisFile(new Uint8Array(r));if(!lr(i))return null;i.startTranscoding();const o=dr(e,t,i.getNumLevels(0),i.getHasAlpha(),i.getImageWidth(0,0),i.getImageHeight(0,0),((e,t)=>i.getImageTranscodedSizeInBytes(0,e,t)),((e,t,r)=>i.transcodeImage(r,0,e,t,0,0)));return i.close(),i.delete(),o}(e,this._createDescriptor(e),t).then((e=>(this._glTexture=e,e)))))}_loadFromPixelData(e,t){(0,U.a)(this.params.width>0&&this.params.height>0);const r=this._createDescriptor(e);return r.pixelFormat=1===this.params.components?me.a.LUMINANCE:3===this.params.components?me.a.RGB:me.a.RGBA,r.width=this.params.width,r.height=this.params.height,this._glTexture=new fe.T(e,r,t),this._glTexture}_loadFromURL(e,t,r){return this._loadAsync((async i=>{const o=await L(r,{signal:i});return(0,D.k_)(i),this._loadFromImage(e,o,t)}))}_loadFromImageElement(e,t,r){return r.complete?this._loadFromImage(e,r,t):this._loadAsync((async i=>{const o=await(0,y.l)(r,r.src,!1,i);return(0,D.k_)(i),this._loadFromImage(e,o,t)}))}_loadFromVideoElement(e,t,r){return r.readyState>=_r.HAVE_CURRENT_DATA?this._loadFromImage(e,r,t):this._loadFromVideoElementAsync(e,t,r)}_loadFromVideoElementAsync(e,t,r){return this._loadAsync((i=>new Promise(((o,n)=>{const a=()=>{r.removeEventListener("loadeddata",s),r.removeEventListener("error",l),(0,x.r)(c)},s=()=>{r.readyState>=_r.HAVE_CURRENT_DATA&&(a(),o(this._loadFromImage(e,r,t)))},l=e=>{a(),n(e||new N.Z("Failed to load video"))};r.addEventListener("loadeddata",s),r.addEventListener("error",l);const c=(0,D.fu)(i,(()=>l((0,D.zE)())))}))))}_loadFromImage(e,t,r){const i=gr._getDataDimensions(t);this.params.width=i.width,this.params.height=i.height;const o=this._createDescriptor(e);return o.pixelFormat=3===this.params.components?me.a.RGB:me.a.RGBA,!this._requiresPowerOfTwo(e,o)||(0,S.S)(i.width)&&(0,S.S)(i.height)?(o.width=i.width,o.height=i.height,this._glTexture=new fe.T(e,o,t),this._glTexture):(this._glTexture=this._makePowerOfTwoTexture(e,t,i,o,r),this._glTexture)}_loadAsync(e){const t=new AbortController;this._loadingController=t;const r=e(t.signal);this._loadingPromise=r;const i=()=>{this._loadingController===t&&(this._loadingController=null),this._loadingPromise===r&&(this._loadingPromise=null)};return r.then(i,i),r}_requiresPowerOfTwo(e,t){const r=me.f.CLAMP_TO_EDGE,i="number"==typeof t.wrapMode?t.wrapMode===r:t.wrapMode.s===r&&t.wrapMode.t===r;return!(0,fe.i)(e.gl)&&(t.hasMipmap||!i)}_makePowerOfTwoTexture(e,t,r,i,o){const{width:n,height:a}=r,s=(0,S.I)(n),l=(0,S.I)(a);let c;switch(i.width=s,i.height=l,this.params.powerOfTwoResizeMode){case m.PAD:i.textureCoordinateScaleFactor=[n/s,a/l],c=new fe.T(e,i),c.updateData(0,0,0,n,a,t);break;case m.STRETCH:case null:case void 0:c=this._stretchToPowerOfTwo(e,t,i,o());break;default:(0,kt.n)(this.params.powerOfTwoResizeMode)}return i.hasMipmap&&c.generateMipmap(),c}_stretchToPowerOfTwo(e,t,r,i){const o=new fe.T(e,r),n=new Yt(e,{colorTarget:me.d.TEXTURE,depthStencilTarget:me.e.NONE},o),a=new fe.T(e,{target:me.T.TEXTURE_2D,pixelFormat:r.pixelFormat,dataType:me.b.UNSIGNED_BYTE,wrapMode:me.f.CLAMP_TO_EDGE,samplingMode:me.c.LINEAR,flipped:!!r.flipped,maxAnisotropy:8,preMultiplyAlpha:r.preMultiplyAlpha},t),s=function(e,t=zt,r=Y,i=-1,o=1){let n=null;return n=t===Ht?new Float32Array([i,i,0,0,o,i,1,0,i,o,0,1,o,o,1,1]):new Float32Array([i,i,o,i,i,o,o,o]),new Oe(e,r,{geometry:t},{geometry:Se.createVertex(e,me.U.STATIC_DRAW,n)})}(e),l=e.getBoundFramebufferObject();return this._drawStretchedTexture(e,i,n,s,a,o),this.requiresFrameUpdates?this._powerOfTwoStretchInfo={vao:s,sourceTexture:a,framebuffer:n}:(s.dispose(!0),a.dispose(),n.detachColorTexture(),n.dispose()),e.bindFramebuffer(l),o}_drawStretchedTexture(e,t,r,i,o,n){e.bindFramebuffer(r);const a=e.getViewport();e.setViewport(0,0,n.descriptor.width,n.descriptor.height);const s=e.bindTechnique(t);s.setUniform4f("uColor",1,1,1,1),s.bindTexture("tex",o),e.bindVAO(i),e.drawArrays(me.P.TRIANGLE_STRIP,0,function(e,t){return e.vertexBuffers[t].size/e.layout[t][0].stride}(i,"geometry")),e.bindFramebuffer(null),e.setViewport(a.x,a.y,a.width,a.height)}unload(){if((0,x.i)(this._powerOfTwoStretchInfo)){const{framebuffer:e,vao:t,sourceTexture:r}=this._powerOfTwoStretchInfo;t.dispose(!0),r.dispose(),e.dispose(),this._glTexture=null,this._powerOfTwoStretchInfo=null}if((0,x.i)(this._glTexture)&&(this._glTexture.dispose(),this._glTexture=null),(0,x.i)(this._loadingController)){const e=this._loadingController;this._loadingController=null,this._loadingPromise=null,e.abort()}this.events.emit("unloaded")}}var _r;gr.DDS_ENCODING="image/vnd-ms.dds",gr.KTX2_ENCODING="image/ktx2",gr.BASIS_ENCODING="image/x.basis",function(e){e[e.HAVE_NOTHING=0]="HAVE_NOTHING",e[e.HAVE_METADATA=1]="HAVE_METADATA",e[e.HAVE_CURRENT_DATA=2]="HAVE_CURRENT_DATA",e[e.HAVE_FUTURE_DATA=3]="HAVE_FUTURE_DATA",e[e.HAVE_ENOUGH_DATA=4]="HAVE_ENOUGH_DATA"}(_r||(_r={}));var vr,xr,Tr=r(15215),br=r(56697);class Ar extends je{constructor(e,t,r){super(e,"vec4",Fe.Pass,((r,i,o)=>r.setUniform4fv(e,t(i,o))),r)}}class Er extends je{constructor(e,t,r){super(e,"float",Fe.Pass,((r,i,o)=>r.setUniform1fv(e,t(i,o))),r)}}function Sr(e){e.vertex.code.add(j`const float PI = 3.141592653589793;`),e.fragment.code.add(j`const float PI = 3.141592653589793;
const float LIGHT_NORMALIZATION = 1.0 / PI;
const float INV_PI = 0.3183098861837907;
const float HALF_PI = 1.570796326794897;`)}function Rr(e){const t=j`vec3 decodeNormal(vec2 f) {
float z = 1.0 - abs(f.x) - abs(f.y);
return vec3(f + sign(f) * min(z, 0.0), z);
}`;e.fragment.code.add(t),e.vertex.code.add(t)}function Mr(e,t){t.normalType===vr.Attribute&&(e.attributes.add(z.V.NORMAL,"vec3"),e.vertex.code.add(j`vec3 normalModel() {
return normal;
}`)),t.normalType===vr.CompressedAttribute&&(e.include(Rr),e.attributes.add(z.V.NORMALCOMPRESSED,"vec2"),e.vertex.code.add(j`vec3 normalModel() {
return decodeNormal(normalCompressed);
}`)),t.normalType===vr.ScreenDerivative&&(e.extensions.add("GL_OES_standard_derivatives"),e.fragment.code.add(j`vec3 screenDerivativeNormal(vec3 positionView) {
return normalize(cross(dFdx(positionView), dFdy(positionView)));
}`))}function wr(e){e.attributes.add(z.V.POSITION,"vec3"),e.vertex.code.add(j`vec3 positionModel() { return position; }`)}function Cr({code:e},t){t.doublePrecisionRequiresObfuscation?e.add(j`vec3 dpPlusFrc(vec3 a, vec3 b) {
return mix(a, a + b, vec3(notEqual(b, vec3(0))));
}
vec3 dpMinusFrc(vec3 a, vec3 b) {
return mix(vec3(0), a - b, vec3(notEqual(a, b)));
}
vec3 dpAdd(vec3 hiA, vec3 loA, vec3 hiB, vec3 loB) {
vec3 t1 = dpPlusFrc(hiA, hiB);
vec3 e = dpMinusFrc(t1, hiA);
vec3 t2 = dpMinusFrc(hiB, e) + dpMinusFrc(hiA, dpMinusFrc(t1, e)) + loA + loB;
return t1 + t2;
}`):e.add(j`vec3 dpAdd(vec3 hiA, vec3 loA, vec3 hiB, vec3 loB) {
vec3 t1 = hiA + hiB;
vec3 e = t1 - hiA;
vec3 t2 = ((hiB - e) + (hiA - (t1 - e))) + loA + loB;
return t1 + t2;
}`)}(0,S.h)(),(0,S.h)(),function(e){e[e.Attribute=0]="Attribute",e[e.CompressedAttribute=1]="CompressedAttribute",e[e.Ground=2]="Ground",e[e.ScreenDerivative=3]="ScreenDerivative",e[e.COUNT=4]="COUNT"}(vr||(vr={}));class yr extends je{constructor(e,t){super(e,"mat3",Fe.Draw,((r,i,o)=>r.setUniformMatrix3fv(e,t(i,o))))}}class Or extends je{constructor(e,t){super(e,"mat3",Fe.Pass,((r,i,o)=>r.setUniformMatrix3fv(e,t(i,o))))}}function Nr(e,t){e.include(wr);const r=e.vertex;r.include(Cr,t),e.varyings.add("vPositionWorldCameraRelative","vec3"),e.varyings.add("vPosition_view","vec3"),r.uniforms.add([new Ke("transformWorldFromViewTH",(e=>e.transformWorldFromViewTH)),new Ke("transformWorldFromViewTL",(e=>e.transformWorldFromViewTL)),new Or("transformViewFromCameraRelativeRS",(e=>e.transformViewFromCameraRelativeRS)),new bt("transformProjFromView",(e=>e.transformProjFromView)),new yr("transformWorldFromModelRS",(e=>e.transformWorldFromModelRS)),new Ye("transformWorldFromModelTH",(e=>e.transformWorldFromModelTH)),new Ye("transformWorldFromModelTL",(e=>e.transformWorldFromModelTL))]),r.code.add(j`vec3 positionWorldCameraRelative() {
vec3 rotatedModelPosition = transformWorldFromModelRS * positionModel();
vec3 transform_CameraRelativeFromModel = dpAdd(
transformWorldFromModelTL,
transformWorldFromModelTH,
-transformWorldFromViewTL,
-transformWorldFromViewTH
);
return transform_CameraRelativeFromModel + rotatedModelPosition;
}`),r.code.add(j`
    void forwardPosition(float fOffset) {
      vPositionWorldCameraRelative = positionWorldCameraRelative();
      if (fOffset != 0.0) {
        vPositionWorldCameraRelative += fOffset * ${t.spherical?j`normalize(transformWorldFromViewTL + vPositionWorldCameraRelative)`:j`vec3(0.0, 0.0, 1.0)`};
      }

      vPosition_view = transformViewFromCameraRelativeRS * vPositionWorldCameraRelative;
      gl_Position = transformProjFromView * vec4(vPosition_view, 1.0);
    }
  `),e.fragment.uniforms.add(new Ke("transformWorldFromViewTL",(e=>e.transformWorldFromViewTL))),r.code.add(j`vec3 positionWorld() {
return transformWorldFromViewTL + vPositionWorldCameraRelative;
}`),e.fragment.code.add(j`vec3 positionWorld() {
return transformWorldFromViewTL + vPositionWorldCameraRelative;
}`)}class Pr extends X{constructor(){super(...arguments),this.transformWorldFromViewTH=(0,S.h)(),this.transformWorldFromViewTL=(0,S.h)(),this.transformViewFromCameraRelativeRS=(0,b.b)(),this.transformProjFromView=(0,E.c)()}}class Dr extends X{constructor(){super(...arguments),this.transformWorldFromModelRS=(0,b.b)(),this.transformWorldFromModelTH=(0,br.c)(),this.transformWorldFromModelTL=(0,br.c)()}}function Ir(e,t){t.normalType===vr.Attribute||t.normalType===vr.CompressedAttribute?(e.include(Mr,t),e.varyings.add("vNormalWorld","vec3"),e.varyings.add("vNormalView","vec3"),e.vertex.uniforms.add([new yr("transformNormalGlobalFromModel",(e=>e.transformNormalGlobalFromModel)),new Or("transformNormalViewFromGlobal",(e=>e.transformNormalViewFromGlobal))]),e.vertex.code.add(j`void forwardNormal() {
vNormalWorld = transformNormalGlobalFromModel * normalModel();
vNormalView = transformNormalViewFromGlobal * vNormalWorld;
}`)):t.normalType===vr.Ground?(e.include(Nr,t),e.varyings.add("vNormalWorld","vec3"),e.vertex.code.add(j`
    void forwardNormal() {
      vNormalWorld = ${t.spherical?j`normalize(vPositionWorldCameraRelative);`:j`vec3(0.0, 0.0, 1.0);`}
    }
    `)):e.vertex.code.add(j`void forwardNormal() {}`)}class Lr extends Pr{constructor(){super(...arguments),this.transformNormalViewFromGlobal=(0,b.b)()}}class Fr extends Dr{constructor(){super(...arguments),this.transformNormalGlobalFromModel=(0,b.b)(),this.toMapSpace=(0,pe.c)()}}function Br(e,t){switch(t.textureCoordinateType){case xr.Default:return e.attributes.add(z.V.UV0,"vec2"),e.varyings.add("vuv0","vec2"),void e.vertex.code.add(j`void forwardTextureCoordinates() {
vuv0 = uv0;
}`);case xr.Atlas:return e.attributes.add(z.V.UV0,"vec2"),e.varyings.add("vuv0","vec2"),e.attributes.add(z.V.UVREGION,"vec4"),e.varyings.add("vuvRegion","vec4"),void e.vertex.code.add(j`void forwardTextureCoordinates() {
vuv0 = uv0;
vuvRegion = uvRegion;
}`);case xr.None:return void e.vertex.code.add(j`void forwardTextureCoordinates() {}`);default:(0,kt.n)(t.textureCoordinateType);case xr.COUNT:return}}function Vr(e){e.extensions.add("GL_EXT_shader_texture_lod"),e.extensions.add("GL_OES_standard_derivatives"),e.fragment.code.add(j`#ifndef GL_EXT_shader_texture_lod
float calcMipMapLevel(const vec2 ddx, const vec2 ddy) {
float deltaMaxSqr = max(dot(ddx, ddx), dot(ddy, ddy));
return max(0.0, 0.5 * log2(deltaMaxSqr));
}
#endif
vec4 textureAtlasLookup(sampler2D texture, vec2 textureSize, vec2 textureCoordinates, vec4 atlasRegion) {
vec2 atlasScale = atlasRegion.zw - atlasRegion.xy;
vec2 uvAtlas = fract(textureCoordinates) * atlasScale + atlasRegion.xy;
float maxdUV = 0.125;
vec2 dUVdx = clamp(dFdx(textureCoordinates), -maxdUV, maxdUV) * atlasScale;
vec2 dUVdy = clamp(dFdy(textureCoordinates), -maxdUV, maxdUV) * atlasScale;
#ifdef GL_EXT_shader_texture_lod
return texture2DGradEXT(texture, uvAtlas, dUVdx, dUVdy);
#else
vec2 dUVdxAuto = dFdx(uvAtlas);
vec2 dUVdyAuto = dFdy(uvAtlas);
float mipMapLevel = calcMipMapLevel(dUVdx * textureSize, dUVdy * textureSize);
float autoMipMapLevel = calcMipMapLevel(dUVdxAuto * textureSize, dUVdyAuto * textureSize);
return texture2D(texture, uvAtlas, mipMapLevel - autoMipMapLevel);
#endif
}`)}function Ur(e,t){switch(e.include(Br,t),e.fragment.code.add(j`
  struct TextureLookupParameter {
    vec2 uv;
    ${t.supportsTextureAtlas?"vec2 size;":""}
  } vtc;
  `),t.textureCoordinateType){case xr.Default:return void e.fragment.code.add(j`vec4 textureLookup(sampler2D texture, TextureLookupParameter params) {
return texture2D(texture, params.uv);
}`);case xr.Atlas:return e.include(Vr),void e.fragment.code.add(j`vec4 textureLookup(sampler2D texture, TextureLookupParameter params) {
return textureAtlasLookup(texture, params.size, params.uv, vuvRegion);
}`);default:(0,kt.n)(t.textureCoordinateType);case xr.None:case xr.COUNT:return}}!function(e){e[e.None=0]="None",e[e.Default=1]="Default",e[e.Atlas=2]="Atlas",e[e.COUNT=3]="COUNT"}(xr||(xr={}));class Gr extends je{constructor(e,t){super(e,"vec2",Fe.Draw,((r,i,o)=>r.setUniform2fv(e,t(i,o))))}}class zr extends je{constructor(e,t){super(e,"sampler2D",Fe.Draw,((r,i,o)=>r.bindTexture(e,t(i,o))))}}function Hr(e,t,r){const i=[new zr(e,t)];if(r){const r=e+"Size";i.push(new Gr(r,((e,r)=>{const i=t(e,r);return(0,x.i)(i)?(0,ge.a)(kr,i.descriptor.width,i.descriptor.height):_e.Z})))}return i}const kr=(0,_e.a)();var Wr;function $r(e,t){const r=e.fragment,i=t.hasMetalnessAndRoughnessTexture||t.hasEmissionTexture||t.hasOcclusionTexture;if(t.pbrMode===Wr.Normal&&i&&e.include(Ur,t),t.pbrMode!==Wr.Schematic)if(t.pbrMode!==Wr.Disabled){if(t.pbrMode===Wr.Normal){r.code.add(j`vec3 mrr;
vec3 emission;
float occlusion;`);const e=t.supportsTextureAtlas,o=t.pbrTextureBindType;t.hasMetalnessAndRoughnessTexture&&(r.uniforms.add(o===Fe.Pass?ut("texMetallicRoughness",(e=>e.textureMetallicRoughness),e):Hr("texMetallicRoughness",(e=>e.textureMetallicRoughness),e)),r.code.add(j`void applyMetallnessAndRoughness(TextureLookupParameter params) {
vec3 metallicRoughness = textureLookup(texMetallicRoughness, params).rgb;
mrr[0] *= metallicRoughness.b;
mrr[1] *= metallicRoughness.g;
}`)),t.hasEmissionTexture&&(r.uniforms.add(o===Fe.Pass?ut("texEmission",(e=>e.textureEmissive),e):Hr("texEmission",(e=>e.textureEmissive),e)),r.code.add(j`void applyEmission(TextureLookupParameter params) {
emission *= textureLookup(texEmission, params).rgb;
}`)),t.hasOcclusionTexture?(r.uniforms.add(o===Fe.Pass?ut("texOcclusion",(e=>e.textureOcclusion),e):Hr("texOcclusion",(e=>e.textureOcclusion),e)),r.code.add(j`void applyOcclusion(TextureLookupParameter params) {
occlusion *= textureLookup(texOcclusion, params).r;
}
float getBakedOcclusion() {
return occlusion;
}`)):r.code.add(j`float getBakedOcclusion() { return 1.0; }`),r.uniforms.add(o===Fe.Pass?[new Ke("emissionFactor",(e=>e.emissiveFactor)),new Ke("mrrFactors",(e=>e.mrrFactors))]:[new Ye("emissionFactor",(e=>e.emissiveFactor)),new Ye("mrrFactors",(e=>e.mrrFactors))]),r.code.add(j`
    void applyPBRFactors() {
      mrr = mrrFactors;
      emission = emissionFactor;
      occlusion = 1.0;
      ${i?"vtc.uv = vuv0;":""}
      ${t.hasMetalnessAndRoughnessTexture?t.supportsTextureAtlas?"vtc.size = texMetallicRoughnessSize; applyMetallnessAndRoughness(vtc);":"applyMetallnessAndRoughness(vtc);":""}
      ${t.hasEmissionTexture?t.supportsTextureAtlas?"vtc.size = texEmissionSize; applyEmission(vtc);":"applyEmission(vtc);":""}
      ${t.hasOcclusionTexture?t.supportsTextureAtlas?"vtc.size = texOcclusionSize; applyOcclusion(vtc);":"applyOcclusion(vtc);":""}
    }
  `)}}else r.code.add(j`float getBakedOcclusion() { return 1.0; }`);else r.code.add(j`vec3 mrr = vec3(0.0, 0.6, 0.2);
vec3 emission = vec3(0.0);
float occlusion = 1.0;
void applyPBRFactors() {}
float getBakedOcclusion() { return 1.0; }`)}function qr(e,t){t.output===Le.Color&&t.receiveShadows?(e.varyings.add("linearDepth","float"),e.vertex.code.add(j`void forwardLinearDepth() { linearDepth = gl_Position.w; }`)):t.output===Le.Depth||t.output===Le.Shadow?(e.include(Nr,t),e.varyings.add("linearDepth","float"),e.vertex.uniforms.add(new ct("nearFar",((e,t)=>t.camera.nearFar))),e.vertex.code.add(j`void forwardLinearDepth() {
linearDepth = (-vPosition_view.z - nearFar[0]) / (nearFar[1] - nearFar[0]);
}`)):e.vertex.code.add(j`void forwardLinearDepth() {}`)}function Xr(e,t){const r=e.fragment,i=void 0!==t.lightingSphericalHarmonicsOrder?t.lightingSphericalHarmonicsOrder:2;0===i?(r.uniforms.add(new Ke("lightingAmbientSH0",((e,t)=>(0,S.s)(jr,t.lighting.sh.r[0],t.lighting.sh.g[0],t.lighting.sh.b[0])))),r.code.add(j`vec3 calculateAmbientIrradiance(vec3 normal, float ambientOcclusion) {
vec3 ambientLight = 0.282095 * lightingAmbientSH0;
return ambientLight * (1.0 - ambientOcclusion);
}`)):1===i?(r.uniforms.add([new Mt("lightingAmbientSH_R",((e,t)=>(0,S.J)(Yr,t.lighting.sh.r[0],t.lighting.sh.r[1],t.lighting.sh.r[2],t.lighting.sh.r[3]))),new Mt("lightingAmbientSH_G",((e,t)=>(0,S.J)(Yr,t.lighting.sh.g[0],t.lighting.sh.g[1],t.lighting.sh.g[2],t.lighting.sh.g[3]))),new Mt("lightingAmbientSH_B",((e,t)=>(0,S.J)(Yr,t.lighting.sh.b[0],t.lighting.sh.b[1],t.lighting.sh.b[2],t.lighting.sh.b[3])))]),r.code.add(j`vec3 calculateAmbientIrradiance(vec3 normal, float ambientOcclusion) {
vec4 sh0 = vec4(
0.282095,
0.488603 * normal.x,
0.488603 * normal.z,
0.488603 * normal.y
);
vec3 ambientLight = vec3(
dot(lightingAmbientSH_R, sh0),
dot(lightingAmbientSH_G, sh0),
dot(lightingAmbientSH_B, sh0)
);
return ambientLight * (1.0 - ambientOcclusion);
}`)):2===i&&(r.uniforms.add([new Ke("lightingAmbientSH0",((e,t)=>(0,S.s)(jr,t.lighting.sh.r[0],t.lighting.sh.g[0],t.lighting.sh.b[0]))),new Mt("lightingAmbientSH_R1",((e,t)=>(0,S.J)(Yr,t.lighting.sh.r[1],t.lighting.sh.r[2],t.lighting.sh.r[3],t.lighting.sh.r[4]))),new Mt("lightingAmbientSH_G1",((e,t)=>(0,S.J)(Yr,t.lighting.sh.g[1],t.lighting.sh.g[2],t.lighting.sh.g[3],t.lighting.sh.g[4]))),new Mt("lightingAmbientSH_B1",((e,t)=>(0,S.J)(Yr,t.lighting.sh.b[1],t.lighting.sh.b[2],t.lighting.sh.b[3],t.lighting.sh.b[4]))),new Mt("lightingAmbientSH_R2",((e,t)=>(0,S.J)(Yr,t.lighting.sh.r[5],t.lighting.sh.r[6],t.lighting.sh.r[7],t.lighting.sh.r[8]))),new Mt("lightingAmbientSH_G2",((e,t)=>(0,S.J)(Yr,t.lighting.sh.g[5],t.lighting.sh.g[6],t.lighting.sh.g[7],t.lighting.sh.g[8]))),new Mt("lightingAmbientSH_B2",((e,t)=>(0,S.J)(Yr,t.lighting.sh.b[5],t.lighting.sh.b[6],t.lighting.sh.b[7],t.lighting.sh.b[8])))]),r.code.add(j`vec3 calculateAmbientIrradiance(vec3 normal, float ambientOcclusion) {
vec3 ambientLight = 0.282095 * lightingAmbientSH0;
vec4 sh1 = vec4(
0.488603 * normal.x,
0.488603 * normal.z,
0.488603 * normal.y,
1.092548 * normal.x * normal.y
);
vec4 sh2 = vec4(
1.092548 * normal.y * normal.z,
0.315392 * (3.0 * normal.z * normal.z - 1.0),
1.092548 * normal.x * normal.z,
0.546274 * (normal.x * normal.x - normal.y * normal.y)
);
ambientLight += vec3(
dot(lightingAmbientSH_R1, sh1),
dot(lightingAmbientSH_G1, sh1),
dot(lightingAmbientSH_B1, sh1)
);
ambientLight += vec3(
dot(lightingAmbientSH_R2, sh2),
dot(lightingAmbientSH_G2, sh2),
dot(lightingAmbientSH_B2, sh2)
);
return ambientLight * (1.0 - ambientOcclusion);
}`),t.pbrMode!==Wr.Normal&&t.pbrMode!==Wr.Schematic||r.code.add(j`const vec3 skyTransmittance = vec3(0.9, 0.9, 1.0);
vec3 calculateAmbientRadiance(float ambientOcclusion)
{
vec3 ambientLight = 1.2 * (0.282095 * lightingAmbientSH0) - 0.2;
return ambientLight *= (1.0 - ambientOcclusion) * skyTransmittance;
}`))}(0,br.f)(0,.6,.2),function(e){e[e.Disabled=0]="Disabled",e[e.Normal=1]="Normal",e[e.Schematic=2]="Schematic",e[e.Water=3]="Water",e[e.WaterOnIntegratedMesh=4]="WaterOnIntegratedMesh",e[e.COUNT=5]="COUNT"}(Wr||(Wr={}));const jr=(0,S.h)(),Yr=(0,pe.c)();function Kr(e,t){const r=e.fragment;t.isGround?r.uniforms.add(new Gt("lightingFixedFactor",((e,t)=>(1-t.lighting.groundLightingFactor)*(1-t.lighting.globalFactor)))):r.constants.add("lightingFixedFactor","float",0),r.uniforms.add([new Ke("lightingMainDirection",((e,t)=>t.lighting.lightingMainDirection)),new Ke("lightingMainIntensity",((e,t)=>t.lighting.mainLight.intensity))]),r.code.add(j`vec3 evaluateMainLighting(vec3 normal_global, float shadowing) {
float dotVal = clamp(dot(normal_global, lightingMainDirection), 0.0, 1.0);
dotVal = mix(dotVal, 1.0, lightingFixedFactor);
return lightingMainIntensity * ((1.0 - shadowing) * dotVal);
}`)}class Zr extends je{constructor(e,t){super(e,"int",Fe.Pass,((r,i,o)=>r.setUniform1i(e,t(i,o))))}}class Qr extends je{constructor(e,t,r,i){switch(t){case Fe.Pass:case Fe.Draw:return void super(e,"mat4",t,((t,i,o)=>t.setUniformMatrix4fv(e,r(i,o))),i)}}}function Jr(e,t){t.receiveShadows&&(e.fragment.uniforms.add(new Qr("shadowMapMatrix",Fe.Pass,((e,t)=>t.shadowMap.getShadowMapMatrices(e.origin)),4)),ti(e))}function ei(e,t){t.receiveShadows&&(e.fragment.uniforms.add(new Qr("shadowMapMatrix",Fe.Draw,((e,t)=>t.shadowMap.getShadowMapMatrices(e.origin)),4)),ti(e))}function ti(e){const t=e.fragment;t.include(st),t.uniforms.add([new dt("shadowMapTex",((e,t)=>t.shadowMap.depthTexture)),new Zr("numCascades",((e,t)=>t.shadowMap.numCascades)),new Mt("cascadeDistances",((e,t)=>t.shadowMap.cascadeDistances)),new Gt("depthHalfPixelSz",((e,t)=>.5/t.shadowMap.textureSize))]),t.code.add(j`int chooseCascade(float depth, out mat4 mat) {
vec4 distance = cascadeDistances;
int i = depth < distance[1] ? 0 : depth < distance[2] ? 1 : depth < distance[3] ? 2 : 3;
mat = i == 0 ? shadowMapMatrix[0] : i == 1 ? shadowMapMatrix[1] : i == 2 ? shadowMapMatrix[2] : shadowMapMatrix[3];
return i;
}
vec3 lightSpacePosition(vec3 _vpos, mat4 mat) {
vec4 lv = mat * vec4(_vpos, 1.0);
lv.xy /= lv.w;
return 0.5 * lv.xyz + vec3(0.5);
}
vec2 cascadeCoordinates(int i, vec3 lvpos) {
return vec2(float(i - 2 * (i / 2)) * 0.5, float(i / 2) * 0.5) + 0.5 * lvpos.xy;
}
float readShadowMapDepth(vec2 uv, sampler2D _depthTex) {
return rgba2float(texture2D(_depthTex, uv));
}
float posIsInShadow(vec2 uv, vec3 lvpos, sampler2D _depthTex) {
return readShadowMapDepth(uv, _depthTex) < lvpos.z ? 1.0 : 0.0;
}
float filterShadow(vec2 uv, vec3 lvpos, float halfPixelSize, sampler2D _depthTex) {
float texSize = 0.5 / halfPixelSize;
vec2 st = fract((vec2(halfPixelSize) + uv) * texSize);
float s00 = posIsInShadow(uv + vec2(-halfPixelSize, -halfPixelSize), lvpos, _depthTex);
float s10 = posIsInShadow(uv + vec2(halfPixelSize, -halfPixelSize), lvpos, _depthTex);
float s11 = posIsInShadow(uv + vec2(halfPixelSize, halfPixelSize), lvpos, _depthTex);
float s01 = posIsInShadow(uv + vec2(-halfPixelSize, halfPixelSize), lvpos, _depthTex);
return mix(mix(s00, s10, st.x), mix(s01, s11, st.x), st.y);
}
float readShadowMap(const in vec3 _vpos, float _linearDepth) {
mat4 mat;
int i = chooseCascade(_linearDepth, mat);
if (i >= numCascades) { return 0.0; }
vec3 lvpos = lightSpacePosition(_vpos, mat);
if (lvpos.z >= 1.0) { return 0.0; }
if (lvpos.x < 0.0 || lvpos.x > 1.0 || lvpos.y < 0.0 || lvpos.y > 1.0) { return 0.0; }
vec2 uv = cascadeCoordinates(i, lvpos);
return filterShadow(uv, lvpos, depthHalfPixelSz, shadowMapTex);
}`)}function ri(e){const t=e.fragment.code;t.add(j`vec3 evaluateDiffuseIlluminationHemisphere(vec3 ambientGround, vec3 ambientSky, float NdotNG)
{
return ((1.0 - NdotNG) * ambientGround + (1.0 + NdotNG) * ambientSky) * 0.5;
}`),t.add(j`float integratedRadiance(float cosTheta2, float roughness)
{
return (cosTheta2 - 1.0) / (cosTheta2 * (1.0 - roughness * roughness) - 1.0);
}`),t.add(j`vec3 evaluateSpecularIlluminationHemisphere(vec3 ambientGround, vec3 ambientSky, float RdotNG, float roughness)
{
float cosTheta2 = 1.0 - RdotNG * RdotNG;
float intRadTheta = integratedRadiance(cosTheta2, roughness);
float ground = RdotNG < 0.0 ? 1.0 - intRadTheta : 1.0 + intRadTheta;
float sky = 2.0 - ground;
return (ground * ambientGround + sky * ambientSky) * 0.5;
}`)}function ii(e,t){const r=e.fragment.code;e.include(Sr),t.pbrMode===Wr.Water||t.pbrMode===Wr.WaterOnIntegratedMesh?(r.add(j`
    struct PBRShadingWater
    {
        float NdotL;   // cos angle between normal and light direction
        float NdotV;   // cos angle between normal and view direction
        float NdotH;   // cos angle between normal and half vector
        float VdotH;   // cos angle between view direction and half vector
        float LdotH;   // cos angle between light direction and half vector
        float VdotN;   // cos angle between view direction and normal vector
    };

    float dtrExponent = ${t.useCustomDTRExponentForWater?"2.2":"2.0"};
    `),r.add(j`vec3 fresnelReflection(float angle, vec3 f0, float f90) {
return f0 + (f90 - f0) * pow(1.0 - angle, 5.0);
}`),r.add(j`float normalDistributionWater(float NdotH, float roughness)
{
float r2 = roughness * roughness;
float NdotH2 = NdotH * NdotH;
float denom = pow((NdotH2 * (r2 - 1.0) + 1.0), dtrExponent) * PI;
return r2 / denom;
}`),r.add(j`float geometricOcclusionKelemen(float LoH)
{
return 0.25 / (LoH * LoH);
}`),r.add(j`vec3 brdfSpecularWater(in PBRShadingWater props, float roughness, vec3 F0, float F0Max)
{
vec3  F = fresnelReflection(props.VdotH, F0, F0Max);
float dSun = normalDistributionWater(props.NdotH, roughness);
float V = geometricOcclusionKelemen(props.LdotH);
float diffusionSunHaze = mix(roughness + 0.045, roughness + 0.385, 1.0 - props.VdotH);
float strengthSunHaze  = 1.2;
float dSunHaze = normalDistributionWater(props.NdotH, diffusionSunHaze)*strengthSunHaze;
return ((dSun + dSunHaze) * V) * F;
}
vec3 tonemapACES(const vec3 x) {
return (x * (2.51 * x + 0.03)) / (x * (2.43 * x + 0.59) + 0.14);
}`)):t.pbrMode!==Wr.Normal&&t.pbrMode!==Wr.Schematic||(e.include(ri),r.add(j`struct PBRShadingInfo
{
float NdotL;
float NdotV;
float NdotH;
float VdotH;
float LdotH;
float NdotNG;
float RdotNG;
float NdotAmbDir;
float NdotH_Horizon;
vec3 skyRadianceToSurface;
vec3 groundRadianceToSurface;
vec3 skyIrradianceToSurface;
vec3 groundIrradianceToSurface;
float averageAmbientRadiance;
float ssao;
vec3 albedoLinear;
vec3 f0;
vec3 f90;
vec3 diffuseColor;
float metalness;
float roughness;
};`),r.add(j`float normalDistribution(float NdotH, float roughness)
{
float a = NdotH * roughness;
float b = roughness / (1.0 - NdotH * NdotH + a * a);
return b * b * INV_PI;
}`),r.add(j`const vec4 c0 = vec4(-1.0, -0.0275, -0.572,  0.022);
const vec4 c1 = vec4( 1.0,  0.0425,  1.040, -0.040);
const vec2 c2 = vec2(-1.04, 1.04);
vec2 prefilteredDFGAnalytical(float roughness, float NdotV) {
vec4 r = roughness * c0 + c1;
float a004 = min(r.x * r.x, exp2(-9.28 * NdotV)) * r.x + r.y;
return c2 * a004 + r.zw;
}`),r.add(j`vec3 evaluateEnvironmentIllumination(PBRShadingInfo inputs) {
vec3 indirectDiffuse = evaluateDiffuseIlluminationHemisphere(inputs.groundIrradianceToSurface, inputs.skyIrradianceToSurface, inputs.NdotNG);
vec3 indirectSpecular = evaluateSpecularIlluminationHemisphere(inputs.groundRadianceToSurface, inputs.skyRadianceToSurface, inputs.RdotNG, inputs.roughness);
vec3 diffuseComponent = inputs.diffuseColor * indirectDiffuse * INV_PI;
vec2 dfg = prefilteredDFGAnalytical(inputs.roughness, inputs.NdotV);
vec3 specularColor = inputs.f0 * dfg.x + inputs.f90 * dfg.y;
vec3 specularComponent = specularColor * indirectSpecular;
return (diffuseComponent + specularComponent);
}`),r.add(j`float gamutMapChanel(float x, vec2 p){
return (x < p.x) ? mix(0.0, p.y, x/p.x) : mix(p.y, 1.0, (x - p.x) / (1.0 - p.x) );
}`),r.add(j`vec3 blackLevelSoftCompression(vec3 inColor, PBRShadingInfo inputs){
vec3 outColor;
vec2 p = vec2(0.02 * (inputs.averageAmbientRadiance), 0.0075 * (inputs.averageAmbientRadiance));
outColor.x = gamutMapChanel(inColor.x, p) ;
outColor.y = gamutMapChanel(inColor.y, p) ;
outColor.z = gamutMapChanel(inColor.z, p) ;
return outColor;
}`))}class oi extends je{constructor(e,t){super(e,"bool",Fe.Pass,((r,i,o)=>r.setUniform1b(e,t(i,o))))}}class ni extends je{constructor(e){super(e,"mat4")}}class ai extends X{constructor(e=null,t=null,r=null,i=null,o=null){super(),this.texture=e,this.textureNormal=t,this.textureEmissive=r,this.textureOcclusion=i,this.textureMetallicRoughness=o}}function si(e,t,r=me.i.ADD,i=[0,0,0,0]){return{srcRgb:e,srcAlpha:e,dstRgb:t,dstAlpha:t,opRgb:r,opAlpha:r,color:{r:i[0],g:i[1],b:i[2],a:i[3]}}}const li={face:me.F.BACK,mode:me.h.CCW},ci={face:me.F.FRONT,mode:me.h.CCW},di=e=>e===i.Back?li:e===i.Front?ci:null,ui={zNear:0,zFar:1},hi={r:!0,g:!0,b:!0,a:!0};function mi(e){return Ei.intern(e)}function fi(e){return Ri.intern(e)}function pi(e){return wi.intern(e)}function gi(e){return yi.intern(e)}function _i(e){return Ni.intern(e)}function vi(e){return Di.intern(e)}function xi(e){return Li.intern(e)}function Ti(e){return Bi.intern(e)}class bi{constructor(e,t){this.makeKey=e,this.makeRef=t,this.interns=new Map}intern(e){if(!e)return null;const t=this.makeKey(e),r=this.interns;return r.has(t)||r.set(t,this.makeRef(e)),r.get(t)}}function Ai(e){return"["+e.join(",")+"]"}const Ei=new bi(Si,(e=>({__tag:"Blending",...e})));function Si(e){return e?Ai([e.srcRgb,e.srcAlpha,e.dstRgb,e.dstAlpha,e.opRgb,e.opAlpha,e.color.r,e.color.g,e.color.b,e.color.a]):null}const Ri=new bi(Mi,(e=>({__tag:"Culling",...e})));function Mi(e){return e?Ai([e.face,e.mode]):null}const wi=new bi(Ci,(e=>({__tag:"PolygonOffset",...e})));function Ci(e){return e?Ai([e.factor,e.units]):null}const yi=new bi(Oi,(e=>({__tag:"DepthTest",...e})));function Oi(e){return e?Ai([e.func]):null}const Ni=new bi(Pi,(e=>({__tag:"StencilTest",...e})));function Pi(e){return e?Ai([e.function.func,e.function.ref,e.function.mask,e.operation.fail,e.operation.zFail,e.operation.zPass]):null}const Di=new bi(Ii,(e=>({__tag:"DepthWrite",...e})));function Ii(e){return e?Ai([e.zNear,e.zFar]):null}const Li=new bi(Fi,(e=>({__tag:"ColorWrite",...e})));function Fi(e){return e?Ai([e.r,e.g,e.b,e.a]):null}const Bi=new bi(Vi,(e=>({__tag:"StencilWrite",...e})));function Vi(e){return e?Ai([e.mask]):null}const Ui=new bi((function(e){return e?Ai([Si(e.blending),Mi(e.culling),Ci(e.polygonOffset),Oi(e.depthTest),Pi(e.stencilTest),Ii(e.depthWrite),Fi(e.colorWrite),Vi(e.stencilWrite)]):null}),(e=>({blending:mi(e.blending),culling:fi(e.culling),polygonOffset:pi(e.polygonOffset),depthTest:gi(e.depthTest),stencilTest:_i(e.stencilTest),depthWrite:vi(e.depthWrite),colorWrite:xi(e.colorWrite),stencilWrite:Ti(e.stencilWrite)}))),Gi=function(e,t,r,i,o=me.i.ADD,n=me.i.ADD,a=[0,0,0,0]){return{srcRgb:e,srcAlpha:t,dstRgb:r,dstAlpha:i,opRgb:o,opAlpha:n,color:{r:a[0],g:a[1],b:a[2],a:a[3]}}}(me.B.SRC_ALPHA,me.B.ONE,me.B.ONE_MINUS_SRC_ALPHA,me.B.ONE_MINUS_SRC_ALPHA),zi=si(me.B.ONE,me.B.ONE),Hi=si(me.B.ZERO,me.B.ONE_MINUS_SRC_ALPHA);function ki(e){return e===a.FrontFace?null:e===a.Alpha?Hi:zi}const Wi={factor:-1,units:-2};function $i(e){return e?Wi:null}function qi(e,t=me.C.LESS){return e===a.NONE||e===a.FrontFace?t:me.C.LEQUAL}var Xi,ji;!function(e){e[e.MATERIAL=0]="MATERIAL",e[e.MATERIAL_ALPHA=1]="MATERIAL_ALPHA",e[e.MATERIAL_DEPTH=2]="MATERIAL_DEPTH",e[e.MATERIAL_NORMAL=3]="MATERIAL_NORMAL",e[e.MATERIAL_DEPTH_SHADOWMAP_ALL=4]="MATERIAL_DEPTH_SHADOWMAP_ALL",e[e.MATERIAL_HIGHLIGHT=5]="MATERIAL_HIGHLIGHT",e[e.MATERIAL_DEPTH_SHADOWMAP_DEFAULT=6]="MATERIAL_DEPTH_SHADOWMAP_DEFAULT",e[e.MATERIAL_DEPTH_SHADOWMAP_HIGHLIGHT=7]="MATERIAL_DEPTH_SHADOWMAP_HIGHLIGHT"}(Xi||(Xi={})),function(e){e[e.INTEGRATED_MESH=0]="INTEGRATED_MESH",e[e.OPAQUE_TERRAIN=1]="OPAQUE_TERRAIN",e[e.OPAQUE_MATERIAL=2]="OPAQUE_MATERIAL",e[e.TRANSPARENT_MATERIAL=3]="TRANSPARENT_MATERIAL",e[e.TRANSPARENT_TERRAIN=4]="TRANSPARENT_TERRAIN",e[e.TRANSPARENT_DEPTH_WRITE_DISABLED_MATERIAL=5]="TRANSPARENT_DEPTH_WRITE_DISABLED_MATERIAL",e[e.OCCLUDED_TERRAIN=6]="OCCLUDED_TERRAIN",e[e.OCCLUDER_MATERIAL=7]="OCCLUDER_MATERIAL",e[e.TRANSPARENT_OCCLUDER_MATERIAL=8]="TRANSPARENT_OCCLUDER_MATERIAL",e[e.OCCLUSION_PIXELS=9]="OCCLUSION_PIXELS",e[e.POSTPROCESSING_ENVIRONMENT_OPAQUE=10]="POSTPROCESSING_ENVIRONMENT_OPAQUE",e[e.POSTPROCESSING_ENVIRONMENT_TRANSPARENT=11]="POSTPROCESSING_ENVIRONMENT_TRANSPARENT",e[e.LASERLINES=12]="LASERLINES",e[e.LASERLINES_CONTRAST_CONTROL=13]="LASERLINES_CONTRAST_CONTROL",e[e.HUD_MATERIAL=14]="HUD_MATERIAL",e[e.LABEL_MATERIAL=15]="LABEL_MATERIAL",e[e.LINE_CALLOUTS=16]="LINE_CALLOUTS",e[e.LINE_CALLOUTS_HUD_DEPTH=17]="LINE_CALLOUTS_HUD_DEPTH",e[e.DRAPED_MATERIAL=18]="DRAPED_MATERIAL",e[e.DRAPED_WATER=19]="DRAPED_WATER",e[e.VOXEL=20]="VOXEL",e[e.MAX_SLOTS=21]="MAX_SLOTS"}(ji||(ji={}));var Yi=r(35861),Ki=r(60939);const Zi=(0,S.h)(),Qi=(0,S.h)(),Ji=(0,S.h)(),eo=new class{constructor(e=0){this.offset=e,this.sphere=(0,Ki.c)(),this.tmpVertex=(0,S.h)()}applyToVertex(e,t,r){const i=this.objectTransform.transform;let o=i[0]*e+i[4]*t+i[8]*r+i[12],n=i[1]*e+i[5]*t+i[9]*r+i[13],a=i[2]*e+i[6]*t+i[10]*r+i[14];const s=this.offset/Math.sqrt(o*o+n*n+a*a);o+=o*s,n+=n*s,a+=a*s;const l=this.objectTransform.inverse;return this.tmpVertex[0]=l[0]*o+l[4]*n+l[8]*a+l[12],this.tmpVertex[1]=l[1]*o+l[5]*n+l[9]*a+l[13],this.tmpVertex[2]=l[2]*o+l[6]*n+l[10]*a+l[14],this.tmpVertex}applyToMinMax(e,t){const r=this.offset/Math.sqrt(e[0]*e[0]+e[1]*e[1]+e[2]*e[2]);e[0]+=e[0]*r,e[1]+=e[1]*r,e[2]+=e[2]*r;const i=this.offset/Math.sqrt(t[0]*t[0]+t[1]*t[1]+t[2]*t[2]);t[0]+=t[0]*i,t[1]+=t[1]*i,t[2]+=t[2]*i}applyToAabb(e){const t=this.offset/Math.sqrt(e[0]*e[0]+e[1]*e[1]+e[2]*e[2]);e[0]+=e[0]*t,e[1]+=e[1]*t,e[2]+=e[2]*t;const r=this.offset/Math.sqrt(e[3]*e[3]+e[4]*e[4]+e[5]*e[5]);return e[3]+=e[3]*r,e[4]+=e[4]*r,e[5]+=e[5]*r,e}applyToBoundingSphere(e){const t=Math.sqrt(e[0]*e[0]+e[1]*e[1]+e[2]*e[2]),r=this.offset/t;return this.sphere[0]=e[0]+e[0]*r,this.sphere[1]=e[1]+e[1]*r,this.sphere[2]=e[2]+e[2]*r,this.sphere[3]=e[3]+e[3]*this.offset/t,this.sphere}};new class{constructor(e=0){this.componentLocalOriginLength=0,this._tmpVertex=(0,S.h)(),this._mbs=(0,Ki.c)(),this._obb={center:(0,S.h)(),halfSize:(0,br.c)(),quaternion:null},this._totalOffset=0,this._offset=0,this._resetOffset(e)}_resetOffset(e){this._offset=e,this._totalOffset=e}set offset(e){this._resetOffset(e)}get offset(){return this._offset}set componentOffset(e){this._totalOffset=this._offset+e}set localOrigin(e){this.componentLocalOriginLength=Math.sqrt(e[0]*e[0]+e[1]*e[1]+e[2]*e[2])}applyToVertex(e,t,r){const i=e,o=t,n=r+this.componentLocalOriginLength,a=this._totalOffset/Math.sqrt(i*i+o*o+n*n);return this._tmpVertex[0]=e+i*a,this._tmpVertex[1]=t+o*a,this._tmpVertex[2]=r+n*a,this._tmpVertex}applyToAabb(e){const t=e[0],r=e[1],i=e[2]+this.componentLocalOriginLength,o=e[3],n=e[4],a=e[5]+this.componentLocalOriginLength,s=t*o<0?0:Math.min(Math.abs(t),Math.abs(o)),l=r*n<0?0:Math.min(Math.abs(r),Math.abs(n)),c=i*a<0?0:Math.min(Math.abs(i),Math.abs(a)),d=Math.sqrt(s*s+l*l+c*c);if(d<this._totalOffset)return e[0]-=t<0?this._totalOffset:0,e[1]-=r<0?this._totalOffset:0,e[2]-=i<0?this._totalOffset:0,e[3]+=o>0?this._totalOffset:0,e[4]+=n>0?this._totalOffset:0,e[5]+=a>0?this._totalOffset:0,e;const u=Math.max(Math.abs(t),Math.abs(o)),h=Math.max(Math.abs(r),Math.abs(n)),m=Math.max(Math.abs(i),Math.abs(a)),f=Math.sqrt(u*u+h*h+m*m),p=this._totalOffset/f,g=this._totalOffset/d;return e[0]+=t*(t>0?p:g),e[1]+=r*(r>0?p:g),e[2]+=i*(i>0?p:g),e[3]+=o*(o<0?p:g),e[4]+=n*(n<0?p:g),e[5]+=a*(a<0?p:g),e}applyToMbs(e){const t=Math.sqrt(e[0]*e[0]+e[1]*e[1]+e[2]*e[2]),r=this._totalOffset/t;return this._mbs[0]=e[0]+e[0]*r,this._mbs[1]=e[1]+e[1]*r,this._mbs[2]=e[2]+e[2]*r,this._mbs[3]=e[3]+e[3]*this._totalOffset/t,this._mbs}applyToObb(e){const t=e.center,r=this._totalOffset/Math.sqrt(t[0]*t[0]+t[1]*t[1]+t[2]*t[2]);this._obb.center[0]=t[0]+t[0]*r,this._obb.center[1]=t[1]+t[1]*r,this._obb.center[2]=t[2]+t[2]*r,(0,S.T)(this._obb.halfSize,e.halfSize,e.quaternion),(0,S.b)(this._obb.halfSize,this._obb.halfSize,e.center);const i=this._totalOffset/Math.sqrt(this._obb.halfSize[0]*this._obb.halfSize[0]+this._obb.halfSize[1]*this._obb.halfSize[1]+this._obb.halfSize[2]*this._obb.halfSize[2]);return this._obb.halfSize[0]+=this._obb.halfSize[0]*i,this._obb.halfSize[1]+=this._obb.halfSize[1]*i,this._obb.halfSize[2]+=this._obb.halfSize[2]*i,(0,S.d)(this._obb.halfSize,this._obb.halfSize,e.center),(0,Yi.c)(to,e.quaternion),(0,S.T)(this._obb.halfSize,this._obb.halfSize,to),this._obb.halfSize[0]*=this._obb.halfSize[0]<0?-1:1,this._obb.halfSize[1]*=this._obb.halfSize[1]<0?-1:1,this._obb.halfSize[2]*=this._obb.halfSize[2]<0?-1:1,this._obb.quaternion=e.quaternion,this._obb}},new class{constructor(e=0){this.offset=e,this.tmpVertex=(0,S.h)()}applyToVertex(e,t,r){const i=e+this.localOrigin[0],o=t+this.localOrigin[1],n=r+this.localOrigin[2],a=this.offset/Math.sqrt(i*i+o*o+n*n);return this.tmpVertex[0]=e+i*a,this.tmpVertex[1]=t+o*a,this.tmpVertex[2]=r+n*a,this.tmpVertex}applyToAabb(e){for(let t=0;t<3;++t)Zi[t]=e[0+t]+this.localOrigin[t],Qi[t]=e[3+t]+this.localOrigin[t],Ji[t]=Zi[t];const t=this.applyToVertex(Zi[0],Zi[1],Zi[2]);for(let r=0;r<3;++r)e[r]=t[r],e[r+3]=t[r];const r=t=>{const r=this.applyToVertex(t[0],t[1],t[2]);for(let t=0;t<3;++t)e[t+0]=Math.min(e[t+0],r[t]),e[t+3]=Math.max(e[t+3],r[t])};for(let e=1;e<8;++e){for(let t=0;t<3;++t)Ji[t]=0==(e&1<<t)?Zi[t]:Qi[t];r(Ji)}let i=0;for(let e=0;e<3;++e)Zi[e]*Qi[e]<0&&(i|=1<<e);if(0!==i&&7!==i)for(let e=0;e<8;++e)if(0==(i&e)){for(let t=0;t<3;++t)i[t]?Ji[t]=0:Ji[t]=0!=(e&1<<t)?Zi[t]:Qi[t];r(Ji)}for(let t=0;t<3;++t)e[t+0]-=this.localOrigin[t],e[t+3]-=this.localOrigin[t];return e}};const to=(0,b.d)();function ro(e,t){t.hasVertexColors?(e.attributes.add(z.V.COLOR,"vec4"),e.varyings.add("vColor","vec4"),e.vertex.code.add(j`void forwardVertexColor() { vColor = color; }`),e.vertex.code.add(j`void forwardNormalizedVertexColor() { vColor = color * 0.003921568627451; }`)):e.vertex.code.add(j`void forwardVertexColor() {}
void forwardNormalizedVertexColor() {}`)}function io(e){e.vertex.code.add(j`float screenSizePerspectiveMinSize(float size, vec4 factor) {
float nonZeroSize = 1.0 - step(size, 0.0);
return (
factor.z * (
1.0 +
nonZeroSize *
2.0 * factor.w / (
size + (1.0 - nonZeroSize)
)
)
);
}`),e.vertex.code.add(j`float screenSizePerspectiveViewAngleDependentFactor(float absCosAngle) {
return absCosAngle * absCosAngle * absCosAngle;
}`),e.vertex.code.add(j`vec4 screenSizePerspectiveScaleFactor(float absCosAngle, float distanceToCamera, vec4 params) {
return vec4(
min(params.x / (distanceToCamera - params.y), 1.0),
screenSizePerspectiveViewAngleDependentFactor(absCosAngle),
params.z,
params.w
);
}`),e.vertex.code.add(j`float applyScreenSizePerspectiveScaleFactorFloat(float size, vec4 factor) {
return max(mix(size * factor.x, size, factor.y), screenSizePerspectiveMinSize(size, factor));
}`),e.vertex.code.add(j`float screenSizePerspectiveScaleFloat(float size, float absCosAngle, float distanceToCamera, vec4 params) {
return applyScreenSizePerspectiveScaleFactorFloat(
size,
screenSizePerspectiveScaleFactor(absCosAngle, distanceToCamera, params)
);
}`),e.vertex.code.add(j`vec2 applyScreenSizePerspectiveScaleFactorVec2(vec2 size, vec4 factor) {
return mix(size * clamp(factor.x, screenSizePerspectiveMinSize(size.y, factor) / max(1e-5, size.y), 1.0), size, factor.y);
}`),e.vertex.code.add(j`vec2 screenSizePerspectiveScaleVec2(vec2 size, float absCosAngle, float distanceToCamera, vec4 params) {
return applyScreenSizePerspectiveScaleFactorVec2(size, screenSizePerspectiveScaleFactor(absCosAngle, distanceToCamera, params));
}`)}const oo=(0,pe.c)();function no(e,t){const r=e.vertex;t.hasVerticalOffset?(function(e){e.uniforms.add(new Mt("verticalOffset",((e,t)=>{const{minWorldLength:r,maxWorldLength:i,screenLength:o}=e.verticalOffset,n=Math.tan(.5*t.camera.fovY)/(.5*t.camera.fullViewport[3]),a=t.camera.pixelRatio||1;return(0,S.J)(ao,o*a,n,r,i)})))}(r),t.hasScreenSizePerspective&&(e.include(io),function(e){e.uniforms.add(new Mt("screenSizePerspectiveAlignment",(e=>function(e){return(0,S.J)(oo,e.parameters.divisor,e.parameters.offset,e.parameters.minPixelSize,e.paddingPixelsOverride)}(e.screenSizePerspectiveAlignment||e.screenSizePerspective))))}(r),At(e.vertex,t)),r.code.add(j`
      vec3 calculateVerticalOffset(vec3 worldPos, vec3 localOrigin) {
        float viewDistance = length((view * vec4(worldPos, 1.0)).xyz);
        ${t.spherical?j`vec3 worldNormal = normalize(worldPos + localOrigin);`:j`vec3 worldNormal = vec3(0.0, 0.0, 1.0);`}
        ${t.hasScreenSizePerspective?j`
            float cosAngle = dot(worldNormal, normalize(worldPos - cameraPosition));
            float verticalOffsetScreenHeight = screenSizePerspectiveScaleFloat(verticalOffset.x, abs(cosAngle), viewDistance, screenSizePerspectiveAlignment);`:j`
            float verticalOffsetScreenHeight = verticalOffset.x;`}
        // Screen sized offset in world space, used for example for line callouts
        float worldOffset = clamp(verticalOffsetScreenHeight * verticalOffset.y * viewDistance, verticalOffset.z, verticalOffset.w);
        return worldNormal * worldOffset;
      }

      vec3 addVerticalOffset(vec3 worldPos, vec3 localOrigin) {
        return worldPos + calculateVerticalOffset(worldPos, localOrigin);
      }
    `)):r.code.add(j`vec3 addVerticalOffset(vec3 worldPos, vec3 localOrigin) { return worldPos; }`)}const ao=(0,pe.c)();function so(e,t){t.hasVvInstancing&&(t.vvSize||t.vvColor)&&e.attributes.add(z.V.INSTANCEFEATUREATTRIBUTE,"vec4");const r=e.vertex;t.vvSize?(r.uniforms.add(new Ke("vvSizeMinSize",(e=>e.vvSizeMinSize))),r.uniforms.add(new Ke("vvSizeMaxSize",(e=>e.vvSizeMaxSize))),r.uniforms.add(new Ke("vvSizeOffset",(e=>e.vvSizeOffset))),r.uniforms.add(new Ke("vvSizeFactor",(e=>e.vvSizeFactor))),r.uniforms.add(new Or("vvSymbolRotationMatrix",(e=>e.vvSymbolRotationMatrix))),r.uniforms.add(new Ke("vvSymbolAnchor",(e=>e.vvSymbolAnchor))),r.code.add(j`vec3 vvScale(vec4 _featureAttribute) {
return clamp(vvSizeOffset + _featureAttribute.x * vvSizeFactor, vvSizeMinSize, vvSizeMaxSize);
}
vec4 vvTransformPosition(vec3 position, vec4 _featureAttribute) {
return vec4(vvSymbolRotationMatrix * ( vvScale(_featureAttribute) * (position + vvSymbolAnchor)), 1.0);
}`),r.code.add(j`
      const float eps = 1.192092896e-07;
      vec4 vvTransformNormal(vec3 _normal, vec4 _featureAttribute) {
        vec3 vvScale = clamp(vvSizeOffset + _featureAttribute.x * vvSizeFactor, vvSizeMinSize + eps, vvSizeMaxSize);
        return vec4(vvSymbolRotationMatrix * _normal / vvScale, 1.0);
      }

      ${t.hasVvInstancing?j`
      vec4 vvLocalNormal(vec3 _normal) {
        return vvTransformNormal(_normal, instanceFeatureAttribute);
      }

      vec4 localPosition() {
        return vvTransformPosition(position, instanceFeatureAttribute);
      }`:""}
    `)):r.code.add(j`vec4 localPosition() { return vec4(position, 1.0); }
vec4 vvLocalNormal(vec3 _normal) { return vec4(_normal, 1.0); }`),t.vvColor?(r.constants.add("vvColorNumber","int",8),t.hasVvInstancing&&r.uniforms.add([new Er("vvColorValues",(e=>e.vvColorValues),8),new Ar("vvColorColors",(e=>e.vvColorColors),8)]),r.code.add(j`
      vec4 vvGetColor(vec4 featureAttribute, float values[vvColorNumber], vec4 colors[vvColorNumber]) {
        float value = featureAttribute.y;
        if (value <= values[0]) {
          return colors[0];
        }

        for (int i = 1; i < vvColorNumber; ++i) {
          if (values[i] >= value) {
            float f = (value - values[i-1]) / (values[i] - values[i-1]);
            return mix(colors[i-1], colors[i], f);
          }
        }
        return colors[vvColorNumber - 1];
      }

      ${t.hasVvInstancing?j`
      vec4 vvColor() {
        return vvGetColor(instanceFeatureAttribute, vvColorValues, vvColorColors);
      }`:""}
    `)):r.code.add(j`vec4 vvColor() { return vec4(1.0); }`)}function lo(e,t){const r=e.fragment;switch(r.code.add(j`struct ShadingNormalParameters {
vec3 normalView;
vec3 viewDirection;
} shadingParams;`),t.doubleSidedMode){case co.None:r.code.add(j`vec3 shadingNormal(ShadingNormalParameters params) {
return normalize(params.normalView);
}`);break;case co.View:r.code.add(j`vec3 shadingNormal(ShadingNormalParameters params) {
return dot(params.normalView, params.viewDirection) > 0.0 ? normalize(-params.normalView) : normalize(params.normalView);
}`);break;case co.WindingOrder:r.code.add(j`vec3 shadingNormal(ShadingNormalParameters params) {
return gl_FrontFacing ? normalize(params.normalView) : normalize(-params.normalView);
}`);break;default:(0,kt.n)(t.doubleSidedMode);case co.COUNT:}}var co;function uo(e){e.vertex.code.add(j`vec4 offsetBackfacingClipPosition(vec4 posClip, vec3 posWorld, vec3 normalWorld, vec3 camPosWorld) {
vec3 camToVert = posWorld - camPosWorld;
bool isBackface = dot(camToVert, normalWorld) > 0.0;
if (isBackface) {
posClip.z += 0.0000003 * posClip.w;
}
return posClip;
}`)}function ho(e,t){t.instanced&&t.instancedDoublePrecision&&(e.attributes.add(z.V.MODELORIGINHI,"vec3"),e.attributes.add(z.V.MODELORIGINLO,"vec3"),e.attributes.add(z.V.MODEL,"mat3"),e.attributes.add(z.V.MODELNORMAL,"mat3"));const r=e.vertex;t.instancedDoublePrecision&&(r.include(Cr,t),r.uniforms.add(new Ye("viewOriginHi",((e,t)=>function(e,t){const r=e.length;for(let i=0;i<r;++i)k[0]=e[i],t[i]=k[0];return t}((0,S.s)(mo,t.camera.viewInverseTransposeMatrix[3],t.camera.viewInverseTransposeMatrix[7],t.camera.viewInverseTransposeMatrix[11]),mo)))),r.uniforms.add(new Ye("viewOriginLo",((e,t)=>function(e,t){const r=e.length;for(let i=0;i<r;++i)k[0]=e[i],k[1]=e[i]-k[0],t[i]=k[1];return t}((0,S.s)(mo,t.camera.viewInverseTransposeMatrix[3],t.camera.viewInverseTransposeMatrix[7],t.camera.viewInverseTransposeMatrix[11]),mo))))),r.code.add(j`
    vec3 calculateVPos() {
      ${t.instancedDoublePrecision?"return model * localPosition().xyz;":"return localPosition().xyz;"}
    }
    `),r.code.add(j`
    vec3 subtractOrigin(vec3 _pos) {
      ${t.instancedDoublePrecision?j`
          vec3 originDelta = dpAdd(viewOriginHi, viewOriginLo, -modelOriginHi, -modelOriginLo);
          return _pos - originDelta;`:"return vpos;"}
    }
    `),r.code.add(j`
    vec3 dpNormal(vec4 _normal) {
      ${t.instancedDoublePrecision?"return normalize(modelNormal * _normal.xyz);":"return normalize(_normal.xyz);"}
    }
    `),t.output===Le.Normal&&(r.uniforms.add(new bt("viewNormal",((e,t)=>t.camera.viewInverseTransposeMatrix))),r.code.add(j`
    vec3 dpNormalView(vec4 _normal) {
      ${t.instancedDoublePrecision?"return normalize((viewNormal * vec4(modelNormal * _normal.xyz, 1.0)).xyz);":"return normalize((viewNormal * _normal).xyz);"}
    }
    `)),t.hasVertexTangents&&r.code.add(j`
    vec4 dpTransformVertexTangent(vec4 _tangent) {
      ${t.instancedDoublePrecision?"return vec4(modelNormal * _tangent.xyz, _tangent.w);":"return _tangent;"}

    }
    `)}!function(e){e[e.None=0]="None",e[e.View=1]="View",e[e.WindingOrder=2]="WindingOrder",e[e.COUNT=3]="COUNT"}(co||(co={}));const mo=(0,S.h)();var fo;function po(e){switch(e){case"multiply":default:return fo.Multiply;case"ignore":return fo.Ignore;case"replace":return fo.Replace;case"tint":return fo.Tint}}function go(e,t,r){if((0,x.a)(e)||t===fo.Ignore)return r[0]=255,r[1]=255,r[2]=255,void(r[3]=255);const i=(0,S.c)(Math.round(e[3]*vo),0,vo),o=0===i||t===fo.Tint?0:t===fo.Replace?xo:To;r[0]=(0,S.c)(Math.round(e[0]*_o),0,_o),r[1]=(0,S.c)(Math.round(e[1]*_o),0,_o),r[2]=(0,S.c)(Math.round(e[2]*_o),0,_o),r[3]=i+o}!function(e){e[e.Multiply=1]="Multiply",e[e.Ignore=2]="Ignore",e[e.Replace=3]="Replace",e[e.Tint=4]="Tint"}(fo||(fo={}));const _o=255,vo=85,xo=vo,To=2*vo;function bo(e){e.vertex.code.add(j`
    vec4 decodeSymbolColor(vec4 symbolColor, out int colorMixMode) {
      float symbolAlpha = 0.0;

      const float maxTint = 85.0;
      const float maxReplace = 170.0;
      const float scaleAlpha = 3.0;

      if (symbolColor.a > maxReplace) {
        colorMixMode = ${j.int(fo.Multiply)};
        symbolAlpha = scaleAlpha * (symbolColor.a - maxReplace);
      } else if (symbolColor.a > maxTint) {
        colorMixMode = ${j.int(fo.Replace)};
        symbolAlpha = scaleAlpha * (symbolColor.a - maxTint);
      } else if (symbolColor.a > 0.0) {
        colorMixMode = ${j.int(fo.Tint)};
        symbolAlpha = scaleAlpha * symbolColor.a;
      } else {
        colorMixMode = ${j.int(fo.Multiply)};
        symbolAlpha = 0.0;
      }

      return vec4(symbolColor.r, symbolColor.g, symbolColor.b, symbolAlpha);
    }
  `)}function Ao(e,t){t.hasSymbolColors?(e.include(bo),e.attributes.add(z.V.SYMBOLCOLOR,"vec4"),e.varyings.add("colorMixMode","mediump float"),e.vertex.code.add(j`int symbolColorMixMode;
vec4 getSymbolColor() {
return decodeSymbolColor(symbolColor, symbolColorMixMode) * 0.003921568627451;
}
void forwardColorMixMode() {
colorMixMode = float(symbolColorMixMode) + 0.5;
}`)):(e.fragment.uniforms.add(new Zr("colorMixMode",(e=>le[e.colorMixMode]))),e.vertex.code.add(j`vec4 getSymbolColor() { return vec4(1.0); }
void forwardColorMixMode() {}`))}function Eo(e){e.fragment.code.add(j`
    #define discardOrAdjustAlpha(color) { if (color.a < ${j.float(vt)}) { discard; } }
  `)}class So extends je{constructor(e,t){super(e,"float",Fe.Draw,((r,i,o)=>r.setUniform1f(e,t(i,o))))}}function Ro(e,t){wo(e,t,new Gt("textureAlphaCutoff",(e=>e.textureAlphaCutoff)))}function Mo(e,t){wo(e,t,new So("textureAlphaCutoff",(e=>e.textureAlphaCutoff)))}function wo(e,t,r){const i=e.fragment;switch(t.alphaDiscardMode!==p.Mask&&t.alphaDiscardMode!==p.MaskBlend||i.uniforms.add(r),t.alphaDiscardMode){case p.Blend:return e.include(Eo);case p.Opaque:i.code.add(j`void discardOrAdjustAlpha(inout vec4 color) {
color.a = 1.0;
}`);break;case p.Mask:i.code.add(j`#define discardOrAdjustAlpha(color) { if (color.a < textureAlphaCutoff) { discard; } else { color.a = 1.0; } }`);break;case p.MaskBlend:e.fragment.code.add(j`#define discardOrAdjustAlpha(color) { if (color.a < textureAlphaCutoff) { discard; } }`)}}function Co(e,t){const r=e.vertex.code,i=e.fragment.code,o=t.hasModelTransformation;t.output!==Le.Depth&&t.output!==Le.Shadow||(Et(e,t),e.include(at,{linearDepth:!0,hasModelTransformation:o}),e.include(Br,t),e.include(so,t),e.include(lt,t),e.include(Ze,t),e.vertex.uniforms.add(new ct("nearFar",((e,t)=>t.camera.nearFar))),e.varyings.add("depth","float"),t.hasColorTexture&&e.fragment.uniforms.add(new dt("tex",(e=>e.texture))),r.add(j`
      void main(void) {
        vpos = calculateVPos();
        vpos = subtractOrigin(vpos);
        vpos = addVerticalOffset(vpos, localOrigin);
        gl_Position = transformPositionWithDepth(proj, view, ${o?"model,":""} vpos, nearFar, depth);
        forwardTextureCoordinates();
      }
    `),e.include(Ro,t),i.add(j`
      void main(void) {
        discardBySlice(vpos);
        ${t.hasColorTexture?j`
        vec4 texColor = texture2D(tex, vuv0);
        discardOrAdjustAlpha(texColor);`:""}
        outputDepth(depth);
      }
    `)),t.output===Le.Normal&&(Et(e,t),e.include(at,{linearDepth:!1,hasModelTransformation:o}),e.include(Mr,t),e.include(Ir,t),e.include(Br,t),e.include(so,t),t.hasColorTexture&&e.fragment.uniforms.add(new dt("tex",(e=>e.texture))),e.varyings.add("vPositionView","vec3"),r.add(j`
      void main(void) {
        vpos = calculateVPos();
        vpos = subtractOrigin(vpos);
        ${t.normalType===vr.Attribute?j`
        vNormalWorld = dpNormalView(vvLocalNormal(normalModel()));`:""}
        vpos = addVerticalOffset(vpos, localOrigin);
        gl_Position = transformPosition(proj, view, ${o?"model,":""} vpos);
        forwardTextureCoordinates();
      }
    `),e.include(Ze,t),e.include(Ro,t),i.add(j`
      void main() {
        discardBySlice(vpos);
        ${t.hasColorTexture?j`
        vec4 texColor = texture2D(tex, vuv0);
        discardOrAdjustAlpha(texColor);`:""}

        ${t.normalType===vr.ScreenDerivative?j`
            vec3 normal = screenDerivativeNormal(vPositionView);`:j`
            vec3 normal = normalize(vNormalWorld);
            if (gl_FrontFacing == false) normal = -normal;`}
        gl_FragColor = vec4(vec3(0.5) + 0.5 * normal, 1.0);
      }
    `)),t.output===Le.Highlight&&(Et(e,t),e.include(at,{linearDepth:!1,hasModelTransformation:o}),e.include(Br,t),e.include(so,t),t.hasColorTexture&&e.fragment.uniforms.add(new dt("tex",(e=>e.texture))),r.add(j`
      void main(void) {
        vpos = calculateVPos();
        vpos = subtractOrigin(vpos);
        vpos = addVerticalOffset(vpos, localOrigin);
        gl_Position = transformPosition(proj, view, ${o?"model,":""} vpos);
        forwardTextureCoordinates();
      }
    `),e.include(Ze,t),e.include(Ro,t),e.include(pt),i.add(j`
      void main() {
        discardBySlice(vpos);
        ${t.hasColorTexture?j`
        vec4 texColor = texture2D(tex, vuv0);
        discardOrAdjustAlpha(texColor);`:""}
        outputHighlight();
      }
    `))}function yo(e,t){const r=e.fragment;if(t.hasVertexTangents?(e.attributes.add(z.V.TANGENT,"vec4"),e.varyings.add("vTangent","vec4"),t.doubleSidedMode===co.WindingOrder?r.code.add(j`mat3 computeTangentSpace(vec3 normal) {
float tangentHeadedness = gl_FrontFacing ? vTangent.w : -vTangent.w;
vec3 tangent = normalize(gl_FrontFacing ? vTangent.xyz : -vTangent.xyz);
vec3 bitangent = cross(normal, tangent) * tangentHeadedness;
return mat3(tangent, bitangent, normal);
}`):r.code.add(j`mat3 computeTangentSpace(vec3 normal) {
float tangentHeadedness = vTangent.w;
vec3 tangent = normalize(vTangent.xyz);
vec3 bitangent = cross(normal, tangent) * tangentHeadedness;
return mat3(tangent, bitangent, normal);
}`)):(e.extensions.add("GL_OES_standard_derivatives"),r.code.add(j`mat3 computeTangentSpace(vec3 normal, vec3 pos, vec2 st) {
vec3 Q1 = dFdx(pos);
vec3 Q2 = dFdy(pos);
vec2 stx = dFdx(st);
vec2 sty = dFdy(st);
float det = stx.t * sty.s - sty.t * stx.s;
vec3 T = stx.t * Q2 - sty.t * Q1;
T = T - normal * dot(normal, T);
T *= inversesqrt(max(dot(T,T), 1.e-10));
vec3 B = sign(det) * cross(normal, T);
return mat3(T, B, normal);
}`)),t.textureCoordinateType!==xr.None){e.include(Ur,t);const i=t.supportsTextureAtlas;r.uniforms.add(t.pbrTextureBindType===Fe.Pass?ut("normalTexture",(e=>e.textureNormal),i):Hr("normalTexture",(e=>e.textureNormal),i)),r.code.add(j`
    vec3 computeTextureNormal(mat3 tangentSpace, vec2 uv) {
      vtc.uv = uv;
      ${t.supportsTextureAtlas?"vtc.size = normalTextureSize;":""}
      vec3 rawNormal = textureLookup(normalTexture, vtc).rgb * 2.0 - 1.0;
      return tangentSpace * rawNormal;
    }
  `)}}function Oo(e,t){const r=e.fragment;t.receiveAmbientOcclusion?(r.uniforms.add([new dt("ssaoTex",((e,t)=>t.ssaoHelper.colorTexture)),new Mt("viewportPixelSz",((e,t)=>(0,S.J)(No,t.camera.fullViewport[0],t.camera.fullViewport[1],1/t.ssaoHelper.width,1/t.ssaoHelper.height)))]),r.code.add(j`float evaluateAmbientOcclusion() {
return 1.0 - texture2D(ssaoTex, (gl_FragCoord.xy - viewportPixelSz.xy) * viewportPixelSz.zw).a;
}
float evaluateAmbientOcclusionInverse() {
return texture2D(ssaoTex, (gl_FragCoord.xy - viewportPixelSz.xy) * viewportPixelSz.zw).a;
}`)):r.code.add(j`float evaluateAmbientOcclusion() { return 0.0; }
float evaluateAmbientOcclusionInverse() { return 1.0; }`)}const No=(0,pe.c)();function Po(e,t){const r=e.fragment;e.include(Oo,t),t.pbrMode!==Wr.Disabled&&e.include(ii,t),e.include(Xr,t),r.constants.add("ambientBoostFactor","float",.4),e.include(Sr),r.code.add(j`
    const float GAMMA_SRGB = 2.1;
    const float INV_GAMMA_SRGB = 0.4761904;
    ${t.pbrMode===Wr.Disabled?"":"const vec3 GROUND_REFLECTANCE = vec3(0.2);"}
  `),r.uniforms.add(new Ke("lightingMainDirection",((e,t)=>t.lighting.lightingMainDirection))),r.code.add(j`
    float additionalDirectedAmbientLight(vec3 vPosWorld) {
      float vndl = dot(${t.spherical?j`normalize(vPosWorld)`:j`vec3(0.0, 0.0, 1.0)`}, lightingMainDirection);
      return smoothstep(0.0, 1.0, clamp(vndl * 2.5, 0.0, 1.0));
    }
  `),r.uniforms.add([new Gt("lightingGlobalFactor",((e,t)=>t.lighting.globalFactor)),new Ke("lightingMainIntensity",((e,t)=>t.lighting.mainLight.intensity))]),r.code.add(j`vec3 evaluateAdditionalLighting(float ambientOcclusion, vec3 vPosWorld) {
float additionalAmbientScale = additionalDirectedAmbientLight(vPosWorld);
return (1.0 - ambientOcclusion) * additionalAmbientScale * ambientBoostFactor * lightingGlobalFactor * lightingMainIntensity;
}`),t.pbrMode===Wr.Disabled||t.pbrMode===Wr.WaterOnIntegratedMesh?(e.include(Kr,t),r.code.add(j`vec3 evaluateSceneLighting(vec3 normalWorld, vec3 albedo, float shadow, float ssao, vec3 additionalLight)
{
vec3 mainLighting = evaluateMainLighting(normalWorld, shadow);
vec3 ambientLighting = calculateAmbientIrradiance(normalWorld, ssao);
vec3 albedoLinear = pow(albedo, vec3(GAMMA_SRGB));
vec3 totalLight = mainLighting + ambientLighting + additionalLight;
totalLight = min(totalLight, vec3(PI));
vec3 outColor = vec3((albedoLinear / PI) * totalLight);
return pow(outColor, vec3(INV_GAMMA_SRGB));
}`)):t.pbrMode!==Wr.Normal&&t.pbrMode!==Wr.Schematic||(r.code.add(j`const float fillLightIntensity = 0.25;
const float horizonLightDiffusion = 0.4;
const float additionalAmbientIrradianceFactor = 0.02;
vec3 evaluateSceneLightingPBR(vec3 normal, vec3 albedo, float shadow, float ssao, vec3 additionalLight, vec3 viewDir, vec3 normalGround, vec3 mrr, vec3 _emission, float additionalAmbientIrradiance)
{
vec3 viewDirection = -viewDir;
vec3 mainLightDirection = lightingMainDirection;
vec3 h = normalize(viewDirection + mainLightDirection);
PBRShadingInfo inputs;
inputs.NdotL = clamp(dot(normal, mainLightDirection), 0.001, 1.0);
inputs.NdotV = clamp(abs(dot(normal, viewDirection)), 0.001, 1.0);
inputs.NdotH = clamp(dot(normal, h), 0.0, 1.0);
inputs.VdotH = clamp(dot(viewDirection, h), 0.0, 1.0);
inputs.NdotNG = clamp(dot(normal, normalGround), -1.0, 1.0);
vec3 reflectedView = normalize(reflect(viewDirection, normal));
inputs.RdotNG = clamp(dot(reflectedView, normalGround), -1.0, 1.0);
inputs.albedoLinear = pow(albedo, vec3(GAMMA_SRGB));
inputs.ssao = ssao;
inputs.metalness = mrr[0];
inputs.roughness = clamp(mrr[1] * mrr[1], 0.001, 0.99);`),r.code.add(j`inputs.f0 = (0.16 * mrr[2] * mrr[2]) * (1.0 - inputs.metalness) + inputs.albedoLinear * inputs.metalness;
inputs.f90 = vec3(clamp(dot(inputs.f0, vec3(50.0 * 0.33)), 0.0, 1.0));
inputs.diffuseColor = inputs.albedoLinear * (vec3(1.0) - inputs.f0) * (1.0 - inputs.metalness);`),t.useFillLights?r.uniforms.add(new oi("hasFillLights",((e,t)=>t.enableFillLights))):r.constants.add("hasFillLights","bool",!1),r.code.add(j`vec3 ambientDir = vec3(5.0 * normalGround[1] - normalGround[0] * normalGround[2], - 5.0 * normalGround[0] - normalGround[2] * normalGround[1], normalGround[1] * normalGround[1] + normalGround[0] * normalGround[0]);
ambientDir = ambientDir != vec3(0.0)? normalize(ambientDir) : normalize(vec3(5.0, -1.0, 0.0));
inputs.NdotAmbDir = hasFillLights ? abs(dot(normal, ambientDir)) : 1.0;
vec3 mainLightIrradianceComponent = inputs.NdotL * (1.0 - shadow) * lightingMainIntensity;
vec3 fillLightsIrradianceComponent = inputs.NdotAmbDir * lightingMainIntensity * fillLightIntensity;
vec3 ambientLightIrradianceComponent = calculateAmbientIrradiance(normal, ssao) + additionalLight;
inputs.skyIrradianceToSurface = ambientLightIrradianceComponent + mainLightIrradianceComponent + fillLightsIrradianceComponent ;
inputs.groundIrradianceToSurface = GROUND_REFLECTANCE * ambientLightIrradianceComponent + mainLightIrradianceComponent + fillLightsIrradianceComponent ;`),r.uniforms.add([new Gt("lightingSpecularStrength",((e,t)=>t.lighting.mainLight.specularStrength)),new Gt("lightingEnvironmentStrength",((e,t)=>t.lighting.mainLight.environmentStrength))]),r.code.add(j`vec3 horizonRingDir = inputs.RdotNG * normalGround - reflectedView;
vec3 horizonRingH = normalize(viewDirection + horizonRingDir);
inputs.NdotH_Horizon = dot(normal, horizonRingH);
vec3 mainLightRadianceComponent = lightingSpecularStrength * normalDistribution(inputs.NdotH, inputs.roughness) * lightingMainIntensity * (1.0 - shadow);
vec3 horizonLightRadianceComponent = lightingEnvironmentStrength * normalDistribution(inputs.NdotH_Horizon, min(inputs.roughness + horizonLightDiffusion, 1.0)) * lightingMainIntensity * fillLightIntensity;
vec3 ambientLightRadianceComponent = lightingEnvironmentStrength * calculateAmbientRadiance(ssao) + additionalLight;
inputs.skyRadianceToSurface = ambientLightRadianceComponent + mainLightRadianceComponent + horizonLightRadianceComponent;
inputs.groundRadianceToSurface = GROUND_REFLECTANCE * (ambientLightRadianceComponent + horizonLightRadianceComponent) + mainLightRadianceComponent;
inputs.averageAmbientRadiance = ambientLightIrradianceComponent[1] * (1.0 + GROUND_REFLECTANCE[1]);`),r.code.add(j`
        vec3 reflectedColorComponent = evaluateEnvironmentIllumination(inputs);
        vec3 additionalMaterialReflectanceComponent = inputs.albedoLinear * additionalAmbientIrradiance;
        vec3 emissionComponent = pow(_emission, vec3(GAMMA_SRGB));
        vec3 outColorLinear = reflectedColorComponent + additionalMaterialReflectanceComponent + emissionComponent;
        ${t.pbrMode===Wr.Schematic?j`vec3 outColor = pow(max(vec3(0.0), outColorLinear - 0.005 * inputs.averageAmbientRadiance), vec3(INV_GAMMA_SRGB));`:j`vec3 outColor = pow(blackLevelSoftCompression(outColorLinear, inputs), vec3(INV_GAMMA_SRGB));`}
        return outColor;
      }
    `))}function Do(e,t){const r=j`
  /*
  *  ${t.name}
  *  ${t.output===Le.Color?"RenderOutput: Color":t.output===Le.Depth?"RenderOutput: Depth":t.output===Le.Shadow?"RenderOutput: Shadow":t.output===Le.Normal?"RenderOutput: Normal":t.output===Le.Highlight?"RenderOutput: Highlight":""}
  */
  `;(0,fe.a)()&&(e.fragment.code.add(r),e.vertex.code.add(r))}function Io(e){e.include(xt),e.code.add(j`
    vec3 mixExternalColor(vec3 internalColor, vec3 textureColor, vec3 externalColor, int mode) {
      // workaround for artifacts in OSX using Intel Iris Pro
      // see: https://devtopia.esri.com/WebGIS/arcgis-js-api/issues/10475
      vec3 internalMixed = internalColor * textureColor;
      vec3 allMixed = internalMixed * externalColor;

      if (mode == ${j.int(fo.Multiply)}) {
        return allMixed;
      }
      if (mode == ${j.int(fo.Ignore)}) {
        return internalMixed;
      }
      if (mode == ${j.int(fo.Replace)}) {
        return externalColor;
      }

      // tint (or something invalid)
      float vIn = rgb2v(internalMixed);
      vec3 hsvTint = rgb2hsv(externalColor);
      vec3 hsvOut = vec3(hsvTint.x, hsvTint.y, vIn * hsvTint.z);
      return hsv2rgb(hsvOut);
    }

    float mixExternalOpacity(float internalOpacity, float textureOpacity, float externalOpacity, int mode) {
      // workaround for artifacts in OSX using Intel Iris Pro
      // see: https://devtopia.esri.com/WebGIS/arcgis-js-api/issues/10475
      float internalMixed = internalOpacity * textureOpacity;
      float allMixed = internalMixed * externalOpacity;

      if (mode == ${j.int(fo.Ignore)}) {
        return internalMixed;
      }
      if (mode == ${j.int(fo.Replace)}) {
        return externalOpacity;
      }

      // multiply or tint (or something invalid)
      return allMixed;
    }
  `)}const Lo=Object.freeze(Object.defineProperty({__proto__:null,build:function(e){const t=new yt,r=t.vertex.code,i=t.fragment.code;t.include(Do,{name:"Default Material Shader",output:e.output});const o=Et(t,e);return t.include(wr),t.varyings.add("vpos","vec3"),t.include(so,e),t.include(ho,e),t.include(no,e),e.output!==Le.Color&&e.output!==Le.Alpha||(At(t.vertex,e),t.include(Mr,e),t.include(at,{linearDepth:!1,hasModelTransformation:e.hasModelTransformation}),e.normalType===vr.Attribute&&e.offsetBackfaces&&t.include(uo),t.include(yo,e),t.include(Ir,e),e.instancedColor&&t.attributes.add(z.V.INSTANCECOLOR,"vec4"),t.varyings.add("localvpos","vec3"),t.include(Br,e),t.include(qr,e),t.include(Ao,e),t.include(ro,e),t.vertex.uniforms.add(new Mt("externalColor",(e=>e.externalColor))),t.varyings.add("vcolorExt","vec4"),e.hasMultipassTerrain&&t.varyings.add("depth","float"),e.hasModelTransformation&&t.vertex.uniforms.add(new bt("model",(e=>(0,x.i)(e.modelTransformation)?e.modelTransformation:E.I))),r.add(j`
      void main(void) {
        forwardNormalizedVertexColor();
        vcolorExt = externalColor;
        ${e.instancedColor?"vcolorExt *= instanceColor;":""}
        vcolorExt *= vvColor();
        vcolorExt *= getSymbolColor();
        forwardColorMixMode();

        if (vcolorExt.a < ${j.float(vt)}) {
          gl_Position = vec4(1e38, 1e38, 1e38, 1.0);
        } else {
          vpos = calculateVPos();
          localvpos = vpos - view[3].xyz;
          vpos = subtractOrigin(vpos);
          ${e.normalType===vr.Attribute?j`vNormalWorld = dpNormal(vvLocalNormal(normalModel()));`:""}
          vpos = addVerticalOffset(vpos, localOrigin);
          ${e.hasVertexTangents?"vTangent = dpTransformVertexTangent(tangent);":""}
          gl_Position = transformPosition(proj, view, ${e.hasModelTransformation?"model,":""} vpos);
          ${e.normalType===vr.Attribute&&e.offsetBackfaces?"gl_Position = offsetBackfacingClipPosition(gl_Position, vpos, vNormalWorld, cameraPosition);":""}
        }

        ${e.hasMultipassTerrain?"depth = (view * vec4(vpos, 1.0)).z;":""}
        forwardLinearDepth();
        forwardTextureCoordinates();
      }
    `)),e.output===Le.Alpha&&(t.include(Ze,e),t.include(Ro,e),t.include(_t,e),t.fragment.uniforms.add([new Gt("opacity",(e=>e.opacity)),new Gt("layerOpacity",(e=>e.layerOpacity))]),e.hasColorTexture&&t.fragment.uniforms.add(new dt("tex",(e=>e.texture))),t.fragment.include(Io),i.add(j`
      void main() {
        discardBySlice(vpos);
        ${e.hasMultipassTerrain?"terrainDepthTest(gl_FragCoord, depth);":""}
        ${e.hasColorTexture?j`
                vec4 texColor = texture2D(tex, vuv0);
                ${e.textureAlphaPremultiplied?"texColor.rgb /= texColor.a;":""}
                discardOrAdjustAlpha(texColor);`:j`vec4 texColor = vec4(1.0);`}
        ${e.hasVertexColors?j`float opacity_ = layerOpacity * mixExternalOpacity(vColor.a * opacity, texColor.a, vcolorExt.a, int(colorMixMode));`:j`float opacity_ = layerOpacity * mixExternalOpacity(opacity, texColor.a, vcolorExt.a, int(colorMixMode));`}
        gl_FragColor = vec4(opacity_);
      }
    `)),e.output===Le.Color&&(t.include(Ze,e),t.include(Po,e),t.include(Oo,e),t.include(Ro,e),t.include(e.instancedDoublePrecision?Jr:ei,e),t.include(_t,e),At(t.fragment,e),t.fragment.uniforms.add([o,new Ke("ambient",(e=>e.ambient)),new Ke("diffuse",(e=>e.diffuse)),new Gt("opacity",(e=>e.opacity)),new Gt("layerOpacity",(e=>e.layerOpacity)),new Gt("lightingGlobalFactor",((e,t)=>t.lighting.globalFactor)),new Ke("lightingMainIntensity",((e,t)=>t.lighting.mainLight.intensity))]),t.fragment.constants.add("ambientBoostFactor","float",.4),e.hasColorTexture&&t.fragment.uniforms.add(new dt("tex",(e=>e.texture))),t.include($r,e),t.include(ii,e),t.fragment.include(Io),t.include(lo,e),i.add(j`
      void main() {
        discardBySlice(vpos);
        ${e.hasMultipassTerrain?"terrainDepthTest(gl_FragCoord, depth);":""}
        ${e.hasColorTexture?j`
                vec4 texColor = texture2D(tex, vuv0);
                ${e.textureAlphaPremultiplied?"texColor.rgb /= texColor.a;":""}
                discardOrAdjustAlpha(texColor);`:j`vec4 texColor = vec4(1.0);`}
        shadingParams.viewDirection = normalize(vpos - cameraPosition);
        ${e.normalType===vr.ScreenDerivative?j`
                vec3 normal = screenDerivativeNormal(localvpos);`:j`
                shadingParams.normalView = vNormalWorld;
                vec3 normal = shadingNormal(shadingParams);`}
        ${e.pbrMode===Wr.Normal?"applyPBRFactors();":""}
        float ssao = evaluateAmbientOcclusionInverse();
        ssao *= getBakedOcclusion();

        float additionalAmbientScale = additionalDirectedAmbientLight(vpos + localOrigin);
        ${e.receiveShadows?"float shadow = readShadowMap(vpos, linearDepth);":e.spherical?"float shadow = lightingGlobalFactor * (1.0 - additionalAmbientScale);":"float shadow = 0.0;"}
        vec3 matColor = max(ambient, diffuse);
        ${e.hasVertexColors?j`
                vec3 albedo = mixExternalColor(vColor.rgb * matColor, texColor.rgb, vcolorExt.rgb, int(colorMixMode));
                float opacity_ = layerOpacity * mixExternalOpacity(vColor.a * opacity, texColor.a, vcolorExt.a, int(colorMixMode));`:j`
                vec3 albedo = mixExternalColor(matColor, texColor.rgb, vcolorExt.rgb, int(colorMixMode));
                float opacity_ = layerOpacity * mixExternalOpacity(opacity, texColor.a, vcolorExt.a, int(colorMixMode));`}
        ${e.hasNormalTexture?j`
                mat3 tangentSpace = ${e.hasVertexTangents?"computeTangentSpace(normal);":"computeTangentSpace(normal, vpos, vuv0);"}
                vec3 shadingNormal = computeTextureNormal(tangentSpace, vuv0);`:j`vec3 shadingNormal = normal;`}
        vec3 normalGround = ${e.spherical?j`normalize(vpos + localOrigin);`:j`vec3(0.0, 0.0, 1.0);`}

        ${e.snowCover?j`
                float snow = smoothstep(0.5, 0.55, dot(normal, normalGround));
                albedo = mix(albedo, vec3(1), snow);
                shadingNormal = mix(shadingNormal, normal, snow);
                ssao = mix(ssao, 1.0, snow);`:""}

        vec3 additionalLight = ssao * lightingMainIntensity * additionalAmbientScale * ambientBoostFactor * lightingGlobalFactor;

        ${e.pbrMode===Wr.Normal||e.pbrMode===Wr.Schematic?j`
                float additionalAmbientIrradiance = additionalAmbientIrradianceFactor * lightingMainIntensity[2];
                ${e.snowCover?j`
                        mrr = mix(mrr, vec3(0.0, 1.0, 0.04), snow);
                        emission = mix(emission, vec3(0.0), snow);`:""}

                vec3 shadedColor = evaluateSceneLightingPBR(shadingNormal, albedo, shadow, 1.0 - ssao, additionalLight, shadingParams.viewDirection, normalGround, mrr, emission, additionalAmbientIrradiance);`:j`vec3 shadedColor = evaluateSceneLighting(shadingNormal, albedo, shadow, 1.0 - ssao, additionalLight);`}
        gl_FragColor = highlightSlice(vec4(shadedColor, opacity_), vpos);
        ${e.transparencyPassType===a.Color?j`gl_FragColor = premultiplyAlpha(gl_FragColor);`:""}
      }
    `)),t.include(Co,e),t}},Symbol.toStringTag,{value:"Module"}));class Fo extends Lr{constructor(){super(...arguments),this.isSchematic=!1,this.usePBR=!1,this.mrrFactors=(0,S.f)(0,1,.5),this.hasVertexColors=!1,this.hasSymbolColors=!1,this.doubleSided=!1,this.doubleSidedType="normal",this.cullFace=i.Back,this.emissiveFactor=(0,S.f)(0,0,0),this.instancedDoublePrecision=!1,this.normals="default",this.receiveSSAO=!0,this.receiveShadows=!0,this.castShadows=!0,this.shadowMappingEnabled=!1,this.ambient=(0,S.f)(.2,.2,.2),this.diffuse=(0,S.f)(.8,.8,.8),this.externalColor=(0,pe.a)(1,1,1,1),this.colorMixMode="multiply",this.opacity=1,this.layerOpacity=1,this.origin=(0,S.h)(),this.hasSlicePlane=!1,this.hasSliceHighlight=!0,this.offsetTransparentBackfaces=!1,this.vvSizeEnabled=!1,this.vvSizeMinSize=[1,1,1],this.vvSizeMaxSize=[100,100,100],this.vvSizeOffset=[0,0,0],this.vvSizeFactor=[1,1,1],this.vvSizeValue=[1,1,1],this.vvColorEnabled=!1,this.vvColorValues=[0,0,0,0,0,0,0,0],this.vvColorColors=[1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0],this.vvSymbolAnchor=[0,0,0],this.vvSymbolRotationMatrix=(0,b.b)(),this.vvOpacityEnabled=!1,this.vvOpacityValues=[],this.vvOpacityOpacities=[],this.transparent=!1,this.writeDepth=!0,this.customDepthTest=o.Less,this.textureAlphaMode=p.Blend,this.textureAlphaCutoff=.1,this.textureAlphaPremultiplied=!1,this.hasOccludees=!1,this.renderOccluded=ue.Occlude}}class Bo extends Fr{constructor(){super(...arguments),this.origin=(0,S.h)(),this.slicePlaneLocalOrigin=this.origin}}class Vo extends class{constructor(e,t,r){this.release=r,t&&(this.initializeConfiguration(e,t),this._configuration=t.snapshot()),this._program=this.initializeProgram(e),this._pipeline=this.initializePipeline(e.rctx.capabilities)}destroy(){this._program=(0,x.j)(this._program),this._pipeline=this._configuration=null}reload(e){(0,x.j)(this._program),this._program=this.initializeProgram(e),this._pipeline=this.initializePipeline(e.rctx.capabilities)}get program(){return this._program}get compiled(){return this.program.isCompiled}get key(){return this._configuration.key}get configuration(){return this._configuration}bindPass(e,t){this.program.bindPass(e,t)}bindDraw(e,t){this.program.bindDraw(e,t),this.program.rebindTextures()}bindPipelineState(e,t=null,r){e.setPipelineState(this.getPipelineState(t,r))}ensureAttributeLocations(e){this.program.assertCompatibleVertexAttributeLocations(e)}get primitiveType(){return me.P.TRIANGLES}getPipelineState(e,t){return this._pipeline}initializeConfiguration(e,t){}}{initializeConfiguration(e,t){t.spherical=e.viewingMode===F.Global,t.doublePrecisionRequiresObfuscation=function(e){return!!(0,H.h)("force-double-precision-obfuscation")||e.driverTest.doublePrecisionRequiresObfuscation}(e.rctx),t.textureCoordinateType=t.hasColorTexture||t.hasMetalnessAndRoughnessTexture||t.hasEmissionTexture||t.hasOcclusionTexture||t.hasNormalTexture?xr.Default:xr.None}initializeProgram(e){return this._initializeProgram(e,Vo.shader)}_initializeProgram(e,t){const r=t.get().build(this.configuration);return new We(e.rctx,r,Y)}_convertDepthTestFunction(e){return e===o.Lequal?me.C.LEQUAL:me.C.LESS}_setPipeline(e,t){const r=this.configuration,i=e===a.NONE,o=e===a.FrontFace;return function(e){return Ui.intern(e)}({blending:r.output!==Le.Color&&r.output!==Le.Alpha||!r.transparent?null:i?Gi:ki(e),culling:Uo(r)&&di(r.cullFace),depthTest:{func:qi(e,this._convertDepthTestFunction(r.customDepthTest))},depthWrite:i||o?r.writeDepth&&ui:null,colorWrite:hi,stencilWrite:r.hasOccludees?$e:null,stencilTest:r.hasOccludees?t?Xe:qe:null,polygonOffset:i||o?null:$i(r.enableOffset)})}initializePipeline(){return this._occludeePipelineState=this._setPipeline(this.configuration.transparencyPassType,!0),this._setPipeline(this.configuration.transparencyPassType,!1)}getPipelineState(e,t){return t?this._occludeePipelineState:super.getPipelineState(e,t)}}function Uo(e){return e.cullFace!==i.None||!e.hasSlicePlane&&!e.transparent&&!e.doubleSidedMode}Vo.shader=new ke(Lo,(()=>Promise.resolve().then((()=>Lo))));class Go extends Ut{constructor(){super(...arguments),this.output=Le.Color,this.alphaDiscardMode=p.Opaque,this.doubleSidedMode=co.None,this.pbrMode=Wr.Disabled,this.cullFace=i.None,this.transparencyPassType=a.NONE,this.normalType=vr.Attribute,this.textureCoordinateType=xr.None,this.customDepthTest=o.Less,this.spherical=!1,this.hasVertexColors=!1,this.hasSymbolColors=!1,this.hasVerticalOffset=!1,this.hasSlicePlane=!1,this.hasSliceHighlight=!0,this.hasColorTexture=!1,this.hasMetalnessAndRoughnessTexture=!1,this.hasEmissionTexture=!1,this.hasOcclusionTexture=!1,this.hasNormalTexture=!1,this.hasScreenSizePerspective=!1,this.hasVertexTangents=!1,this.hasOccludees=!1,this.hasMultipassTerrain=!1,this.hasModelTransformation=!1,this.offsetBackfaces=!1,this.vvSize=!1,this.vvColor=!1,this.receiveShadows=!1,this.receiveAmbientOcclusion=!1,this.textureAlphaPremultiplied=!1,this.instanced=!1,this.instancedColor=!1,this.instancedDoublePrecision=!1,this.doublePrecisionRequiresObfuscation=!1,this.writeDepth=!0,this.transparent=!1,this.enableOffset=!0,this.cullAboveGround=!1,this.snowCover=!1}}(0,xe._)([Te({count:Le.COUNT})],Go.prototype,"output",void 0),(0,xe._)([Te({count:p.COUNT})],Go.prototype,"alphaDiscardMode",void 0),(0,xe._)([Te({count:co.COUNT})],Go.prototype,"doubleSidedMode",void 0),(0,xe._)([Te({count:Wr.COUNT})],Go.prototype,"pbrMode",void 0),(0,xe._)([Te({count:i.COUNT})],Go.prototype,"cullFace",void 0),(0,xe._)([Te({count:a.COUNT})],Go.prototype,"transparencyPassType",void 0),(0,xe._)([Te({count:vr.COUNT})],Go.prototype,"normalType",void 0),(0,xe._)([Te({count:xr.COUNT})],Go.prototype,"textureCoordinateType",void 0),(0,xe._)([Te({count:o.COUNT})],Go.prototype,"customDepthTest",void 0),(0,xe._)([Te()],Go.prototype,"spherical",void 0),(0,xe._)([Te()],Go.prototype,"hasVertexColors",void 0),(0,xe._)([Te()],Go.prototype,"hasSymbolColors",void 0),(0,xe._)([Te()],Go.prototype,"hasVerticalOffset",void 0),(0,xe._)([Te()],Go.prototype,"hasSlicePlane",void 0),(0,xe._)([Te()],Go.prototype,"hasSliceHighlight",void 0),(0,xe._)([Te()],Go.prototype,"hasColorTexture",void 0),(0,xe._)([Te()],Go.prototype,"hasMetalnessAndRoughnessTexture",void 0),(0,xe._)([Te()],Go.prototype,"hasEmissionTexture",void 0),(0,xe._)([Te()],Go.prototype,"hasOcclusionTexture",void 0),(0,xe._)([Te()],Go.prototype,"hasNormalTexture",void 0),(0,xe._)([Te()],Go.prototype,"hasScreenSizePerspective",void 0),(0,xe._)([Te()],Go.prototype,"hasVertexTangents",void 0),(0,xe._)([Te()],Go.prototype,"hasOccludees",void 0),(0,xe._)([Te()],Go.prototype,"hasMultipassTerrain",void 0),(0,xe._)([Te()],Go.prototype,"hasModelTransformation",void 0),(0,xe._)([Te()],Go.prototype,"offsetBackfaces",void 0),(0,xe._)([Te()],Go.prototype,"vvSize",void 0),(0,xe._)([Te()],Go.prototype,"vvColor",void 0),(0,xe._)([Te()],Go.prototype,"receiveShadows",void 0),(0,xe._)([Te()],Go.prototype,"receiveAmbientOcclusion",void 0),(0,xe._)([Te()],Go.prototype,"textureAlphaPremultiplied",void 0),(0,xe._)([Te()],Go.prototype,"instanced",void 0),(0,xe._)([Te()],Go.prototype,"instancedColor",void 0),(0,xe._)([Te()],Go.prototype,"instancedDoublePrecision",void 0),(0,xe._)([Te()],Go.prototype,"doublePrecisionRequiresObfuscation",void 0),(0,xe._)([Te()],Go.prototype,"writeDepth",void 0),(0,xe._)([Te()],Go.prototype,"transparent",void 0),(0,xe._)([Te()],Go.prototype,"enableOffset",void 0),(0,xe._)([Te()],Go.prototype,"cullAboveGround",void 0),(0,xe._)([Te()],Go.prototype,"snowCover",void 0),(0,xe._)([Te({constValue:!0})],Go.prototype,"hasVvInstancing",void 0),(0,xe._)([Te({constValue:!1})],Go.prototype,"useCustomDTRExponentForWater",void 0),(0,xe._)([Te({constValue:!1})],Go.prototype,"supportsTextureAtlas",void 0),(0,xe._)([Te({constValue:!0})],Go.prototype,"useFillLights",void 0);const zo=Object.freeze(Object.defineProperty({__proto__:null,build:function(e){const t=new yt,r=t.vertex.code,i=t.fragment.code,o=Et(t,e);return t.include(wr),t.varyings.add("vpos","vec3"),t.include(so,e),t.include(ho,e),t.include(no,e),e.output!==Le.Color&&e.output!==Le.Alpha||(At(t.vertex,e),t.include(Mr,e),t.include(at),e.offsetBackfaces&&t.include(uo),e.instancedColor&&t.attributes.add(z.V.INSTANCECOLOR,"vec4"),t.varyings.add("vNormalWorld","vec3"),t.varyings.add("localvpos","vec3"),e.hasMultipassTerrain&&t.varyings.add("depth","float"),t.include(Br,e),t.include(qr,e),t.include(Ao,e),t.include(ro,e),t.vertex.uniforms.add(new Mt("externalColor",(e=>e.externalColor))),t.varyings.add("vcolorExt","vec4"),r.add(j`
        void main(void) {
          forwardNormalizedVertexColor();
          vcolorExt = externalColor;
          ${e.instancedColor?"vcolorExt *= instanceColor;":""}
          vcolorExt *= vvColor();
          vcolorExt *= getSymbolColor();
          forwardColorMixMode();

          if (vcolorExt.a < ${j.float(vt)}) {
            gl_Position = vec4(1e38, 1e38, 1e38, 1.0);
          } else {
            vpos = calculateVPos();
            localvpos = vpos - view[3].xyz;
            vpos = subtractOrigin(vpos);
            vNormalWorld = dpNormal(vvLocalNormal(normalModel()));
            vpos = addVerticalOffset(vpos, localOrigin);
            gl_Position = transformPosition(proj, view, vpos);
            ${e.offsetBackfaces?"gl_Position = offsetBackfacingClipPosition(gl_Position, vpos, vNormalWorld, cameraPosition);":""}
          }
          ${e.hasMultipassTerrain?j`depth = (view * vec4(vpos, 1.0)).z;`:""}
          forwardLinearDepth();
          forwardTextureCoordinates();
        }
      `)),e.output===Le.Alpha&&(t.include(Ze,e),t.include(Ro,e),t.include(_t,e),t.fragment.uniforms.add([new Gt("opacity",(e=>e.opacity)),new Gt("layerOpacity",(e=>e.layerOpacity)),new ni("view")]),e.hasColorTexture&&t.fragment.uniforms.add(new dt("tex",(e=>e.texture))),t.fragment.include(Io),i.add(j`
      void main() {
        discardBySlice(vpos);
        ${e.hasMultipassTerrain?j`terrainDepthTest(gl_FragCoord, depth);`:""}
        ${e.hasColorTexture?j`
                vec4 texColor = texture2D(tex, vuv0);
                ${e.textureAlphaPremultiplied?"texColor.rgb /= texColor.a;":""}
                discardOrAdjustAlpha(texColor);`:j`vec4 texColor = vec4(1.0);`}
        ${e.hasVertexColors?j`float opacity_ = layerOpacity * mixExternalOpacity(vColor.a * opacity, texColor.a, vcolorExt.a, int(colorMixMode));`:j`float opacity_ = layerOpacity * mixExternalOpacity(opacity, texColor.a, vcolorExt.a, int(colorMixMode));`}

        gl_FragColor = vec4(opacity_);
      }
    `)),e.output===Le.Color&&(t.include(Ze,e),t.include(Po,e),t.include(Oo,e),t.include(Ro,e),t.include(e.instancedDoublePrecision?Jr:ei,e),t.include(_t,e),At(t.fragment,e),t.fragment.uniforms.add([o,new Ke("ambient",(e=>e.ambient)),new Ke("diffuse",(e=>e.diffuse)),new Gt("opacity",(e=>e.opacity)),new Gt("layerOpacity",(e=>e.layerOpacity)),new ni("view"),new Gt("lightingGlobalFactor",((e,t)=>t.lighting.globalFactor)),new Ke("lightingMainIntensity",((e,t)=>t.lighting.mainLight.intensity))]),t.fragment.constants.add("ambientBoostFactor","float",.4),e.hasColorTexture&&t.fragment.uniforms.add(new dt("tex",(e=>e.texture))),t.include($r,e),t.include(ii,e),t.fragment.include(Io),t.extensions.add("GL_OES_standard_derivatives"),i.add(j`
      void main() {
        discardBySlice(vpos);
        ${e.hasMultipassTerrain?j`terrainDepthTest(gl_FragCoord, depth);`:""}
        ${e.hasColorTexture?j`
                vec4 texColor = texture2D(tex, vuv0);
                ${e.textureAlphaPremultiplied?"texColor.rgb /= texColor.a;":""}
                discardOrAdjustAlpha(texColor);`:j`vec4 texColor = vec4(1.0);`}
        vec3 viewDirection = normalize(vpos - cameraPosition);
        ${e.pbrMode===Wr.Normal?"applyPBRFactors();":""}
        float ssao = evaluateAmbientOcclusionInverse();
        ssao *= getBakedOcclusion();

        float additionalAmbientScale = additionalDirectedAmbientLight(vpos + localOrigin);
        vec3 additionalLight = ssao * lightingMainIntensity * additionalAmbientScale * ambientBoostFactor * lightingGlobalFactor;
        ${e.receiveShadows?"float shadow = readShadowMap(vpos, linearDepth);":e.spherical?"float shadow = lightingGlobalFactor * (1.0 - additionalAmbientScale);":"float shadow = 0.0;"}
        vec3 matColor = max(ambient, diffuse);
        ${e.hasVertexColors?j`
                vec3 albedo = mixExternalColor(vColor.rgb * matColor, texColor.rgb, vcolorExt.rgb, int(colorMixMode));
                float opacity_ = layerOpacity * mixExternalOpacity(vColor.a * opacity, texColor.a, vcolorExt.a, int(colorMixMode));`:j`
                vec3 albedo = mixExternalColor(matColor, texColor.rgb, vcolorExt.rgb, int(colorMixMode));
                float opacity_ = layerOpacity * mixExternalOpacity(opacity, texColor.a, vcolorExt.a, int(colorMixMode));`}
        ${e.snowCover?j`albedo = mix(albedo, vec3(1), 0.9);`:j``}
        ${j`
            vec3 shadingNormal = normalize(vNormalWorld);
            albedo *= 1.2;
            vec3 viewForward = vec3(view[0][2], view[1][2], view[2][2]);
            float alignmentLightView = clamp(dot(viewForward, -lightingMainDirection), 0.0, 1.0);
            float transmittance = 1.0 - clamp(dot(viewForward, shadingNormal), 0.0, 1.0);
            float treeRadialFalloff = vColor.r;
            float backLightFactor = 0.5 * treeRadialFalloff * alignmentLightView * transmittance * (1.0 - shadow);
            additionalLight += backLightFactor * lightingMainIntensity;`}
        ${e.pbrMode===Wr.Normal||e.pbrMode===Wr.Schematic?e.spherical?j`vec3 normalGround = normalize(vpos + localOrigin);`:j`vec3 normalGround = vec3(0.0, 0.0, 1.0);`:j``}
        ${e.pbrMode===Wr.Normal||e.pbrMode===Wr.Schematic?j`
                float additionalAmbientIrradiance = additionalAmbientIrradianceFactor * lightingMainIntensity[2];
                ${e.snowCover?j`
                        mrr = vec3(0.0, 1.0, 0.04);
                        emission = vec3(0.0);`:""}

                vec3 shadedColor = evaluateSceneLightingPBR(shadingNormal, albedo, shadow, 1.0 - ssao, additionalLight, viewDirection, normalGround, mrr, emission, additionalAmbientIrradiance);`:j`vec3 shadedColor = evaluateSceneLighting(shadingNormal, albedo, shadow, 1.0 - ssao, additionalLight);`}
        gl_FragColor = highlightSlice(vec4(shadedColor, opacity_), vpos);
        ${e.transparencyPassType===a.Color?j`gl_FragColor = premultiplyAlpha(gl_FragColor);`:j``}
      }
    `)),t.include(Co,e),t}},Symbol.toStringTag,{value:"Module"}));class Ho extends Vo{initializeConfiguration(e,t){super.initializeConfiguration(e,t),t.hasMetalnessAndRoughnessTexture=!1,t.hasEmissionTexture=!1,t.hasOcclusionTexture=!1,t.hasNormalTexture=!1,t.hasModelTransformation=!1,t.normalType=vr.Attribute,t.doubleSidedMode=co.WindingOrder,t.hasVertexTangents=!1}initializeProgram(e){return this._initializeProgram(e,Ho.shader)}}Ho.shader=new ke(zo,(()=>Promise.resolve().then((()=>zo))));class ko extends de{constructor(e){super(e,$o),this.supportsEdges=!0,this.techniqueConfig=new Go,this.vertexBufferLayout=function(e){const t=e.textureId||e.normalTextureId||e.metallicRoughnessTextureId||e.emissiveTextureId||e.occlusionTextureId,r=(0,Tr.n)().vec3f(z.V.POSITION).vec3f(z.V.NORMAL);return e.hasVertexTangents&&r.vec4f(z.V.TANGENT),t&&r.vec2f(z.V.UV0),e.hasVertexColors&&r.vec4u8(z.V.COLOR),e.hasSymbolColors&&r.vec4u8(z.V.SYMBOLCOLOR),r}(this.parameters),this.instanceBufferLayout=e.instanced?Xo(this.parameters):null}isVisibleInPass(e){return e!==Xi.MATERIAL_DEPTH_SHADOWMAP_ALL&&e!==Xi.MATERIAL_DEPTH_SHADOWMAP_DEFAULT&&e!==Xi.MATERIAL_DEPTH_SHADOWMAP_HIGHLIGHT||this.parameters.castShadows}isVisible(){const e=this.parameters;if(!super.isVisible()||0===e.layerOpacity)return!1;const{instanced:t,hasVertexColors:r,hasSymbolColors:i,vvColorEnabled:o}=e,n=(0,x.i)(t)&&t.includes("color"),a="replace"===e.colorMixMode,s=e.opacity>0,l=e.externalColor&&e.externalColor[3]>0;return r&&(n||o||i)?!!a||s:r?a?l:s:n||o||i?!!a||s:a?l:s}getConfiguration(e,t){return this.techniqueConfig.output=e,this.techniqueConfig.hasNormalTexture=!!this.parameters.normalTextureId,this.techniqueConfig.hasColorTexture=!!this.parameters.textureId,this.techniqueConfig.hasVertexTangents=this.parameters.hasVertexTangents,this.techniqueConfig.instanced=!!this.parameters.instanced,this.techniqueConfig.instancedDoublePrecision=this.parameters.instancedDoublePrecision,this.techniqueConfig.vvSize=this.parameters.vvSizeEnabled,this.techniqueConfig.hasVerticalOffset=(0,x.i)(this.parameters.verticalOffset),this.techniqueConfig.hasScreenSizePerspective=(0,x.i)(this.parameters.screenSizePerspective),this.techniqueConfig.hasSlicePlane=this.parameters.hasSlicePlane,this.techniqueConfig.hasSliceHighlight=this.parameters.hasSliceHighlight,this.techniqueConfig.alphaDiscardMode=this.parameters.textureAlphaMode,this.techniqueConfig.normalType="screenDerivative"===this.parameters.normals?vr.ScreenDerivative:vr.Attribute,this.techniqueConfig.transparent=this.parameters.transparent,this.techniqueConfig.writeDepth=this.parameters.writeDepth,(0,x.i)(this.parameters.customDepthTest)&&(this.techniqueConfig.customDepthTest=this.parameters.customDepthTest),this.techniqueConfig.hasOccludees=this.parameters.hasOccludees,this.techniqueConfig.cullFace=this.parameters.hasSlicePlane?i.None:this.parameters.cullFace,this.techniqueConfig.hasMultipassTerrain=t.multipassTerrain.enabled,this.techniqueConfig.cullAboveGround=t.multipassTerrain.cullAboveGround,this.techniqueConfig.hasModelTransformation=(0,x.i)(this.parameters.modelTransformation),e!==Le.Color&&e!==Le.Alpha||(this.techniqueConfig.hasVertexColors=this.parameters.hasVertexColors,this.techniqueConfig.hasSymbolColors=this.parameters.hasSymbolColors,this.parameters.treeRendering?this.techniqueConfig.doubleSidedMode=co.WindingOrder:this.techniqueConfig.doubleSidedMode=this.parameters.doubleSided&&"normal"===this.parameters.doubleSidedType?co.View:this.parameters.doubleSided&&"winding-order"===this.parameters.doubleSidedType?co.WindingOrder:co.None,this.techniqueConfig.instancedColor=(0,x.i)(this.parameters.instanced)&&this.parameters.instanced.includes("color"),this.techniqueConfig.receiveShadows=this.parameters.receiveShadows&&this.parameters.shadowMappingEnabled,this.techniqueConfig.receiveAmbientOcclusion=!!t.ssaoHelper.ready&&this.parameters.receiveSSAO,this.techniqueConfig.vvColor=this.parameters.vvColorEnabled,this.techniqueConfig.textureAlphaPremultiplied=!!this.parameters.textureAlphaPremultiplied,this.techniqueConfig.pbrMode=this.parameters.usePBR?this.parameters.isSchematic?Wr.Schematic:Wr.Normal:Wr.Disabled,this.techniqueConfig.hasMetalnessAndRoughnessTexture=!!this.parameters.metallicRoughnessTextureId,this.techniqueConfig.hasEmissionTexture=!!this.parameters.emissiveTextureId,this.techniqueConfig.hasOcclusionTexture=!!this.parameters.occlusionTextureId,this.techniqueConfig.offsetBackfaces=!(!this.parameters.transparent||!this.parameters.offsetTransparentBackfaces),this.techniqueConfig.transparencyPassType=t.transparencyPassType,this.techniqueConfig.enableOffset=t.camera.relativeElevation<5e5,this.techniqueConfig.snowCover=this.hasSnowCover(t)),this.techniqueConfig}hasSnowCover(e){return(0,x.i)(e.weather)&&e.weatherVisible&&"snowy"===e.weather.type&&"enabled"===e.weather.snowCover}intersect(e,t,r,i,o,n,a){if((0,x.i)(this.parameters.verticalOffset)){const e=i.camera;(0,S.s)(Jo,r[12],r[13],r[14]);let t=null;switch(i.viewingMode){case F.Global:t=(0,S.n)(Zo,Jo);break;case F.Local:t=(0,S.a)(Zo,Ko)}let a=0;const s=(0,S.d)(en,Jo,e.eye),l=(0,S.e)(s),c=(0,S.o)(s,s,1/l);let d=null;this.parameters.screenSizePerspective&&(d=(0,S.j)(t,c)),a+=function(e,t,r,i,o){let n=(r.screenLength||0)*e.pixelRatio;(0,x.i)(o)&&(n=function(e,t,r,i){return function(e,t){return Math.max((0,S.H)(e*t.scale,e,t.factor),function(e,t){return 0===e?t.minPixelSize:t.minPixelSize*(1+2*t.paddingPixels/e)}(e,t))}(e,function(e,t,r){const i=r.parameters,o=r.paddingPixelsOverride;return K.scale=Math.min(i.divisor/(t-i.offset),1),K.factor=function(e){return Math.abs(e*e*e)}(e),K.minPixelSize=i.minPixelSize,K.paddingPixels=o,K}(t,r,i))}(n,i,t,o));const a=n*Math.tan(.5*e.fovY)/(.5*e.fullHeight);return(0,S.c)(a*t,r.minWorldLength||0,null!=r.maxWorldLength?r.maxWorldLength:1/0)}(e,l,this.parameters.verticalOffset,d,this.parameters.screenSizePerspective),(0,S.o)(t,t,a),(0,S.F)(Qo,t,i.transform.inverseRotation),o=(0,S.d)(jo,o,Qo),n=(0,S.d)(Yo,n,Qo)}Q(e,t,i,o,n,function(e){return(0,x.i)(e)?(eo.offset=e,eo):null}(i.verticalOffset),a)}requiresSlot(e){return e===(this.parameters.transparent?this.parameters.writeDepth?ji.TRANSPARENT_MATERIAL:ji.TRANSPARENT_DEPTH_WRITE_DISABLED_MATERIAL:ji.OPAQUE_MATERIAL)||e===ji.DRAPED_MATERIAL}createGLMaterial(e){return e.output===Le.Color||e.output===Le.Alpha||e.output===Le.Depth||e.output===Le.Normal||e.output===Le.Shadow||e.output===Le.Highlight?new Wo(e):null}createBufferWriter(){return new qo(this.vertexBufferLayout,this.instanceBufferLayout)}}class Wo extends class extends class{constructor(e){this._material=e.material,this._techniqueRepository=e.techniqueRep,this._output=e.output}dispose(){this._techniqueRepository.release(this._technique)}get technique(){return this._technique}ensureTechnique(e,t,r=this._output){return this._technique=this._techniqueRepository.releaseAndAcquire(e,this._material.getConfiguration(r,t),this._technique),this._technique}ensureResources(e){return l.LOADED}}{constructor(e){super(e),this._numLoading=0,this._disposed=!1,this._textureRepository=e.textureRep,this._textureId=e.textureId,this._acquire(e.textureId,(e=>this._texture=e)),this._acquire(e.normalTextureId,(e=>this._textureNormal=e)),this._acquire(e.emissiveTextureId,(e=>this._textureEmissive=e)),this._acquire(e.occlusionTextureId,(e=>this._textureOcclusion=e)),this._acquire(e.metallicRoughnessTextureId,(e=>this._textureMetallicRoughness=e))}dispose(){this._texture=(0,x.k)(this._texture),this._textureNormal=(0,x.k)(this._textureNormal),this._textureEmissive=(0,x.k)(this._textureEmissive),this._textureOcclusion=(0,x.k)(this._textureOcclusion),this._textureMetallicRoughness=(0,x.k)(this._textureMetallicRoughness),this._disposed=!0}ensureResources(e){return 0===this._numLoading?l.LOADED:l.LOADING}get textureBindParameters(){return new ai((0,x.i)(this._texture)?this._texture.glTexture:null,(0,x.i)(this._textureNormal)?this._textureNormal.glTexture:null,(0,x.i)(this._textureEmissive)?this._textureEmissive.glTexture:null,(0,x.i)(this._textureOcclusion)?this._textureOcclusion.glTexture:null,(0,x.i)(this._textureMetallicRoughness)?this._textureMetallicRoughness.glTexture:null)}updateTexture(e){((0,x.a)(this._texture)||e!==this._texture.id)&&(this._texture=(0,x.k)(this._texture),this._textureId=e,this._acquire(this._textureId,(e=>this._texture=e)))}_acquire(e,t){if((0,x.a)(e))return void t(null);const r=this._textureRepository.acquire(e);if((0,D.y8)(r))return++this._numLoading,void r.then((e=>{if(this._disposed)return(0,x.k)(e),void t(null);t(e)})).finally((()=>--this._numLoading));t(r)}}{constructor(e){super({...e,...e.material.parameters})}_updateParameters(e){const t=this._material.parameters;this.updateTexture(t.textureId);const r=e.camera.viewInverseTransposeMatrix;return(0,S.s)(t.origin,r[3],r[7],r[11]),this._material.setParameters(this.textureBindParameters),this.ensureTechnique(t.treeRendering?Ho:Vo,e)}_updateShadowState(e){e.shadowMap.enabled!==this._material.parameters.shadowMappingEnabled&&this._material.setParameters({shadowMappingEnabled:e.shadowMap.enabled})}_updateOccludeeState(e){e.hasOccludees!==this._material.parameters.hasOccludees&&this._material.setParameters({hasOccludees:e.hasOccludees})}beginSlot(e){return this._output!==Le.Color&&this._output!==Le.Alpha||(this._updateShadowState(e),this._updateOccludeeState(e)),this._updateParameters(e)}}const $o=new class extends Fo{constructor(){super(...arguments),this.initTextureTransparent=!1,this.treeRendering=!1,this.hasVertexTangents=!1}};class qo{constructor(e,t){this.vertexBufferLayout=e,this.instanceBufferLayout=t}allocate(e){return this.vertexBufferLayout.createBuffer(e)}elementCount(e){return e.indices.get(z.V.POSITION).length}write(e,t,r,i){!function(e,t,r,i,o,n){for(const a of t.fieldNames){const t=e.vertexAttributes.get(a),s=e.indices.get(a);if(t&&s)switch(a){case z.V.POSITION:{(0,U.a)(3===t.size);const e=o.getField(a,M.B);e&&Ue(s,t.data,r,e,n);break}case z.V.NORMAL:{(0,U.a)(3===t.size);const e=o.getField(a,M.B);e&&Ge(s,t.data,i,e,n);break}case z.V.UV0:{(0,U.a)(2===t.size);const e=o.getField(a,M.c);e&&Be(s,t.data,e,n);break}case z.V.COLOR:{(0,U.a)(3===t.size||4===t.size);const e=o.getField(a,M.b);e&&He(s,t.data,t.size,e,n);break}case z.V.SYMBOLCOLOR:{(0,U.a)(3===t.size||4===t.size);const e=o.getField(a,M.b);e&&He(s,t.data,t.size,e,n);break}case z.V.TANGENT:{(0,U.a)(4===t.size);const e=o.getField(a,M.a);e&&ze(s,t.data,i,e,n);break}}}}(t,this.vertexBufferLayout,e.transformation,e.invTranspTransformation,r,i)}}function Xo(e){let t=(0,Tr.n)();return t=e.instancedDoublePrecision?t.vec3f(z.V.MODELORIGINHI).vec3f(z.V.MODELORIGINLO).mat3f(z.V.MODEL).mat3f(z.V.MODELNORMAL):t.mat4f(z.V.MODEL).mat4f(z.V.MODELNORMAL),(0,x.i)(e.instanced)&&e.instanced.includes("color")&&(t=t.vec4f(z.V.INSTANCECOLOR)),(0,x.i)(e.instanced)&&e.instanced.includes("featureAttribute")&&(t=t.vec4f(z.V.INSTANCEFEATUREATTRIBUTE)),t}const jo=(0,S.h)(),Yo=(0,S.h)(),Ko=(0,S.f)(0,0,1),Zo=(0,S.h)(),Qo=(0,S.h)(),Jo=(0,S.h)(),en=(0,S.h)(),tn=P.L.getLogger("esri.views.3d.layers.graphics.objectResourceUtils");async function rn(e,t){const r=await async function(e,t){const r=(0,x.i)(t)&&t.streamDataRequester;if(r)return async function(e,t,r){const i=await(0,O.r)(t.request(e,"json",r));return!0===i.ok?i.value:((0,D.r9)(i.error),void on(i.error.details.url))}(e,r,t);const i=await(0,O.r)((0,y.default)(e,(0,x.u)(t)));return!0===i.ok?i.value.data:((0,D.r9)(i.error),void on(i.error))}(e,t),i=await async function(e,t){const r=[];for(const i in e){const o=e[i],n=o.images[0].data;if(!n){tn.warn("Externally referenced texture data is not yet supported");continue}const a=o.encoding+";base64,"+n,s="/textureDefinitions/"+i,l="rgba"===o.channels?o.alphaChannelUsage||"transparency":"none",c={noUnpackFlip:!0,wrap:{s:me.f.REPEAT,t:me.f.REPEAT},preMultiplyAlpha:sn(l)!==p.Opaque},d=(0,x.i)(t)&&t.disableTextures?Promise.resolve(null):L(a,t);r.push(d.then((e=>({refId:s,image:e,params:c,alphaChannelUsage:l}))))}const i=await Promise.all(r),o={};for(const e of i)o[e.refId]=e;return o}(r.textureDefinitions,t);return{resource:r,textures:i}}function on(e){throw new N.Z("",`Request for object resource failed: ${e}`)}function nn(e){const t=e.params,r=t.topology;let i=!0;switch(t.vertexAttributes||(tn.warn("Geometry must specify vertex attributes"),i=!1),t.topology){case"PerAttributeArray":break;case"Indexed":case null:case void 0:{const e=t.faces;if(e){if(t.vertexAttributes)for(const r in t.vertexAttributes){const t=e[r];t&&t.values?(null!=t.valueType&&"UInt32"!==t.valueType&&(tn.warn(`Unsupported indexed geometry indices type '${t.valueType}', only UInt32 is currently supported`),i=!1),null!=t.valuesPerElement&&1!==t.valuesPerElement&&(tn.warn(`Unsupported indexed geometry values per element '${t.valuesPerElement}', only 1 is currently supported`),i=!1)):(tn.warn(`Indexed geometry does not specify face indices for '${r}' attribute`),i=!1)}}else tn.warn("Indexed geometries must specify faces"),i=!1;break}default:tn.warn(`Unsupported topology '${r}'`),i=!1}e.params.material||(tn.warn("Geometry requires material"),i=!1);const o=e.params.vertexAttributes;for(const e in o)o[e].values||(tn.warn("Geometries with externally defined attributes are not yet supported"),i=!1);return i}function an(e){const t=(0,R.g)();return e.forEach((e=>{const r=e.boundingInfo;(0,x.i)(r)&&((0,R.e)(t,r.getBBMin()),(0,R.e)(t,r.getBBMax()))})),t}function sn(e){switch(e){case"mask":return p.Mask;case"maskAndTransparency":return p.MaskBlend;case"none":return p.Opaque;default:return p.Blend}}function ln(e){const t=e.params;return{id:1,material:t.material,texture:t.texture,region:t.texture}}const cn=new I.V(1,2,"wosr");async function dn(e,t){const r=un((0,v.a)(e));if("wosr"===r.fileType){const e=await(t.cache?t.cache.loadWOSR(r.url,t):rn(r.url,t)),o=function(e,t){const r=[],o=[],n=[],a=[],s=e.resource,l=I.V.parse(s.version||"1.0","wosr");cn.validate(l);const c=s.model.name,d=s.model.geometries,u=s.materialDefinitions,h=e.textures;let m=0;const f=new Map;for(let e=0;e<d.length;e++){const s=d[e];if(!nn(s))continue;const l=ln(s),c=s.params.vertexAttributes,p=[];for(const e in c){const t=c[e],r=t.values;p.push([e,{data:r,size:t.valuesPerElement,exclusive:!0}])}const g=[];if("PerAttributeArray"!==s.params.topology){const e=s.params.faces;for(const t in e)g.push([t,new Uint32Array(e[t].values)])}const _=h&&h[l.texture];if(_&&!f.has(l.texture)){const{image:e,params:t}=_,r=new gr(e,t);a.push(r),f.set(l.texture,r)}const v=f.get(l.texture),T=v?v.id:void 0;let b=n[l.material]?n[l.material][l.texture]:null;if(!b){const e=u[l.material.substring(l.material.lastIndexOf("/")+1)].params;1===e.transparency&&(e.transparency=0);const r=_&&_.alphaChannelUsage,o=e.transparency>0||"transparency"===r||"maskAndTransparency"===r,a=_?sn(_.alphaChannelUsage):void 0,s={ambient:(0,S.M)(e.diffuse),diffuse:(0,S.M)(e.diffuse),opacity:1-(e.transparency||0),transparent:o,textureAlphaMode:a,textureAlphaCutoff:.33,textureId:T,initTextureTransparent:!0,doubleSided:!0,cullFace:i.None,colorMixMode:e.externalColorMixMode||"tint",textureAlphaPremultiplied:!!_&&!!_.params.preMultiplyAlpha};(0,x.i)(t)&&t.materialParamsMixin&&Object.assign(s,t.materialParamsMixin),b=new ko(s),n[l.material]||(n[l.material]={}),n[l.material][l.texture]=b}o.push(b);const A=new De(p,g);m+=g.position?g.position.length:0,r.push(A)}return{name:c,stageResources:{textures:a,materials:o,geometries:r},pivotOffset:s.model.pivotOffset,boundingBox:an(r),numberOfVertices:m,lodThreshold:null}}(e,t);return{lods:[o],referenceBoundingBox:o.boundingBox,isEsriSymbolResource:!1,isWosr:!0,remove:e.remove}}const o=await(t.cache?t.cache.loadGLTF(r.url,t,t.usePBR):(0,C.l)(new C.D(t.streamDataRequester),r.url,t,t.usePBR)),n=(0,x.h)(o.model.meta,"ESRI_proxyEllipsoid");o.meta.isEsriSymbolResource&&(0,x.i)(n)&&o.meta.uri.includes("/RealisticTrees/")&&function(e,t){for(let r=0;r<e.model.lods.length;++r){const i=e.model.lods[r];e.customMeta.esriTreeRendering=!0;for(const o of i.parts){const i=o.attributes.normal;if((0,x.a)(i))return;const n=o.attributes.position,a=n.count,s=(0,S.h)(),l=(0,S.h)(),c=(0,S.h)(),d=(0,C.c)(M.b,a),u=(0,C.c)(M.B,a),h=(0,A.j)((0,E.c)(),o.transform);for(let m=0;m<a;m++){n.getVec(m,l),i.getVec(m,s),(0,S.w)(l,l,o.transform),(0,S.d)(c,l,t.center),(0,S.ae)(c,c,t.radius);const a=c[2],f=(0,S.e)(c),p=Math.min(.45+.55*f*f,1);(0,S.ae)(c,c,t.radius),(0,S.w)(c,c,h),(0,S.n)(c,c),r+1!==e.model.lods.length&&e.model.lods.length>1&&(0,S.G)(c,c,s,a>-1?.2:Math.min(-4*a-3.8,1)),u.setVec(m,c),d.set(m,0,255*p),d.set(m,1,255*p),d.set(m,2,255*p),d.set(m,3,255)}o.attributes.normal=u,o.attributes.color=d}}}(o,n);const a=o.meta.isEsriSymbolResource?{usePBR:t.usePBR,isSchematic:!1,treeRendering:!!o.customMeta.esriTreeRendering,mrrFactors:[0,1,.2]}:{usePBR:t.usePBR,isSchematic:!1,treeRendering:!1,mrrFactors:[0,1,.5]},s={...t.materialParamsMixin,treeRendering:!!o.customMeta.esriTreeRendering};if(null!=r.specifiedLodIndex){const e=hn(o,a,s,r.specifiedLodIndex);let t=e[0].boundingBox;return 0!==r.specifiedLodIndex&&(t=hn(o,a,s,0)[0].boundingBox),{lods:e,referenceBoundingBox:t,isEsriSymbolResource:o.meta.isEsriSymbolResource,isWosr:!1,remove:o.remove}}const l=hn(o,a,s);return{lods:l,referenceBoundingBox:l[0].boundingBox,isEsriSymbolResource:o.meta.isEsriSymbolResource,isWosr:!1,remove:o.remove}}function un(e){const t=e.match(/(.*\.(gltf|glb))(\?lod=([0-9]+))?$/);return t?{fileType:"gltf",url:t[1],specifiedLodIndex:null!=t[4]?Number(t[4]):null}:e.match(/(.*\.(json|json\.gz))$/)?{fileType:"wosr",url:e,specifiedLodIndex:null}:{fileType:"unknown",url:e,specifiedLodIndex:null}}function hn(e,t,r,n){const a=e.model,s=(0,b.b)(),l=new Array,c=new Map,d=new Map;return a.lods.forEach(((e,u)=>{if(void 0!==n&&u!==n)return;const h={name:e.name,stageResources:{textures:new Array,materials:new Array,geometries:new Array},lodThreshold:(0,x.i)(e.lodThreshold)?e.lodThreshold:null,pivotOffset:[0,0,0],numberOfVertices:0,boundingBox:(0,R.g)()};l.push(h),e.parts.forEach((e=>{const n=e.material+(e.attributes.normal?"_normal":"")+(e.attributes.color?"_color":"")+(e.attributes.texCoord0?"_texCoord0":"")+(e.attributes.tangent?"_tangent":""),l=a.materials.get(e.material),u=(0,x.i)(e.attributes.texCoord0),m=(0,x.i)(e.attributes.normal),f=function(e){switch(e){case"BLEND":return p.Blend;case"MASK":return p.Mask;case"OPAQUE":case null:case void 0:return p.Opaque}}(l.alphaMode);if(!c.has(n)){if(u){if((0,x.i)(l.textureColor)&&!d.has(l.textureColor)){const e=a.textures.get(l.textureColor),t={...e.parameters,preMultiplyAlpha:f!==p.Opaque};d.set(l.textureColor,new gr(e.data,t))}if((0,x.i)(l.textureNormal)&&!d.has(l.textureNormal)){const e=a.textures.get(l.textureNormal);d.set(l.textureNormal,new gr(e.data,e.parameters))}if((0,x.i)(l.textureOcclusion)&&!d.has(l.textureOcclusion)){const e=a.textures.get(l.textureOcclusion);d.set(l.textureOcclusion,new gr(e.data,e.parameters))}if((0,x.i)(l.textureEmissive)&&!d.has(l.textureEmissive)){const e=a.textures.get(l.textureEmissive);d.set(l.textureEmissive,new gr(e.data,e.parameters))}if((0,x.i)(l.textureMetallicRoughness)&&!d.has(l.textureMetallicRoughness)){const e=a.textures.get(l.textureMetallicRoughness);d.set(l.textureMetallicRoughness,new gr(e.data,e.parameters))}}const s=l.color[0]**(1/C.C),h=l.color[1]**(1/C.C),g=l.color[2]**(1/C.C),_=l.emissiveFactor[0]**(1/C.C),v=l.emissiveFactor[1]**(1/C.C),T=l.emissiveFactor[2]**(1/C.C),b=(0,x.i)(l.textureColor)&&u?d.get(l.textureColor):null;c.set(n,new ko({...t,transparent:f===p.Blend,customDepthTest:o.Lequal,textureAlphaMode:f,textureAlphaCutoff:l.alphaCutoff,diffuse:[s,h,g],ambient:[s,h,g],opacity:l.opacity,doubleSided:l.doubleSided,doubleSidedType:"winding-order",cullFace:l.doubleSided?i.None:i.Back,hasVertexColors:!!e.attributes.color,hasVertexTangents:!!e.attributes.tangent,normals:m?"default":"screenDerivative",castShadows:!0,receiveSSAO:!0,textureId:(0,x.i)(b)?b.id:void 0,colorMixMode:l.colorMixMode,normalTextureId:(0,x.i)(l.textureNormal)&&u?d.get(l.textureNormal).id:void 0,textureAlphaPremultiplied:(0,x.i)(b)&&!!b.params.preMultiplyAlpha,occlusionTextureId:(0,x.i)(l.textureOcclusion)&&u?d.get(l.textureOcclusion).id:void 0,emissiveTextureId:(0,x.i)(l.textureEmissive)&&u?d.get(l.textureEmissive).id:void 0,metallicRoughnessTextureId:(0,x.i)(l.textureMetallicRoughness)&&u?d.get(l.textureMetallicRoughness).id:void 0,emissiveFactor:[_,v,T],mrrFactors:[l.metallicFactor,l.roughnessFactor,t.mrrFactors[2]],isSchematic:!1,...r}))}const g=function(e,t){switch(t){case me.P.TRIANGLES:return(0,C.e)(e);case me.P.TRIANGLE_STRIP:return(0,C.d)(e);case me.P.TRIANGLE_FAN:return(0,C.b)(e)}}(e.indices||e.attributes.position.count,e.primitiveType),_=e.attributes.position.count,v=(0,C.c)(M.B,_);(0,w.t)(v,e.attributes.position,e.transform);const b=[[z.V.POSITION,{data:v.typedBuffer,size:v.elementCount,exclusive:!0}]],A=[[z.V.POSITION,g]];if((0,x.i)(e.attributes.normal)){const t=(0,C.c)(M.B,_);(0,T.a)(s,e.transform),(0,w.a)(t,e.attributes.normal,s),b.push([z.V.NORMAL,{data:t.typedBuffer,size:t.elementCount,exclusive:!0}]),A.push([z.V.NORMAL,g])}if((0,x.i)(e.attributes.tangent)){const t=(0,C.c)(M.a,_);(0,T.a)(s,e.transform),(0,C.t)(t,e.attributes.tangent,s),b.push([z.V.TANGENT,{data:t.typedBuffer,size:t.elementCount,exclusive:!0}]),A.push([z.V.TANGENT,g])}if((0,x.i)(e.attributes.texCoord0)){const t=(0,C.c)(M.c,_);(0,C.n)(t,e.attributes.texCoord0),b.push([z.V.UV0,{data:t.typedBuffer,size:t.elementCount,exclusive:!0}]),A.push([z.V.UV0,g])}if((0,x.i)(e.attributes.color)){const t=(0,C.c)(M.b,_);if(4===e.attributes.color.elementCount)e.attributes.color instanceof M.a?(0,C.s)(t,e.attributes.color,255):e.attributes.color instanceof M.b?(0,C.a)(t,e.attributes.color):e.attributes.color instanceof M.s&&(0,C.s)(t,e.attributes.color,1/256);else{(0,C.f)(t,255,255,255,255);const r=new M.u(t.buffer,0,4);e.attributes.color instanceof M.B?(0,w.s)(r,e.attributes.color,255):e.attributes.color instanceof M.u?(0,w.c)(r,e.attributes.color):e.attributes.color instanceof M.v&&(0,w.s)(r,e.attributes.color,1/256)}b.push([z.V.COLOR,{data:t.typedBuffer,size:t.elementCount,exclusive:!0}]),A.push([z.V.COLOR,g])}const E=new De(b,A);h.stageResources.geometries.push(E),h.stageResources.materials.push(c.get(n)),u&&((0,x.i)(l.textureColor)&&h.stageResources.textures.push(d.get(l.textureColor)),(0,x.i)(l.textureNormal)&&h.stageResources.textures.push(d.get(l.textureNormal)),(0,x.i)(l.textureOcclusion)&&h.stageResources.textures.push(d.get(l.textureOcclusion)),(0,x.i)(l.textureEmissive)&&h.stageResources.textures.push(d.get(l.textureEmissive)),(0,x.i)(l.textureMetallicRoughness)&&h.stageResources.textures.push(d.get(l.textureMetallicRoughness))),h.numberOfVertices+=_;const S=E.boundingInfo;(0,x.i)(S)&&((0,R.e)(h.boundingBox,S.getBBMin()),(0,R.e)(h.boundingBox,S.getBBMax()))}))})),l}const mn=Object.freeze(Object.defineProperty({__proto__:null,fetch:dn,parseUrl:un,gltfToEngineResources:hn},Symbol.toStringTag,{value:"Module"}))},35861:(e,t,r)=>{r.d(t,{c:()=>l,e:()=>d,f:()=>c,g:()=>a,m:()=>s,s:()=>n});var i=r(82426),o=r(29794);function n(e,t,r){r*=.5;const i=Math.sin(r);return e[0]=i*t[0],e[1]=i*t[1],e[2]=i*t[2],e[3]=Math.cos(r),e}function a(e,t){const r=2*Math.acos(t[3]),i=Math.sin(r/2);return i>o.E?(e[0]=t[0]/i,e[1]=t[1]/i,e[2]=t[2]/i):(e[0]=1,e[1]=0,e[2]=0),r}function s(e,t,r){const i=t[0],o=t[1],n=t[2],a=t[3],s=r[0],l=r[1],c=r[2],d=r[3];return e[0]=i*d+a*s+o*c-n*l,e[1]=o*d+a*l+n*s-i*c,e[2]=n*d+a*c+i*l-o*s,e[3]=a*d-i*s-o*l-n*c,e}function l(e,t){return e[0]=-t[0],e[1]=-t[1],e[2]=-t[2],e[3]=t[3],e}function c(e,t,r,i){const o=.5*Math.PI/180;t*=o,r*=o,i*=o;const n=Math.sin(t),a=Math.cos(t),s=Math.sin(r),l=Math.cos(r),c=Math.sin(i),d=Math.cos(i);return e[0]=n*l*d-a*s*c,e[1]=a*s*d+n*l*c,e[2]=a*l*c-n*s*d,e[3]=a*l*d+n*s*c,e}const d=i.B;(0,i.h)(),(0,i.f)(1,0,0),(0,i.f)(0,1,0)},45087:(e,t,r)=>{function i(){return[1,0,0,0,1,0,0,0,1]}function o(e,t){return new Float64Array(e,t,9)}function n(){return[0,0,0,1]}function a(e){return[e[0],e[1],e[2],e[3]]}function s(e,t){return new Float64Array(e,t,4)}r.d(t,{I:()=>l,a:()=>s,b:()=>i,c:()=>o,d:()=>n,e:()=>a});const l=[0,0,0,1]},2420:(e,t,r)=>{r.d(t,{a:()=>s,c:()=>n,w:()=>a}),r(76506);var i=r(67592),o=r(82426);function n(e){return e?{origin:(0,o.q)(e.origin),direction:(0,o.q)(e.direction)}:{origin:(0,o.h)(),direction:(0,o.h)()}}function a(e,t){const r=l.get();return r.origin=e,r.direction=t,r}function s(e,t,r){const i=(0,o.j)(e.direction,(0,o.d)(r,t,e.origin));return(0,o.b)(r,e.origin,(0,o.o)(r,e.direction,i)),r}const l=new i.O((function(){return{origin:null,direction:null}}))},60939:(e,t,r)=>{r.d(t,{c:()=>m,d:()=>f,e:()=>g,g:()=>p,i:()=>x,q:()=>M}),r(76506);var i,o,n=r(92143),a=r(82426),s=r(71252),l=r(65775),c=r(68681),d=r(2420),u=r(67592);(o=i||(i={}))[o.X=0]="X",o[o.Y=1]="Y",o[o.Z=2]="Z",(0,a.h)(),(0,a.h)();const h=n.L.getLogger("esri.geometry.support.sphere");function m(){return(0,c.c)()}function f(e,t=m()){return(0,a.m)(t,e)}function p(e){return e[3]}function g(e){return e}function _(e,t,r){if((0,s.a)(t))return!1;const{origin:i,direction:o}=t,n=v;n[0]=i[0]-e[0],n[1]=i[1]-e[1],n[2]=i[2]-e[2];const a=o[0]*o[0]+o[1]*o[1]+o[2]*o[2],l=2*(o[0]*n[0]+o[1]*n[1]+o[2]*n[2]),c=l*l-4*a*(n[0]*n[0]+n[1]*n[1]+n[2]*n[2]-e[3]*e[3]);if(c<0)return!1;const d=Math.sqrt(c);let u=(-l-d)/(2*a);const h=(-l+d)/(2*a);return(u<0||h<u&&h>0)&&(u=h),!(u<0||(r&&(r[0]=i[0]+o[0]*u,r[1]=i[1]+o[1]*u,r[2]=i[2]+o[2]*u),0))}const v=(0,a.h)();function x(e,t){return _(e,t,null)}function T(e,t,r){const i=u.s.get(),o=u.a.get();(0,a.k)(i,t.origin,t.direction);const n=p(e);(0,a.k)(r,i,t.origin),(0,a.o)(r,r,1/(0,a.e)(r)*n);const s=A(e,t.origin),c=function(e,t){const r=(0,a.j)(e,t)/((0,a.e)(e)*(0,a.e)(t));return-(0,a.u)(r)}(t.origin,r);return(0,l.h)(o,c+s,i),(0,a.w)(r,r,o),r}function b(e,t,r){const i=(0,a.d)(u.s.get(),t,e),o=(0,a.o)(u.s.get(),i,e[3]/(0,a.e)(i));return(0,a.b)(r,o,e)}function A(e,t){const r=(0,a.d)(u.s.get(),t,e),i=(0,a.e)(r),o=p(e),n=o+Math.abs(o-i);return(0,a.u)(o/n)}const E=(0,a.h)();function S(e,t,r,o){const n=(0,a.d)(E,t,e);switch(r){case i.X:{const e=(0,a.x)(n,E)[2];return(0,a.s)(o,-Math.sin(e),Math.cos(e),0)}case i.Y:{const e=(0,a.x)(n,E),t=e[1],r=e[2],i=Math.sin(t);return(0,a.s)(o,-i*Math.cos(r),-i*Math.sin(r),Math.cos(t))}case i.Z:return(0,a.n)(o,n);default:return}}function R(e,t){const r=(0,a.d)(w,t,e);return(0,a.e)(r)-e[3]}function M(e,t){const r=(0,a.y)(e,t),i=p(e);return r<=i*i}const w=(0,a.h)(),C=m();Object.freeze(Object.defineProperty({__proto__:null,create:m,copy:f,fromCenterAndRadius:function(e,t){return(0,c.a)(e[0],e[1],e[2],t)},wrap:function(e){return e},clear:function(e){e[0]=e[1]=e[2]=e[3]=0},fromRadius:function(e,t){return e[0]=e[1]=e[2]=0,e[3]=t,e},getRadius:p,getCenter:g,fromValues:function(e,t,r,i){return(0,c.a)(e,t,r,i)},elevate:function(e,t,r){return e!==r&&(0,a.a)(r,e),r[3]=e[3]+t,r},setExtent:function(e,t,r){return h.error("sphere.setExtent is not yet supported"),e===r?r:f(e,r)},intersectRay:_,intersectsRay:x,intersectRayClosestSilhouette:function(e,t,r){if(_(e,t,r))return r;const i=T(e,t,u.s.get());return(0,a.b)(r,t.origin,(0,a.o)(u.s.get(),t.direction,(0,a.v)(t.origin,i)/(0,a.e)(t.direction))),r},closestPointOnSilhouette:T,closestPoint:function(e,t,r){return _(e,t,r)?r:((0,d.a)(t,e,r),b(e,r,r))},projectPoint:b,distanceToSilhouette:function(e,t){const r=(0,a.d)(u.s.get(),t,e),i=(0,a.p)(r),o=e[3]*e[3];return Math.sqrt(Math.abs(i-o))},angleToSilhouette:A,axisAt:S,altitudeAt:R,setAltitudeAt:function(e,t,r,o){const n=R(e,t),s=S(e,t,i.Z,w),l=(0,a.o)(w,s,r-n);return(0,a.b)(o,t,l)},containsPoint:M,tmpSphere:C},Symbol.toStringTag,{value:"Module"}))},72836:(e,t,r)=>{r.d(t,{a:()=>n,b:()=>l,c:()=>c,f:()=>d,m:()=>i,n:()=>s,s:()=>a,t:()=>o});const i=r(92143).L.getLogger("esri.views.3d.support.buffer.math");function o(e,t,r){if(e.count!==t.count)return void i.error("source and destination buffers need to have the same number of elements");const o=e.count,n=r[0],a=r[1],s=r[2],l=r[4],c=r[5],d=r[6],u=r[8],h=r[9],m=r[10],f=r[12],p=r[13],g=r[14],_=e.typedBuffer,v=e.typedBufferStride,x=t.typedBuffer,T=t.typedBufferStride;for(let e=0;e<o;e++){const t=e*v,r=e*T,i=x[r],o=x[r+1],b=x[r+2];_[t]=n*i+l*o+u*b+f,_[t+1]=a*i+c*o+h*b+p,_[t+2]=s*i+d*o+m*b+g}}function n(e,t,r){if(e.count!==t.count)return void i.error("source and destination buffers need to have the same number of elements");const o=e.count,n=r[0],a=r[1],s=r[2],l=r[3],c=r[4],d=r[5],u=r[6],h=r[7],m=r[8],f=e.typedBuffer,p=e.typedBufferStride,g=t.typedBuffer,_=t.typedBufferStride;for(let e=0;e<o;e++){const t=e*p,r=e*_,i=g[r],o=g[r+1],v=g[r+2];f[t]=n*i+l*o+u*v,f[t+1]=a*i+c*o+h*v,f[t+2]=s*i+d*o+m*v}}function a(e,t,r){const i=Math.min(e.count,t.count),o=e.typedBuffer,n=e.typedBufferStride,a=t.typedBuffer,s=t.typedBufferStride;for(let e=0;e<i;e++){const t=e*n,i=e*s;o[t]=r*a[i],o[t+1]=r*a[i+1],o[t+2]=r*a[i+2]}}function s(e,t){const r=Math.min(e.count,t.count),i=e.typedBuffer,o=e.typedBufferStride,n=t.typedBuffer,a=t.typedBufferStride;for(let e=0;e<r;e++){const t=e*o,r=e*a,s=n[r],l=n[r+1],c=n[r+2],d=s*s+l*l+c*c;if(d>0){const e=1/Math.sqrt(d);i[t]=e*s,i[t+1]=e*l,i[t+2]=e*c}}}function l(e,t,r){const i=Math.min(e.count,t.count),o=e.typedBuffer,n=e.typedBufferStride,a=t.typedBuffer,s=t.typedBufferStride;for(let e=0;e<i;e++){const t=e*n,i=e*s;o[t]=a[i]>>r,o[t+1]=a[i+1]>>r,o[t+2]=a[i+2]>>r}}function c(e,t,r){const i=e.typedBuffer,o=e.typedBufferStride,n=t.typedBuffer,a=t.typedBufferStride,s=r?r.count:t.count;let l=(r&&r.dstIndex?r.dstIndex:0)*o,c=(r&&r.srcIndex?r.srcIndex:0)*a;for(let e=0;e<s;++e)i[l]=n[c],i[l+1]=n[c+1],i[l+2]=n[c+2],l+=o,c+=a}function d(e,t,r,i,o){const n=e.typedBuffer,a=e.typedBufferStride,s=o?.count??e.count;let l=(o?.dstIndex??0)*a;for(let e=0;e<s;++e)n[l]=t,n[l+1]=r,n[l+2]=i,l+=a}},56697:(e,t,r)=>{function i(){return new Float32Array(3)}function o(e,t,r){const i=new Float32Array(3);return i[0]=e,i[1]=t,i[2]=r,i}r.d(t,{c:()=>i,f:()=>o}),o(1,1,1),o(1,0,0),o(0,1,0),o(0,0,1)},68681:(e,t,r)=>{function i(){return[0,0,0,0]}function o(e,t,r,i){return[e,t,r,i]}function n(e,t){return new Float64Array(e,t,4)}r.d(t,{a:()=>o,b:()=>n,c:()=>i}),o(1,1,1,1)}}]);