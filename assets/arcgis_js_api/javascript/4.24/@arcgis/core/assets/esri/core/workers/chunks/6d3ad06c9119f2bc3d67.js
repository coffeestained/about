"use strict";(self.webpackChunkRemoteClient=self.webpackChunkRemoteClient||[]).push([[910,7258],{25368:(e,t,i)=>{function r(e){return e&&"getAtOrigin"in e&&"originOf"in e}i.d(t,{i:()=>r})},87217:(e,t,i)=>{i.d(t,{u:()=>o});var r=i(25368);function o(e){e&&e.writtenProperties&&e.writtenProperties.forEach((({target:e,propName:t,newOrigin:i})=>{(0,r.i)(e)&&i&&e.originOf(t)!==i&&e.updateOrigin(t,i)}))}},60111:(e,t,i)=>{i.d(t,{T:()=>u,a:()=>a,g:()=>p,h:()=>n,r:()=>l});var r=i(1623),o=i(60947),s=i(35132);function a(e,t){if(!n(e,t)){const i=e.typeKeywords;i?i.push(t):e.typeKeywords=[t]}}function n(e,t){return!!e.typeKeywords?.includes(t)}function l(e,t){const i=e.typeKeywords;if(i){const e=i.indexOf(t);e>-1&&i.splice(e,1)}}async function p(e){const t=e.clone().normalize();let i;if(t.length>1)for(const e of t)i?e.width>i.width&&(i=e):i=e;else i=t[0];return async function(e){const t=e.spatialReference;if(t.isWGS84)return e.clone();if(t.isWebMercator)return(0,s.Sx)(e);const i=o.Z.WGS84;return await(0,r.iQ)(t,i),(0,r.iV)(e,i)}(i)}const u={DEVELOPER_BASEMAP:"DeveloperBasemap",JSAPI:"ArcGIS API for JavaScript",METADATA:"Metadata",MULTI_LAYER:"Multilayer",SINGLE_LAYER:"Singlelayer",TABLE:"Table"}},52228:(e,t,i)=>{var r,o;function s(e){return e&&"esri.renderers.visualVariables.SizeVariable"===e.declaredClass}function a(e){return null!=e&&!isNaN(e)&&isFinite(e)}function n(e){return e.valueExpression?r.Expression:e.field&&"string"==typeof e.field?r.Field:r.Unknown}function l(e,t){const i=t||n(e),s=e.valueUnit||"unknown";return i===r.Unknown?o.Constant:e.stops?o.Stops:null!=e.minSize&&null!=e.maxSize&&null!=e.minDataValue&&null!=e.maxDataValue?o.ClampedLinear:"unknown"===s?null!=e.minSize&&null!=e.minDataValue?e.minSize&&e.minDataValue?o.Proportional:o.Additive:o.Identity:o.RealWorldSize}i.d(t,{I:()=>r,T:()=>o,a:()=>l,b:()=>a,g:()=>n,i:()=>s}),function(e){e.Unknown="unknown",e.Expression="expression",e.Field="field"}(r||(r={})),function(e){e.Unknown="unknown",e.Stops="stops",e.ClampedLinear="clamped-linear",e.Proportional="proportional",e.Additive="additive",e.Constant="constant",e.Identity="identity",e.RealWorldSize="real-world-size"}(o||(o={}))},81731:(e,t,i)=>{i.d(t,{a:()=>s,e:()=>n,p:()=>a});var r=i(76506),o=i(32101);function s(e,t){return t?{...t,query:{...e,...t.query}}:{query:e}}function a(e){return"string"==typeof e?(0,o.mN)(e):(0,r.d9)(e)}function n(e,t,i){const r={};for(const o in e){if("declaredClass"===o)continue;const s=e[o];if(null!=s&&"function"!=typeof s)if(Array.isArray(s)){r[o]=[];for(let e=0;e<s.length;e++)r[o][e]=n(s[e])}else if("object"==typeof s)if(s.toJSON){const e=s.toJSON(i&&i[o]);r[o]=t?e:JSON.stringify(e)}else r[o]=t?s:JSON.stringify(s);else r[o]=s}return r}},50910:(e,t,i)=>{i.r(t),i.d(t,{default:()=>ii});var r=i(29768),o=i(31450),s=i(74569),a=i(23761),n=i(86748),l=(i(55306),i(71206),i(51979),i(60698),i(53321),i(65684),i(86758),i(95310),i(20208)),p=i(15324),u=i(60991),d=i(95873),c=i(92143),m=i(71252),y=i(54179),b=i(71552),h=i(50406),f=i(58085),v=i(53785),T=i(32101),g=i(34250),w=(i(76506),i(91306)),C=i(97714),S=i(17533),_=i(2906),N=i(87217),O=i(21801),A=i(1623),I=i(60947),D=i(41617),j=i(80462),F=i(89440),B=i(39241),x=i(6416),E=i(21132),L=i(96467),M=i(12047),P=i(60669),R=(i(63571),i(40642),i(59465)),J=i(57251),k=(i(14249),i(60217),i(73796),i(21972),i(60474),i(66396),i(86656),i(91055),i(6540),i(19657),i(6906),i(91597)),U=(i(86787),i(35132),i(89623),i(84069)),Z=i(44567),W=(i(98380),i(92896)),V=(i(22781),i(32422)),G=(i(30776),i(48027),i(54174),i(82426),i(29794),i(63130),i(25696),i(98402),i(42775),i(95834),i(34394),i(57150),i(76726),i(20444),i(76393),i(78548)),q=(i(2497),i(49906),i(46527),i(11799),i(48649),i(59877),i(9960),i(30823),i(53326),i(92482),i(5853),i(39141),i(38742),i(48243),i(75067),i(89914),i(34635),i(10401),i(49900)),z=(i(88762),i(82058)),K=(i(81184),i(33101),i(3482),i(67477),i(78533),i(74653),i(91091),i(58943),i(70737),i(36834),i(66122)),H=(i(8487),i(17817),i(90814),i(15459),i(61847),i(16796),i(16955),i(22401),i(77894),i(55187),i(8586),i(44509),i(69814),i(11305),i(62259),i(44790),i(5909));i(48208),i(51589);let $=class extends M.wq{constructor(e){super(e),this.break=new P.Z({color:[255,255,255],size:12,outline:{color:[0,122,194],width:3}}),this.first=new P.Z({color:[0,255,0],size:20,outline:{color:[255,255,255],width:4}}),this.unlocated=new P.Z({color:[255,0,0],size:12,outline:{color:[255,255,255],width:3}}),this.last=new P.Z({color:[255,0,0],size:20,outline:{color:[255,255,255],width:4}}),this.middle=new P.Z({color:[51,51,51],size:12,outline:{color:[0,122,194],width:3}}),this.waypoint=new P.Z({color:[255,255,255],size:12,outline:{color:[0,122,194],width:3}})}};(0,r._)([(0,g.Cb)({types:L.LB})],$.prototype,"break",void 0),(0,r._)([(0,g.Cb)({types:L.LB})],$.prototype,"first",void 0),(0,r._)([(0,g.Cb)({types:L.LB})],$.prototype,"unlocated",void 0),(0,r._)([(0,g.Cb)({types:L.LB})],$.prototype,"last",void 0),(0,r._)([(0,g.Cb)({types:L.LB})],$.prototype,"middle",void 0),(0,r._)([(0,g.Cb)({types:L.LB})],$.prototype,"waypoint",void 0),$=(0,r._)([(0,S.j)("esri.layers.support.RouteStopSymbols")],$);const Q=$;let Y=class extends M.wq{constructor(e){super(e),this.directionLines=new G.Z({color:[0,122,194],width:6}),this.directionPoints=new P.Z({color:[255,255,255],size:6,outline:{color:[0,122,194],width:2}}),this.pointBarriers=new P.Z({style:"x",size:10,outline:{color:[255,0,0],width:3}}),this.polygonBarriers=new H.Z({color:[255,170,0,.6],outline:{width:7.5,color:[255,0,0,.6]}}),this.polylineBarriers=new G.Z({width:7.5,color:[255,85,0,.7]}),this.routeInfo=new G.Z({width:8,color:[20,89,127]}),this.stops=new Q}};(0,r._)([(0,g.Cb)({types:L.LB})],Y.prototype,"directionLines",void 0),(0,r._)([(0,g.Cb)({types:L.LB})],Y.prototype,"directionPoints",void 0),(0,r._)([(0,g.Cb)({types:L.LB})],Y.prototype,"pointBarriers",void 0),(0,r._)([(0,g.Cb)({types:L.LB})],Y.prototype,"polygonBarriers",void 0),(0,r._)([(0,g.Cb)({types:L.LB})],Y.prototype,"polylineBarriers",void 0),(0,r._)([(0,g.Cb)({types:L.LB})],Y.prototype,"routeInfo",void 0),(0,r._)([(0,g.Cb)({type:Q})],Y.prototype,"stops",void 0),Y=(0,r._)([(0,S.j)("esri.layers.support.RouteSymbols")],Y);const X=Y;var ee=i(56420),te=i(60111),ie=i(81731);const re=(0,J.s)()({esriCentimeters:"centimeters",esriDecimalDegrees:"decimal-degrees",esriDecimeters:"decimeters",esriFeet:"feet",esriInches:"inches",esriKilometers:"kilometers",esriMeters:"meters",esriMiles:"miles",esriMillimeters:"millimeters",esriNauticalMiles:"nautical-miles",esriPoints:"points",esriUnknownUnits:"unknown",esriYards:"yards"}),oe=(0,J.s)()({esriNAUCentimeters:"centimeters",esriNAUDecimalDegrees:"decimal-degrees",esriNAUDecimeters:"decimeters",esriNAUFeet:"feet",esriNAUInches:"inches",esriNAUKilometers:"kilometers",esriNAUMeters:"meters",esriNAUMiles:"miles",esriNAUMillimeters:"millimeters",esriNAUNauticalMiles:"nautical-miles",esriNAUPoints:"points",esriNAUYards:"yards"}),se=(0,J.s)()({esriNAUDays:"days",esriNAUHours:"hours",esriNAUMinutes:"minutes",esriNAUSeconds:"seconds"}),ae=(0,J.s)()({esriDOTComplete:"complete",esriDOTCompleteNoEvents:"complete-no-events",esriDOTFeatureSets:"featuresets",esriDOTInstructionsOnly:"instructions-only",esriDOTStandard:"standard",esriDOTSummaryOnly:"summary-only"}),ne=(0,J.s)()({esriNAOutputLineNone:"none",esriNAOutputLineStraight:"straight",esriNAOutputLineTrueShape:"true-shape",esriNAOutputLineTrueShapeWithMeasure:"true-shape-with-measure"}),le=((0,J.s)()({esriNAOutputPolygonNone:"none",esriNAOutputPolygonSimplified:"simplified",esriNAOutputPolygonDetailed:"detailed"}),(0,J.s)()({esriNFSBAllowBacktrack:"allow-backtrack",esriNFSBAtDeadEndsOnly:"at-dead-ends-only",esriNFSBNoBacktrack:"no-backtrack",esriNFSBAtDeadEndsAndIntersections:"at-dead-ends-and-intersections"})),pe=((0,J.s)()({esriNATravelDirectionFromFacility:"from-facility",esriNATravelDirectionToFacility:"to-facility"}),(0,J.s)()({esriNATimeOfDayNotUsed:"not-used",esriNATimeOfDayUseAsStartTime:"start",esriNATimeOfDayUseAsEndTime:"end"}),(0,J.s)()({AUTOMOBILE:"automobile",TRUCK:"truck",WALK:"walk",OTHER:"other"})),ue=(0,J.s)()({0:"either-side-of-vehicle",1:"right-side-of-vehicle",2:"left-side-of-vehicle",3:"no-u-turn"},{useNumericKeys:!0}),de=(0,J.s)()({0:"stop",1:"waypoint",2:"break"},{useNumericKeys:!0}),ce=(0,J.s)()({0:"ok",1:"not-located",2:"network-element-not-located",3:"element-not-traversable",4:"invalid-field-values",5:"not-reached",6:"time-window-violation",7:"not-located-on-closest"},{useNumericKeys:!0}),me=(0,J.s)()({1:"right",2:"left"},{useNumericKeys:!0}),ye=(0,J.s)()({0:"restriction",1:"added-cost"},{useNumericKeys:!0}),be=(0,J.s)()({0:"permit",1:"restrict"},{useNumericKeys:!0}),he=(0,J.s)()({1:"header",50:"arrive",51:"depart",52:"straight",100:"on-ferry",101:"off-ferry",102:"central-fork",103:"roundabout",104:"u-turn",150:"door",151:"stairs",152:"elevator",153:"escalator",154:"pedestrian-ramp",200:"left-fork",201:"left-ramp",202:"clockwise-roundabout",203:"left-handed-u-turn",204:"bear-left",205:"left-turn",206:"sharp-left",207:"left-turn-and-immediate-left-turn",208:"left-turn-and-immediate-right-turn",300:"right-fork",301:"right-ramp",302:"counter-clockwise-roundabout",303:"right-handed-u-turn",304:"bear-right",305:"right-turn",306:"sharp-right",307:"right-turn-and-immediate-left-turn",308:"right-turn-and-immediate-right-turn",400:"up-elevator",401:"up-escalator",402:"up-stairs",500:"down-elevator",501:"down-escalator",502:"down-stairs",1e3:"general-event",1001:"landmark",1002:"time-zone-change",1003:"traffic-event",1004:"scaled-cost-barrier-event",1005:"boundary-crossing",1006:"restriction-violation"},{useNumericKeys:!0}),fe=(0,J.s)()({0:"unknown",1:"segment",2:"maneuver-segment",3:"restriction-violation",4:"scaled-cost-barrier",5:"heavy-traffic",6:"slow-traffic",7:"moderate-traffic"},{useNumericKeys:!0}),ve=(0,J.s)()({"NA Campus":"campus","NA Desktop":"desktop","NA Navigation":"navigation"}),Te=(0,J.s)()({Kilometers:"kilometers",Miles:"miles"},{ignoreUnknown:!1}),ge=(0,J.s)()({Minutes:"minutes",TimeAt1KPH:"time-at-1-kph",TravelTime:"travel-time",TruckMinutes:"truck-minutes",TruckTravelTime:"truck-travel-time",WalkTime:"walk-time"},{ignoreUnknown:!1}),we=(0,J.s)()({Kilometers:"kilometers",Miles:"miles",Minutes:"minutes",TimeAt1KPH:"time-at-1-kph",TravelTime:"travel-time",TruckMinutes:"truck-minutes",TruckTravelTime:"truck-travel-time",WalkTime:"walk-time"},{ignoreUnknown:!1}),Ce=(0,J.s)()({"Any Hazmat Prohibited":"any-hazmat-prohibited","Avoid Carpool Roads":"avoid-carpool-roads","Avoid Express Lanes":"avoid-express-lanes","Avoid Ferries":"avoid-ferries","Avoid Gates":"avoid-gates","Avoid Limited Access Roads":"avoid-limited-access-roads","Avoid Private Roads":"avoid-private-roads","Avoid Roads Unsuitable for Pedestrians":"avoid-roads-unsuitable-for-pedestrians","Avoid Stairways":"avoid-stairways","Avoid Toll Roads":"avoid-toll-roads","Avoid Toll Roads for Trucks":"avoid-toll-roads-for-trucks","Avoid Truck Restricted Roads":"avoid-truck-restricted-roads","Avoid Unpaved Roads":"avoid-unpaved-roads","Axle Count Restriction":"axle-count-restriction","Driving a Bus":"driving-a-bus","Driving a Taxi":"driving-a-taxi","Driving a Truck":"driving-a-truck","Driving an Automobile":"driving-an-automobile","Driving an Emergency Vehicle":"driving-an-emergency-vehicle","Height Restriction":"height-restriction","Kingpin to Rear Axle Length Restriction":"kingpin-to-rear-axle-length-restriction","Length Restriction":"length-restriction","Preferred for Pedestrians":"preferred-for-pedestrians","Riding a Motorcycle":"riding-a-motorcycle","Roads Under Construction Prohibited":"roads-under-construction-prohibited","Semi or Tractor with One or More Trailers Prohibited":"semi-or-tractor-with-one-or-more-trailers-prohibited","Single Axle Vehicles Prohibited":"single-axle-vehicles-prohibited","Tandem Axle Vehicles Prohibited":"tandem-axle-vehicles-prohibited","Through Traffic Prohibited":"through-traffic-prohibited","Truck with Trailers Restriction":"truck-with-trailers-restriction","Use Preferred Hazmat Routes":"use-preferred-hazmat-routes","Use Preferred Truck Routes":"use-preferred-truck-routes",Walking:"walking","Weight Restriction":"weight-restriction"},{ignoreUnknown:!1}),Se=(0,J.s)()({esriSpatialRelIntersects:"intersects",esriSpatialRelContains:"contains",esriSpatialRelCrosses:"crosses",esriSpatialRelEnvelopeIntersects:"envelope-intersects",esriSpatialRelIndexIntersects:"index-intersects",esriSpatialRelOverlaps:"overlaps",esriSpatialRelTouches:"touches",esriSpatialRelWithin:"within",esriSpatialRelRelation:"relation"}),_e=(0,J.s)()({esriGeometryPoint:"point",esriGeometryPolyline:"polyline",esriGeometryPolygon:"polygon",esriGeometryEnvelope:"envelope",esriGeometryMultipoint:"multipoint"}),Ne=(0,J.s)()({esriNAUTCost:"cost",esriNAUTDescriptor:"descriptor",esriNAUTRestriction:"restriction",esriNAUTHierarchy:"hierarchy"});let Oe=class extends((0,K.J)(M.wq)){constructor(e){super(e),this.attributeParameterValues=null,this.description=null,this.distanceAttributeName=null,this.id=null,this.impedanceAttributeName=null,this.name=null,this.restrictionAttributeNames=null,this.simplificationTolerance=null,this.simplificationToleranceUnits=null,this.timeAttributeName=null,this.type=null,this.useHierarchy=null,this.uturnAtJunctions=null}readRestrictionAttributes(e,t){const{restrictionAttributeNames:i}=t;return(0,m.a)(i)?null:i.map((e=>Ce.fromJSON(e)))}writeRestrictionAttributes(e,t,i){!(0,m.a)(e)&&e.length&&(t[i]=e.map((e=>Ce.toJSON(e))))}};(0,r._)([(0,g.Cb)({type:[Object],json:{write:!0}})],Oe.prototype,"attributeParameterValues",void 0),(0,r._)([(0,g.Cb)({type:String,json:{write:!0}})],Oe.prototype,"description",void 0),(0,r._)([(0,R.e)(Te,{ignoreUnknown:!1})],Oe.prototype,"distanceAttributeName",void 0),(0,r._)([(0,g.Cb)({type:String,json:{write:!0}})],Oe.prototype,"id",void 0),(0,r._)([(0,R.e)(we,{ignoreUnknown:!1})],Oe.prototype,"impedanceAttributeName",void 0),(0,r._)([(0,g.Cb)({type:String,json:{write:!0}})],Oe.prototype,"name",void 0),(0,r._)([(0,g.Cb)({type:[String],json:{write:!0}})],Oe.prototype,"restrictionAttributeNames",void 0),(0,r._)([(0,C.r)("restrictionAttributeNames")],Oe.prototype,"readRestrictionAttributes",null),(0,r._)([(0,_.w)("restrictionAttributeNames")],Oe.prototype,"writeRestrictionAttributes",null),(0,r._)([(0,g.Cb)({type:Number,json:{write:{allowNull:!0}}})],Oe.prototype,"simplificationTolerance",void 0),(0,r._)([(0,R.e)(re)],Oe.prototype,"simplificationToleranceUnits",void 0),(0,r._)([(0,R.e)(ge,{ignoreUnknown:!1})],Oe.prototype,"timeAttributeName",void 0),(0,r._)([(0,R.e)(pe)],Oe.prototype,"type",void 0),(0,r._)([(0,g.Cb)({type:Boolean,json:{write:!0}})],Oe.prototype,"useHierarchy",void 0),(0,r._)([(0,R.e)(le)],Oe.prototype,"uturnAtJunctions",void 0),Oe=(0,r._)([(0,S.j)("esri.rest.support.TravelMode")],Oe);const Ae=Oe;let Ie=class extends M.wq{constructor(e){super(e),this.dataType=null,this.name=null,this.parameterNames=null,this.restrictionUsageParameterName=null,this.timeNeutralAttributeName=null,this.trafficSupport=null,this.units=null,this.usageType=null}};(0,r._)([(0,g.Cb)({type:String})],Ie.prototype,"dataType",void 0),(0,r._)([(0,R.e)(we,{ignoreUnknown:!1})],Ie.prototype,"name",void 0),(0,r._)([(0,g.Cb)({type:[String]})],Ie.prototype,"parameterNames",void 0),(0,r._)([(0,g.Cb)({type:String})],Ie.prototype,"restrictionUsageParameterName",void 0),(0,r._)([(0,R.e)(ge,{ignoreUnknown:!1})],Ie.prototype,"timeNeutralAttributeName",void 0),(0,r._)([(0,g.Cb)({type:String})],Ie.prototype,"trafficSupport",void 0),(0,r._)([(0,g.Cb)({type:String})],Ie.prototype,"units",void 0),(0,r._)([(0,R.e)(Ne)],Ie.prototype,"usageType",void 0),Ie=(0,r._)([(0,S.j)("esri.rest.support.NetworkAttribute")],Ie);const De=Ie;let je=class extends M.wq{constructor(e){super(e),this.buildTime=null,this.name=null,this.networkAttributes=null,this.networkSources=null,this.state=null}};(0,r._)([(0,g.Cb)({type:Number})],je.prototype,"buildTime",void 0),(0,r._)([(0,g.Cb)({type:String})],je.prototype,"name",void 0),(0,r._)([(0,g.Cb)({type:[De]})],je.prototype,"networkAttributes",void 0),(0,r._)([(0,g.Cb)()],je.prototype,"networkSources",void 0),(0,r._)([(0,g.Cb)({type:String})],je.prototype,"state",void 0),je=(0,r._)([(0,S.j)("esri.rest.support.NetworkDataset")],je);const Fe=je;let Be=class extends M.wq{constructor(e){super(e),this.accumulateAttributeNames=null,this.currentVersion=null,this.defaultTravelMode=null,this.directionsLanguage=null,this.directionsLengthUnits=null,this.directionsSupportedLanguages=null,this.directionsTimeAttribute=null,this.hasZ=null,this.impedance=null,this.networkDataset=null,this.supportedTravelModes=null}readAccumulateAttributes(e){return(0,m.a)(e)?null:e.map((e=>we.fromJSON(e)))}writeAccumulateAttributes(e,t,i){!(0,m.a)(e)&&e.length&&(t[i]=e.map((e=>we.toJSON(e))))}};(0,r._)([(0,g.Cb)()],Be.prototype,"accumulateAttributeNames",void 0),(0,r._)([(0,C.r)("accumulateAttributeNames")],Be.prototype,"readAccumulateAttributes",null),(0,r._)([(0,_.w)("accumulateAttributeNames")],Be.prototype,"writeAccumulateAttributes",null),(0,r._)([(0,g.Cb)()],Be.prototype,"currentVersion",void 0),(0,r._)([(0,g.Cb)()],Be.prototype,"defaultTravelMode",void 0),(0,r._)([(0,g.Cb)()],Be.prototype,"directionsLanguage",void 0),(0,r._)([(0,R.e)(oe)],Be.prototype,"directionsLengthUnits",void 0),(0,r._)([(0,g.Cb)()],Be.prototype,"directionsSupportedLanguages",void 0),(0,r._)([(0,R.e)(ge,{ignoreUnknown:!1})],Be.prototype,"directionsTimeAttribute",void 0),(0,r._)([(0,g.Cb)()],Be.prototype,"hasZ",void 0),(0,r._)([(0,R.e)(we,{ignoreUnknown:!1})],Be.prototype,"impedance",void 0),(0,r._)([(0,g.Cb)({type:Fe})],Be.prototype,"networkDataset",void 0),(0,r._)([(0,g.Cb)({type:[Ae]})],Be.prototype,"supportedTravelModes",void 0),Be=(0,r._)([(0,S.j)("esri.rest.support.NetworkServiceDescription")],Be);const xe=Be;function Ee(e,t,i,r){r[i]=[t.length,t.length+e.length],e.forEach((e=>{t.push(e.geometry)}))}async function Le(e,t,i){if(!e)throw new u.Z("network-service:missing-url","Url to Network service is missing");const r=(0,ie.a)({f:"json",token:t},i),{data:o}=await(0,z.default)(e,r);o.supportedTravelModes||(o.supportedTravelModes=[]);for(let e=0;e<o.supportedTravelModes.length;e++)o.supportedTravelModes[e].id||(o.supportedTravelModes[e].id=o.supportedTravelModes[e].itemId);const s=o.currentVersion>=10.4?async function(e,t,i){try{const r=(0,ie.a)({f:"json",token:t},i),o=(0,T.Qj)(e)+"/retrieveTravelModes",{data:{supportedTravelModes:s,defaultTravelMode:a}}=await(0,z.default)(o,r);return{supportedTravelModes:s,defaultTravelMode:a}}catch(e){throw new u.Z("network-service:retrieveTravelModes","Could not get to the NAServer's retrieveTravelModes.",{error:e})}}(e,t,i):async function(e,t){const i=(0,ie.a)({f:"json"},t),{data:r}=await(0,z.default)(e.replace(/\/rest\/.*$/i,"/info"),i);if(!r||!r.owningSystemUrl)return{supportedTravelModes:[],defaultTravelMode:null};const{owningSystemUrl:o}=r,s=(0,T.Qj)(o)+"/sharing/rest/portals/self",{data:a}=await(0,z.default)(s,i),n=(0,b.g)("helperServices.routingUtilities.url",a);if(!n)return{supportedTravelModes:[],defaultTravelMode:null};const l=(0,ie.p)(o),p=/\/solve$/i.test(l.path)?"Route":/\/solveclosestfacility$/i.test(l.path)?"ClosestFacility":"ServiceAreas",u=(0,ie.a)({f:"json",serviceName:p},t),d=(0,T.Qj)(n)+"/GetTravelModes/execute",c=await(0,z.default)(d,u),m=[];let y=null;if(c?.data?.results?.length){const e=c.data.results;for(const t of e)if("supportedTravelModes"===t.paramName){if(t.value?.features)for(const{attributes:e}of t.value.features)if(e){const t=JSON.parse(e.TravelMode);m.push(t)}}else"defaultTravelMode"===t.paramName&&(y=t.value)}return{supportedTravelModes:m,defaultTravelMode:y}}(e,i),{defaultTravelMode:a,supportedTravelModes:n}=await s;return o.defaultTravelMode=a,o.supportedTravelModes=n,xe.fromJSON(o)}var Me=i(95533);function Pe(e,t){if((0,m.a)(e))return null;const i={},r=new RegExp(`^${t}`,"i");for(const o of Object.keys(e))if(r.test(o)){const r=o.substring(t.length);i[we.fromJSON(r)]=e[o]}return i}function Re(e,t,i){if(!(0,m.a)(e)){t.attributes||(t.attributes={});for(const r in e){const o=we.toJSON(r);t.attributes[`${i}${o}`]=e[r]}}}function Je(e){const t={};for(const i of Object.keys(e)){const r=i;t[we.fromJSON(r)]=e[i]}return t}function ke(e){const t={};for(const i of Object.keys(e)){const r=i;t[we.toJSON(r)]=e[i]}return t}function Ue(e,t){return(0,m.a)(e)||(0,m.a)(t)?null:Math.round((e-t)/6e4)}function Ze(e){const t=e.toJSON(),i=t;return i.accumulateAttributeNames&&(i.accumulateAttributeNames=t.accumulateAttributeNames.join()),i.attributeParameterValues&&(i.attributeParameterValues=JSON.stringify(t.attributeParameterValues)),i.barriers&&(i.barriers=JSON.stringify(t.barriers)),i.outSR&&(i.outSR=t.outSR.wkid),i.overrides&&(i.overrides=JSON.stringify(t.overrides)),i.polygonBarriers&&(i.polygonBarriers=JSON.stringify(t.polygonBarriers)),i.polylineBarriers&&(i.polylineBarriers=JSON.stringify(t.polylineBarriers)),i.restrictionAttributeNames&&(i.restrictionAttributeNames=t.restrictionAttributeNames.join()),i.stops&&(i.stops=JSON.stringify(t.stops)),i.travelMode&&(i.travelMode=JSON.stringify(t.travelMode)),i}var We=i(87258);const Ve=new J.J({esriJobMessageTypeInformative:"informative",esriJobMessageTypeProcessDefinition:"process-definition",esriJobMessageTypeProcessStart:"process-start",esriJobMessageTypeProcessStop:"process-stop",esriJobMessageTypeWarning:"warning",esriJobMessageTypeError:"error",esriJobMessageTypeEmpty:"empty",esriJobMessageTypeAbort:"abort"});let Ge=class extends M.wq{constructor(e){super(e),this.description=null,this.type=null}};(0,r._)([(0,g.Cb)({type:String,json:{write:!0}})],Ge.prototype,"description",void 0),(0,r._)([(0,g.Cb)({type:String,json:{read:Ve.read,write:Ve.write}})],Ge.prototype,"type",void 0),Ge=(0,r._)([(0,S.j)("esri.rest.support.GPMessage")],Ge);const qe=Ge,ze=new J.J({0:"informative",1:"process-definition",2:"process-start",3:"process-stop",50:"warning",100:"error",101:"empty",200:"abort"});let Ke=class extends qe{constructor(e){super(e),this.type=null}};(0,r._)([(0,g.Cb)({type:String,json:{read:ze.read,write:ze.write}})],Ke.prototype,"type",void 0),Ke=(0,r._)([(0,S.j)("esri.rest.support.NAMessage")],Ke);const He=Ke;i(29107),i(30574),i(2157),i(25977),i(58076),i(98242),i(7471),i(54414),i(1648),i(8925),i(33957),i(45154),i(16769),i(93603),i(15438),i(593),i(85699),i(55531),i(96055),i(47776),i(18033),i(6331),i(62048),i(4292),i(75626),i(72652),i(29641),i(30493),i(70821),i(82673),i(34229),i(37029),i(97546),i(9801),i(53523),i(42911),i(46826),i(45433),i(54732);let $e=class extends a.Z{};(0,r._)([(0,g.Cb)()],$e.prototype,"events",void 0),(0,r._)([(0,g.Cb)()],$e.prototype,"strings",void 0),$e=(0,r._)([(0,S.j)("esri.rest.support.DirectionsFeature")],$e);const Qe=$e;let Ye=class extends We.default{constructor(e){super(e),this.extent=null,this.features=null,this.geometryType="polyline",this.routeId=null,this.routeName=null,this.totalDriveTime=null,this.totalLength=null,this.totalTime=null}readFeatures(e,t){if(!e)return[];const i=t.summary.envelope.spatialReference??t.spatialReference,r=i&&I.Z.fromJSON(i);return e.map((e=>{const t=this._decompressGeometry(e.compressedGeometry),i=new W.Z({...t,spatialReference:r}),o=e.events?.map((e=>{const{arriveTimeUTC:t,ETA:i,point:{x:o,y:s,z:a},strings:n}=e;return new Qe({geometry:new k.Z({x:o,y:s,z:a,hasZ:void 0!==a,spatialReference:r}),attributes:{ETA:i,arriveTimeUTC:t},strings:n})}))??[];return new Qe({attributes:e.attributes,events:o,geometry:i,strings:e.strings})}))}get mergedGeometry(){if(!this.features)return null;const e=this.features.map((({geometry:e})=>(0,m.u)(e))),t=this.get("extent.spatialReference");return this._mergePolylinesToSinglePath(e,t)}get strings(){return this.features.map((({strings:e})=>e))}_decompressGeometry(e){let t=0,i=0,r=0,o=0;const s=[];let a,n,l,p,u,d,c,m,y=0,b=0,h=0;if(u=e.match(/((\+|\-)[^\+\-\|]+|\|)/g),u||(u=[]),0===parseInt(u[y],32)){y=2;const e=parseInt(u[y],32);y++,d=parseInt(u[y],32),y++,1&e&&(b=u.indexOf("|")+1,c=parseInt(u[b],32),b++),2&e&&(h=u.indexOf("|",b)+1,m=parseInt(u[h],32),h++)}else d=parseInt(u[y],32),y++;for(;y<u.length&&"|"!==u[y];){a=parseInt(u[y],32)+t,y++,t=a,n=parseInt(u[y],32)+i,y++,i=n;const e=[a/d,n/d];b&&(p=parseInt(u[b],32)+r,b++,r=p,e.push(p/c)),h&&(l=parseInt(u[h],32)+o,h++,o=l,e.push(l/m)),s.push(e)}return{paths:[s],hasZ:b>0,hasM:h>0}}_mergePolylinesToSinglePath(e,t){if(0===e.length)return new W.Z({spatialReference:t});const i=[];for(const t of e)for(const e of t.paths)i.push(...e);const r=[];i.forEach(((e,t)=>{0!==t&&e[0]===i[t-1][0]&&e[1]===i[t-1][1]||r.push(e)}));const{hasM:o,hasZ:s}=e[0];return new W.Z({hasM:o,hasZ:s,paths:[r],spatialReference:t})}};(0,r._)([(0,g.Cb)({type:O.Z,json:{read:{source:"summary.envelope"}}})],Ye.prototype,"extent",void 0),(0,r._)([(0,g.Cb)()],Ye.prototype,"features",void 0),(0,r._)([(0,C.r)("features")],Ye.prototype,"readFeatures",null),(0,r._)([(0,g.Cb)()],Ye.prototype,"geometryType",void 0),(0,r._)([(0,g.Cb)({readOnly:!0})],Ye.prototype,"mergedGeometry",null),(0,r._)([(0,g.Cb)()],Ye.prototype,"routeId",void 0),(0,r._)([(0,g.Cb)()],Ye.prototype,"routeName",void 0),(0,r._)([(0,g.Cb)({value:null,readOnly:!0})],Ye.prototype,"strings",null),(0,r._)([(0,g.Cb)({json:{read:{source:"summary.totalDriveTime"}}})],Ye.prototype,"totalDriveTime",void 0),(0,r._)([(0,g.Cb)({json:{read:{source:"summary.totalLength"}}})],Ye.prototype,"totalLength",void 0),(0,r._)([(0,g.Cb)({json:{read:{source:"summary.totalTime"}}})],Ye.prototype,"totalTime",void 0),Ye=(0,r._)([(0,S.j)("esri.rest.support.DirectionsFeatureSet")],Ye);const Xe=Ye;let et=class extends M.wq{constructor(e){super(e),this.directionLines=null,this.directionPoints=null,this.directions=null,this.route=null,this.routeName=null,this.stops=null,this.traversedEdges=null,this.traversedJunctions=null,this.traversedTurns=null}};(0,r._)([(0,g.Cb)({type:We.default,json:{write:!0}})],et.prototype,"directionLines",void 0),(0,r._)([(0,g.Cb)({type:We.default,json:{write:!0}})],et.prototype,"directionPoints",void 0),(0,r._)([(0,g.Cb)({type:Xe,json:{write:!0}})],et.prototype,"directions",void 0),(0,r._)([(0,g.Cb)({type:a.Z,json:{write:!0}})],et.prototype,"route",void 0),(0,r._)([(0,g.Cb)({type:String,json:{write:!0}})],et.prototype,"routeName",void 0),(0,r._)([(0,g.Cb)({type:[a.Z],json:{write:!0}})],et.prototype,"stops",void 0),(0,r._)([(0,g.Cb)({type:We.default,json:{write:!0}})],et.prototype,"traversedEdges",void 0),(0,r._)([(0,g.Cb)({type:We.default,json:{write:!0}})],et.prototype,"traversedJunctions",void 0),(0,r._)([(0,g.Cb)({type:We.default,json:{write:!0}})],et.prototype,"traversedTurns",void 0),et=(0,r._)([(0,S.j)("esri.rest.support.RouteResult")],et);const tt=et;function it(e){return e&&We.default.fromJSON(e).features.map((e=>e))}let rt=class extends M.wq{constructor(e){super(e),this.messages=null,this.pointBarriers=null,this.polylineBarriers=null,this.polygonBarriers=null,this.routeResults=null}readPointBarriers(e,t){return it(t.barriers)}readPolylineBarriers(e){return it(e)}readPolygonBarriers(e){return it(e)}};(0,r._)([(0,g.Cb)({type:[He]})],rt.prototype,"messages",void 0),(0,r._)([(0,g.Cb)({type:[a.Z]})],rt.prototype,"pointBarriers",void 0),(0,r._)([(0,C.r)("pointBarriers",["barriers"])],rt.prototype,"readPointBarriers",null),(0,r._)([(0,g.Cb)({type:[a.Z]})],rt.prototype,"polylineBarriers",void 0),(0,r._)([(0,C.r)("polylineBarriers")],rt.prototype,"readPolylineBarriers",null),(0,r._)([(0,g.Cb)({type:[a.Z]})],rt.prototype,"polygonBarriers",void 0),(0,r._)([(0,C.r)("polygonBarriers")],rt.prototype,"readPolygonBarriers",null),(0,r._)([(0,g.Cb)({type:[tt]})],rt.prototype,"routeResults",void 0),rt=(0,r._)([(0,S.j)("esri.rest.support.RouteSolveResult")],rt);const ot=rt;var st;function at(e){return"esri.rest.support.FeatureSet"===e?.declaredClass}i(94751);let nt=st=class extends((0,K.J)(M.wq)){constructor(e){super(e),this.directionLineType=null,this.directionPointId=null,this.distance=null,this.duration=null,this.fromLevel=null,this.geometry=null,this.objectId=null,this.popupTemplate=null,this.symbol=null,this.toLevel=null,this.type="direction-line"}static fromGraphic(e){return new st({directionLineType:fe.fromJSON(e.attributes.DirectionLineType),directionPointId:e.attributes.DirectionPointID,distance:e.attributes.Meters,duration:e.attributes.Minutes,fromLevel:e.attributes.FromLevel??null,geometry:e.geometry,objectId:e.attributes.__OBJECTID,popupTemplate:e.popupTemplate,symbol:e.symbol,toLevel:e.attributes.ToLevel??null})}toGraphic(){const e={__OBJECTID:(0,m.u)(this.objectId),DirectionLineType:(0,m.i)(this.directionLineType)?fe.toJSON(this.directionLineType):null,DirectionPointID:(0,m.u)(this.directionPointId),Meters:(0,m.u)(this.distance),Minutes:(0,m.u)(this.duration)};return(0,m.i)(this.fromLevel)&&(e.FromLevel=this.fromLevel),(0,m.i)(this.toLevel)&&(e.ToLevel=this.toLevel),new a.Z({geometry:this.geometry,attributes:e,symbol:this.symbol,popupTemplate:this.popupTemplate})}};nt.fields=[{name:"__OBJECTID",alias:"OBJECTID",type:"esriFieldTypeOID",editable:!1,nullable:!1,domain:null},{name:"DirectionLineType",alias:"Line Type",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriDirectionsLineType",codedValues:[{name:"Unknown",code:0},{name:"Segment",code:1},{name:"Maneuver Segment",code:2},{name:"Restriction violation",code:3},{name:"Scale cost barrier crossing",code:4},{name:"Heavy Traffic",code:5},{name:"Slow Traffic",code:6},{name:"Moderate Traffic",code:7}]}},{name:"DirectionPointID",alias:"Direction Point ID",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!1},{name:"FromLevel",alias:"Start from 3D Level",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!1},{name:"Meters",alias:"Length in Meters",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0},{name:"Minutes",alias:"Duration in Minutes",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0},{name:"ToLevel",alias:"End at 3D Level",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!1}],nt.popupInfo={title:"Direction Lines",fieldInfos:[{fieldName:"DirectionLineType",label:"Line Type",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"Meters",label:"Length in Meters",isEditable:!1,tooltip:"",visible:!0,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"Minutes",label:"Duration in Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"DirectionPointID",label:"Direction Point ID",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"FromLevel",label:"Start from 3D Level",isEditable:!1,tooltip:"",visible:!1,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"ToLevel",label:"End at 3D Level",isEditable:!1,tooltip:"",visible:!1,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"}],description:null,showAttachments:!1,mediaInfos:[]},(0,r._)([(0,g.Cb)({type:fe.apiValues,json:{read:{source:"attributes.DirectionLineType",reader:fe.read}}})],nt.prototype,"directionLineType",void 0),(0,r._)([(0,g.Cb)({json:{read:{source:"attributes.DirectionPointID"}}})],nt.prototype,"directionPointId",void 0),(0,r._)([(0,g.Cb)({json:{read:{source:"attributes.Meters"}}})],nt.prototype,"distance",void 0),(0,r._)([(0,g.Cb)({json:{read:{source:"attributes.Minutes"}}})],nt.prototype,"duration",void 0),(0,r._)([(0,g.Cb)({json:{read:{source:"attributes.FromLevel"}}})],nt.prototype,"fromLevel",void 0),(0,r._)([(0,g.Cb)({type:W.Z})],nt.prototype,"geometry",void 0),(0,r._)([(0,g.Cb)({json:{read:{source:"attributes.ObjectID"}}})],nt.prototype,"objectId",void 0),(0,r._)([(0,g.Cb)({type:n.Z,json:{read:!1}})],nt.prototype,"popupTemplate",void 0),(0,r._)([(0,g.Cb)({types:L.LB,json:{read:!1}})],nt.prototype,"symbol",void 0),(0,r._)([(0,g.Cb)({json:{read:{source:"attributes.ToLevel"}}})],nt.prototype,"toLevel",void 0),(0,r._)([(0,g.Cb)({readOnly:!0,json:{read:!1}})],nt.prototype,"type",void 0),nt=st=(0,r._)([(0,S.j)("esri.rest.support.DirectionLine")],nt);const lt=nt;var pt;let ut=pt=class extends((0,K.J)(M.wq)){constructor(e){super(e),this.alternateName=null,this.arrivalTime=null,this.arrivalTimeOffset=null,this.azimuth=null,this.branchName=null,this.directionPointType=null,this.displayText=null,this.exitName=null,this.geometry=null,this.intersectingName=null,this.level=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.sequence=null,this.shortVoiceInstruction=null,this.stopId=null,this.symbol=null,this.towardName=null,this.type="direction-point",this.voiceInstruction=null}readArrivalTime(e,t){return(0,m.i)(t.attributes.ArrivalTime)?new Date(t.attributes.ArrivalTime):null}static fromGraphic(e){return new pt({alternateName:e.attributes.AlternateName??null,arrivalTime:(0,m.i)(e.attributes.ArrivalTime)?new Date(e.attributes.ArrivalTime):null,arrivalTimeOffset:e.attributes.ArrivalUTCOffset??null,azimuth:e.attributes.Azimuth??null,branchName:e.attributes.BranchName??null,directionPointType:he.fromJSON(e.attributes.DirectionPointType),displayText:e.attributes.DisplayText??null,exitName:e.attributes.ExitName??null,geometry:e.geometry,intersectingName:e.attributes.IntersectingName??null,level:e.attributes.Level??null,name:e.attributes.Name??null,objectId:e.attributes.__OBJECTID,popupTemplate:e.popupTemplate,sequence:e.attributes.Sequence,shortVoiceInstruction:e.attributes.ShortVoiceInstruction??null,stopId:e.attributes.StopID??null,symbol:e.symbol,towardName:e.attributes.TowardName??null,voiceInstruction:e.attributes.VoiceInstruction??null})}toGraphic(){const e={__OBJECTID:(0,m.u)(this.objectId),DirectionPointType:(0,m.i)(this.directionPointType)?he.toJSON(this.directionPointType):null,Sequence:(0,m.u)(this.sequence),StopID:this.stopId};return(0,m.i)(this.alternateName)&&(e.AlternateName=this.alternateName),(0,m.i)(this.arrivalTime)&&(e.ArrivalTime=this.arrivalTime.getTime()),(0,m.i)(this.arrivalTimeOffset)&&(e.ArrivalUTCOffset=this.arrivalTimeOffset),(0,m.i)(this.azimuth)&&(e.Azimuth=this.azimuth),(0,m.i)(this.branchName)&&(e.BranchName=this.branchName),(0,m.i)(this.displayText)&&(e.DisplayText=this.displayText),(0,m.i)(this.exitName)&&(e.ExitName=this.exitName),(0,m.i)(this.intersectingName)&&(e.IntersectingName=this.intersectingName),(0,m.i)(this.level)&&(e.Level=this.level),(0,m.i)(this.name)&&(e.Name=this.name),(0,m.i)(this.shortVoiceInstruction)&&(e.ShortVoiceInstruction=this.shortVoiceInstruction),(0,m.i)(this.towardName)&&(e.TowardName=this.towardName),(0,m.i)(this.voiceInstruction)&&(e.VoiceInstruction=this.voiceInstruction),new a.Z({geometry:this.geometry,attributes:e,symbol:this.symbol,popupTemplate:this.popupTemplate})}};ut.fields=[{name:"__OBJECTID",alias:"OBJECTID",type:"esriFieldTypeOID",editable:!1,nullable:!1,domain:null},{name:"AlternateName",alias:"Alternative Feature Name",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null},{name:"ArrivalTime",alias:"Maneuver Starts at",type:"esriFieldTypeDate",length:36,editable:!0,nullable:!0,visible:!0},{name:"ArrivalUTCOffset",alias:"Offset from UTC in Minutes",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"Azimuth",alias:"Azimuth",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0},{name:"BranchName",alias:"Signpost Branch Name",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null},{name:"DirectionPointType",alias:"Directions Item Type",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriDirectionPointType",codedValues:[{name:"Unknown",code:0},{name:"",code:1},{name:"Arrive at stop",code:50},{name:"Depart at stop",code:51},{name:"Go straight",code:52},{name:"Take ferry",code:100},{name:"Take off ferry",code:101},{name:"Keep center at fork",code:102},{name:"Take roundabout",code:103},{name:"Make U-Turn",code:104},{name:"Pass the door",code:150},{name:"Take stairs",code:151},{name:"",code:152},{name:"Take escalator",code:153},{name:"Take pedestrian ramp",code:154},{name:"Keep left at fork",code:200},{name:"Ramp left",code:201},{name:"Take left-handed roundabout",code:202},{name:"Make left-handed U-Turn",code:203},{name:"Bear left",code:204},{name:"Turn left",code:205},{name:"Make sharp left",code:206},{name:"Turn left, followed by turn left",code:207},{name:"Turn left, followed by turn right",code:208},{name:"Keep right at fork",code:300},{name:"Ramp right",code:301},{name:"Take right-handed roundabout",code:302},{name:"Make right-handed U-Turn",code:303},{name:"Bear right",code:304},{name:"Turn right",code:305},{name:"Make sharp right",code:306},{name:"Turn right, followed by turn left",code:307},{name:"Turn right, followed by turn right",code:308},{name:"Indicates up direction of elevator",code:400},{name:"Indicates up direction of escalator",code:401},{name:"Take up-stairs",code:402},{name:"Indicates down direction of elevator",code:500},{name:"Indicates down direction of escalator",code:501},{name:"Take down-stairs",code:502},{name:"General event",code:1e3},{name:"Landmark",code:1001},{name:"Time zone change",code:1002},{name:"Heavy traffic segment",code:1003},{name:"Scale cost barrier crossing",code:1004},{name:"Administrative Border crossing",code:1005},{name:"Restriction violation",code:1006}]}},{name:"DisplayText",alias:"Text to Display",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null},{name:"ExitName",alias:"Highway Exit Name",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null},{name:"IntersectingName",alias:"Intersecting Feature Name",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null},{name:"Level",alias:"3D Logical Level",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"Name",alias:"Primary Feature Name",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null},{name:"Sequence",alias:"Sequence",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"ShortVoiceInstruction",alias:"Voice Instruction",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null},{name:"StopID",alias:"Stop ID",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"TowardName",alias:"Signpost Toward Name",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null},{name:"VoiceInstruction",alias:"Voice Full Instruction",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null}],ut.popupInfo={title:"{DisplayText}",fieldInfos:[{fieldName:"DirectionPointType",label:"Directions Item Type",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"DisplayText",label:"Text to Display",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"Sequence",label:"Sequence",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"StopID",label:"Stop ID",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"ArrivalTime",label:"Maneuver Starts at",isEditable:!0,tooltip:"",visible:!0,format:{dateFormat:"shortDateShortTime24"},stringFieldOption:"textbox"},{fieldName:"ArrivalUTCOffset",label:"Offset from UTC in Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"Azimuth",label:"Azimuth",isEditable:!1,tooltip:"",visible:!1,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"Name",label:"Primary Feature Name",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"AlternateName",label:"Alternative Feature Name",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"ExitName",label:"Highway Exit Name",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"IntersectingName",label:"Intersecting Feature Name",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"BranchName",label:"Signpost Branch Name",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"TowardName",label:"Signpost Toward Name",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"ShortVoiceInstruction",label:"Voice Instruction",isEditable:!1,tooltip:"",visible:!1,stringFieldOption:"textbox"},{fieldName:"VoiceInstruction",label:"Voice Full Instruction",isEditable:!1,tooltip:"",visible:!1,stringFieldOption:"textbox"}],description:null,showAttachments:!1,mediaInfos:[]},(0,r._)([(0,g.Cb)({json:{read:!1}})],ut.prototype,"alternateName",void 0),(0,r._)([(0,g.Cb)()],ut.prototype,"arrivalTime",void 0),(0,r._)([(0,C.r)("arrivalTime",["attributes.ArrivalTime"])],ut.prototype,"readArrivalTime",null),(0,r._)([(0,g.Cb)({json:{read:{source:"attributes.ArrivalUTCOffset"}}})],ut.prototype,"arrivalTimeOffset",void 0),(0,r._)([(0,g.Cb)({json:{read:{source:"attributes.Azimuth"}}})],ut.prototype,"azimuth",void 0),(0,r._)([(0,g.Cb)({json:{read:{source:"attributes.BranchName"}}})],ut.prototype,"branchName",void 0),(0,r._)([(0,g.Cb)({type:he.apiValues,json:{read:{source:"attributes.DirectionPointType",reader:he.read}}})],ut.prototype,"directionPointType",void 0),(0,r._)([(0,g.Cb)({json:{read:{source:"attributes.DisplayText"}}})],ut.prototype,"displayText",void 0),(0,r._)([(0,g.Cb)({json:{read:{source:"attributes.ExitName"}}})],ut.prototype,"exitName",void 0),(0,r._)([(0,g.Cb)({type:k.Z})],ut.prototype,"geometry",void 0),(0,r._)([(0,g.Cb)({json:{read:!1}})],ut.prototype,"intersectingName",void 0),(0,r._)([(0,g.Cb)({json:{read:!1}})],ut.prototype,"level",void 0),(0,r._)([(0,g.Cb)({json:{read:{source:"attributes.Name"}}})],ut.prototype,"name",void 0),(0,r._)([(0,g.Cb)({json:{read:{source:"attributes.ObjectID"}}})],ut.prototype,"objectId",void 0),(0,r._)([(0,g.Cb)({type:n.Z,json:{read:!1}})],ut.prototype,"popupTemplate",void 0),(0,r._)([(0,g.Cb)({json:{read:{source:"attributes.Sequence"}}})],ut.prototype,"sequence",void 0),(0,r._)([(0,g.Cb)({json:{read:!1}})],ut.prototype,"shortVoiceInstruction",void 0),(0,r._)([(0,g.Cb)({json:{read:{source:"attributes.StopID"}}})],ut.prototype,"stopId",void 0),(0,r._)([(0,g.Cb)({types:L.LB,json:{read:!1}})],ut.prototype,"symbol",void 0),(0,r._)([(0,g.Cb)({json:{read:{source:"attributes.TowardName"}}})],ut.prototype,"towardName",void 0),(0,r._)([(0,g.Cb)({readOnly:!0,json:{read:!1}})],ut.prototype,"type",void 0),(0,r._)([(0,g.Cb)({json:{read:!1}})],ut.prototype,"voiceInstruction",void 0),ut=pt=(0,r._)([(0,S.j)("esri.rest.support.DirectionPoint")],ut);const dt=ut;var ct;let mt=ct=class extends((0,K.J)(M.wq)){constructor(e){super(e),this.addedCost=null,this.barrierType=null,this.costs=null,this.curbApproach=null,this.fullEdge=null,this.geometry=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.sideOfEdge=null,this.sourceId=null,this.sourceOid=null,this.status=null,this.symbol=null,this.type="point-barrier"}readCosts(e,t){return Pe(t.attributes,"Attr_")}writeCosts(e,t){Re(e,t,"Attr_")}static fromGraphic(e){return new ct({addedCost:e.attributes.AddedCost??null,barrierType:(0,m.i)(e.attributes.BarrierType)?ye.fromJSON(e.attributes.BarrierType):null,costs:(0,m.i)(e.attributes.Costs)?Je(JSON.parse(e.attributes.Costs)):null,curbApproach:(0,m.i)(e.attributes.CurbApproach)?ue.fromJSON(e.attributes.CurbApproach):null,fullEdge:(0,m.i)(e.attributes.FullEdge)?be.fromJSON(e.attributes.FullEdge):null,geometry:e.geometry,name:e.attributes.Name??null,objectId:e.attributes.__OBJECTID,popupTemplate:e.popupTemplate,status:(0,m.i)(e.attributes.Status)?ce.fromJSON(e.attributes.Status):null,symbol:e.symbol})}toGraphic(){const e={__OBJECTID:(0,m.u)(this.objectId),AddedCost:this.addedCost,BarrierType:(0,m.i)(this.barrierType)?ye.toJSON(this.barrierType):null,Costs:(0,m.i)(this.costs)?JSON.stringify(ke(this.costs)):null,CurbApproach:(0,m.i)(this.curbApproach)?ue.toJSON(this.curbApproach):null,FullEdge:(0,m.i)(this.fullEdge)?be.toJSON(this.fullEdge):null,Name:this.name,Status:(0,m.i)(this.status)?ce.toJSON(this.status):null};return new a.Z({geometry:this.geometry,attributes:e,symbol:this.symbol,popupTemplate:this.popupTemplate})}};mt.fields=[{name:"__OBJECTID",alias:"OBJECTID",type:"esriFieldTypeOID",editable:!1,nullable:!1,domain:null},{name:"AddedCost",alias:"Added Cost",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0,domain:null},{name:"BarrierType",alias:"Barrier Type",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNABarrierType",codedValues:[{name:"Restriction",code:0},{name:"Scaled Cost",code:1},{name:"Added Cost",code:2}]}},{name:"Costs",alias:"Costs",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"CurbApproach",alias:"Curb Approach",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!1,domain:{type:"codedValue",name:"esriNACurbApproachType",codedValues:[{name:"Either side",code:0},{name:"From the right",code:1},{name:"From the left",code:2},{name:"Depart in the same direction",code:3}]}},{name:"FullEdge",alias:"Full Edge",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNAIntYesNo",codedValues:[{name:"No",code:0},{name:"Yes",code:1}]}},{name:"Name",alias:"Name",type:"esriFieldTypeString",length:255,editable:!0,nullable:!0,visible:!0},{name:"Status",alias:"Status",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNAObjectStatus",codedValues:[{name:"OK",code:0},{name:"Not Located on Network",code:1},{name:"Network Unbuilt",code:2},{name:"Prohibited Street",code:3},{name:"Invalid Field Values",code:4},{name:"Cannot Reach",code:5},{name:"Time Window Violation",code:6}]}}],mt.popupInfo={title:"Point Barriers",fieldInfos:[{fieldName:"Name",label:"Name",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"BarrierType",label:"Barrier Type",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"AddedCost",label:"Added Cost",isEditable:!0,tooltip:"",visible:!0,format:{places:3,digitSeparator:!0},stringFieldOption:"textbox"}],description:null,showAttachments:!1,mediaInfos:[]},(0,r._)([(0,g.Cb)({json:{read:!1}})],mt.prototype,"addedCost",void 0),(0,r._)([(0,g.Cb)({type:ye.apiValues,json:{name:"attributes.BarrierType",read:{reader:ye.read},write:{writer:ye.write}}})],mt.prototype,"barrierType",void 0),(0,r._)([(0,g.Cb)()],mt.prototype,"costs",void 0),(0,r._)([(0,C.r)("costs",["attributes"])],mt.prototype,"readCosts",null),(0,r._)([(0,_.w)("costs")],mt.prototype,"writeCosts",null),(0,r._)([(0,g.Cb)({type:ue.apiValues,json:{read:{source:"attributes.CurbApproach",reader:ue.read}}})],mt.prototype,"curbApproach",void 0),(0,r._)([(0,g.Cb)({type:be.apiValues,json:{name:"attributes.FullEdge",read:{reader:be.read},write:{writer:be.write}}})],mt.prototype,"fullEdge",void 0),(0,r._)([(0,g.Cb)({type:k.Z,json:{write:!0}})],mt.prototype,"geometry",void 0),(0,r._)([(0,g.Cb)({json:{name:"attributes.Name"}})],mt.prototype,"name",void 0),(0,r._)([(0,g.Cb)({json:{name:"attributes.ObjectID"}})],mt.prototype,"objectId",void 0),(0,r._)([(0,g.Cb)({type:n.Z,json:{read:!1}})],mt.prototype,"popupTemplate",void 0),(0,r._)([(0,g.Cb)({type:me.apiValues,json:{read:{source:"attributes.SideOfEdge",reader:me.read}}})],mt.prototype,"sideOfEdge",void 0),(0,r._)([(0,g.Cb)({json:{read:{source:"attributes.SourceID"}}})],mt.prototype,"sourceId",void 0),(0,r._)([(0,g.Cb)({json:{read:{source:"attributes.SourceOID"}}})],mt.prototype,"sourceOid",void 0),(0,r._)([(0,g.Cb)({type:ce.apiValues,json:{read:{source:"attributes.Status",reader:ce.read}}})],mt.prototype,"status",void 0),(0,r._)([(0,g.Cb)({types:L.LB,json:{read:!1}})],mt.prototype,"symbol",void 0),(0,r._)([(0,g.Cb)({readOnly:!0,json:{read:!1}})],mt.prototype,"type",void 0),mt=ct=(0,r._)([(0,S.j)("esri.rest.support.PointBarrier")],mt);const yt=mt;var bt;let ht=bt=class extends((0,K.J)(M.wq)){constructor(e){super(e),this.barrierType=null,this.costs=null,this.geometry=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.scaleFactor=null,this.symbol=null,this.type="polygon-barrier"}readCosts(e,t){return Pe(t.attributes,"Attr_")}writeCosts(e,t){Re(e,t,"Attr_")}static fromGraphic(e){return new bt({barrierType:(0,m.i)(e.attributes.BarrierType)?ye.fromJSON(e.attributes.BarrierType):null,costs:(0,m.i)(e.attributes.Costs)?Je(JSON.parse(e.attributes.Costs)):null,geometry:e.geometry,name:e.attributes.Name??null,objectId:e.attributes.__OBJECTID,popupTemplate:e.popupTemplate,scaleFactor:e.attributes.ScaleFactor??null,symbol:e.symbol})}toGraphic(){const e={__OBJECTID:(0,m.u)(this.objectId),BarrierType:(0,m.i)(this.barrierType)?ye.toJSON(this.barrierType):null,Costs:(0,m.i)(this.costs)?JSON.stringify(ke(this.costs)):null,Name:this.name??null,ScaleFactor:this.scaleFactor??null};return new a.Z({geometry:this.geometry,attributes:e,symbol:this.symbol,popupTemplate:this.popupTemplate})}};ht.fields=[{name:"__OBJECTID",alias:"OBJECTID",type:"esriFieldTypeOID",editable:!1,nullable:!1,domain:null},{name:"BarrierType",alias:"Barrier Type",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNABarrierType",codedValues:[{name:"Restriction",code:0},{name:"Scaled Cost",code:1},{name:"Added Cost",code:2}]}},{name:"Costs",alias:"Costs",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"Name",alias:"Name",type:"esriFieldTypeString",length:255,editable:!0,nullable:!0,visible:!0},{name:"ScaleFactor",alias:"Scale Factor",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0}],ht.popupInfo={title:"Polygon Barriers",fieldInfos:[{fieldName:"Name",label:"Name",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"BarrierType",label:"Barrier Type",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"ScaleFactor",isEditable:!0,tooltip:"",visible:!0,format:{places:3,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"Costs",label:"Costs",isEditable:!0,tooltip:"",visible:!1,stringFieldOption:"textbox"}],description:null,showAttachments:!1,mediaInfos:[]},(0,r._)([(0,g.Cb)({type:ye.apiValues,json:{name:"attributes.BarrierType",read:{reader:ye.read},write:{writer:ye.write}}})],ht.prototype,"barrierType",void 0),(0,r._)([(0,g.Cb)()],ht.prototype,"costs",void 0),(0,r._)([(0,C.r)("costs",["attributes"])],ht.prototype,"readCosts",null),(0,r._)([(0,_.w)("costs")],ht.prototype,"writeCosts",null),(0,r._)([(0,g.Cb)({type:Z.Z,json:{write:!0}})],ht.prototype,"geometry",void 0),(0,r._)([(0,g.Cb)({json:{name:"attributes.Name"}})],ht.prototype,"name",void 0),(0,r._)([(0,g.Cb)({json:{name:"attributes.ObjectID"}})],ht.prototype,"objectId",void 0),(0,r._)([(0,g.Cb)({type:n.Z,json:{read:!1}})],ht.prototype,"popupTemplate",void 0),(0,r._)([(0,g.Cb)({json:{read:!1}})],ht.prototype,"scaleFactor",void 0),(0,r._)([(0,g.Cb)({types:L.LB,json:{read:!1}})],ht.prototype,"symbol",void 0),(0,r._)([(0,g.Cb)({readOnly:!0,json:{read:!1}})],ht.prototype,"type",void 0),ht=bt=(0,r._)([(0,S.j)("esri.rest.support.PolygonBarrier")],ht);const ft=ht;var vt;let Tt=vt=class extends((0,K.J)(M.wq)){constructor(e){super(e),this.barrierType=null,this.costs=null,this.geometry=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.scaleFactor=null,this.symbol=null,this.type="polyline-barrier"}readCosts(e,t){return Pe(t.attributes,"Attr_")}static fromGraphic(e){return new vt({barrierType:(0,m.i)(e.attributes.BarrierType)?ye.fromJSON(e.attributes.BarrierType):null,costs:(0,m.i)(e.attributes.Costs)?Je(JSON.parse(e.attributes.Costs)):null,geometry:e.geometry,name:e.attributes.Name??null,objectId:e.attributes.__OBJECTID,popupTemplate:e.popupTemplate,scaleFactor:e.attributes.ScaleFactor??null,symbol:e.symbol})}toGraphic(){const e={__OBJECTID:(0,m.u)(this.objectId),BarrierType:(0,m.i)(this.barrierType)?ye.toJSON(this.barrierType):null,Costs:(0,m.i)(this.costs)?JSON.stringify(ke(this.costs)):null,Name:this.name,ScaleFactor:this.scaleFactor};return new a.Z({geometry:this.geometry,attributes:e,symbol:this.symbol,popupTemplate:this.popupTemplate})}};Tt.fields=[{name:"__OBJECTID",alias:"OBJECTID",type:"esriFieldTypeOID",editable:!1,nullable:!1,domain:null},{name:"BarrierType",alias:"Barrier Type",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNABarrierType",codedValues:[{name:"Restriction",code:0},{name:"Scaled Cost",code:1},{name:"Added Cost",code:2}]}},{name:"Costs",alias:"Costs",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"Name",alias:"Name",type:"esriFieldTypeString",length:255,editable:!0,nullable:!0,visible:!0},{name:"ScaleFactor",alias:"Scale Factor",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0}],Tt.popupInfo={title:"Line Barriers",fieldInfos:[{fieldName:"Name",label:"Name",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"BarrierType",label:"Barrier Type",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"ScaleFactor",isEditable:!0,tooltip:"",visible:!0,format:{places:3,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"Costs",label:"Costs",isEditable:!0,tooltip:"",visible:!1,stringFieldOption:"textbox"}],description:null,showAttachments:!1,mediaInfos:[]},(0,r._)([(0,g.Cb)({type:ye.apiValues,json:{read:{source:"attributes.BarrierType",reader:ye.read}}})],Tt.prototype,"barrierType",void 0),(0,r._)([(0,g.Cb)()],Tt.prototype,"costs",void 0),(0,r._)([(0,C.r)("costs",["attributes"])],Tt.prototype,"readCosts",null),(0,r._)([(0,g.Cb)({type:W.Z,json:{write:!0}})],Tt.prototype,"geometry",void 0),(0,r._)([(0,g.Cb)({json:{name:"attributes.Name"}})],Tt.prototype,"name",void 0),(0,r._)([(0,g.Cb)({json:{name:"attributes.ObjectID"}})],Tt.prototype,"objectId",void 0),(0,r._)([(0,g.Cb)({type:n.Z,json:{read:!1}})],Tt.prototype,"popupTemplate",void 0),(0,r._)([(0,g.Cb)({json:{read:!1}})],Tt.prototype,"scaleFactor",void 0),(0,r._)([(0,g.Cb)({types:L.LB,json:{read:!1}})],Tt.prototype,"symbol",void 0),(0,r._)([(0,g.Cb)({readOnly:!0,json:{read:!1}})],Tt.prototype,"type",void 0),Tt=vt=(0,r._)([(0,S.j)("esri.rest.support.PolylineBarrier")],Tt);const gt=Tt;let wt=class extends M.wq{constructor(e){super(e),this.accumulateAttributes=null,this.directionsLanguage=null,this.findBestSequence=null,this.preserveFirstStop=null,this.preserveLastStop=null,this.startTimeIsUTC=null,this.timeWindowsAreUTC=null,this.travelMode=null}readAccumulateAttributes(e){return(0,m.a)(e)?null:e.map((e=>we.fromJSON(e)))}writeAccumulateAttributes(e,t,i){!(0,m.a)(e)&&e.length&&(t[i]=e.map((e=>we.toJSON(e))))}};(0,r._)([(0,g.Cb)({type:[String],json:{name:"accumulateAttributeNames",write:!0}})],wt.prototype,"accumulateAttributes",void 0),(0,r._)([(0,C.r)("accumulateAttributes")],wt.prototype,"readAccumulateAttributes",null),(0,r._)([(0,_.w)("accumulateAttributes")],wt.prototype,"writeAccumulateAttributes",null),(0,r._)([(0,g.Cb)({type:String,json:{write:!0}})],wt.prototype,"directionsLanguage",void 0),(0,r._)([(0,g.Cb)({type:Boolean,json:{write:!0}})],wt.prototype,"findBestSequence",void 0),(0,r._)([(0,g.Cb)({type:Boolean,json:{write:!0}})],wt.prototype,"preserveFirstStop",void 0),(0,r._)([(0,g.Cb)({type:Boolean,json:{write:!0}})],wt.prototype,"preserveLastStop",void 0),(0,r._)([(0,g.Cb)({type:Boolean,json:{write:!0}})],wt.prototype,"startTimeIsUTC",void 0),(0,r._)([(0,g.Cb)({type:Boolean,json:{write:!0}})],wt.prototype,"timeWindowsAreUTC",void 0),(0,r._)([(0,g.Cb)({type:Ae,json:{write:!0}})],wt.prototype,"travelMode",void 0),wt=(0,r._)([(0,S.j)("esri.layers.support.RouteSettings")],wt);const Ct=wt;var St;let _t=St=class extends((0,K.J)(M.wq)){constructor(e){super(e),this.analysisSettings=null,this.endTime=null,this.endTimeOffset=null,this.firstStopId=null,this.geometry=null,this.lastStopId=null,this.messages=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.startTime=null,this.startTimeOffset=null,this.stopCount=null,this.symbol=null,this.totalCosts=null,this.totalDistance=null,this.totalDuration=null,this.totalLateDuration=null,this.totalViolations=null,this.totalWait=null,this.totalWaitDuration=null,this.type="route-info",this.version="1.0.0"}readEndTime(e,t){return(0,m.i)(t.attributes.EndTimeUTC)?new Date(t.attributes.EndTimeUTC):null}readEndTimeOffset(e,t){return Ue(t.attributes.EndTime,t.attributes.EndTimeUTC)}readStartTime(e,t){return(0,m.i)(t.attributes.StartTimeUTC)?new Date(t.attributes.StartTimeUTC):null}readStartTimeOffset(e,t){return Ue(t.attributes.StartTime,t.attributes.StartTimeUTC)}readTotalCosts(e,t){return Pe(t.attributes,"Total_")}readTotalViolations(e,t){return Pe(t.attributes,"TotalViolation_")}readTotalWait(e,t){return Pe(t.attributes,"TotalWait_")}static fromGraphic(e){return new St({analysisSettings:(0,m.i)(e.attributes.AnalysisSettings)?Ct.fromJSON(JSON.parse(e.attributes.AnalysisSettings)):null,endTime:(0,m.i)(e.attributes.EndTime)?new Date(e.attributes.EndTime):null,endTimeOffset:e.attributes.EndUTCOffset??null,geometry:e.geometry,messages:(0,m.i)(e.attributes.Messages)?JSON.parse(e.attributes.Messages):null,name:e.attributes.RouteName,objectId:e.attributes.__OBJECTID,popupTemplate:e.popupTemplate,startTime:(0,m.i)(e.attributes.StartTime)?new Date(e.attributes.StartTime):null,startTimeOffset:e.attributes.StartUTCOffset??null,symbol:e.symbol,totalCosts:(0,m.i)(e.attributes.TotalCosts)?Je(JSON.parse(e.attributes.TotalCosts)):null,totalDistance:e.attributes.TotalMeters??null,totalDuration:e.attributes.TotalMinutes??null,totalLateDuration:e.attributes.TotalLateMinutes??null,totalWaitDuration:e.attributes.TotalWaitMinutes??null,version:e.attributes.Version})}toGraphic(){const e={__OBJECTID:(0,m.u)(this.objectId),AnalysisSettings:(0,m.i)(this.analysisSettings)?JSON.stringify(this.analysisSettings.toJSON()):null,EndTime:(0,m.i)(this.endTime)?this.endTime.getTime():null,EndUTCOffset:this.endTimeOffset,Messages:(0,m.i)(this.messages)?JSON.stringify(this.messages):null,RouteName:(0,m.u)(this.name),StartTime:(0,m.i)(this.startTime)?this.startTime.getTime():null,StartUTCOffset:this.startTimeOffset,TotalCosts:(0,m.i)(this.totalCosts)?JSON.stringify(ke(this.totalCosts)):null,TotalLateMinutes:this.totalLateDuration,TotalMeters:this.totalDistance,TotalMinutes:this.totalDuration,TotalWaitMinutes:this.totalWaitDuration,Version:(0,m.u)(this.version)};return new a.Z({geometry:this.geometry,attributes:e,symbol:this.symbol,popupTemplate:(0,m.u)(this.popupTemplate)})}};_t.fields=[{name:"__OBJECTID",alias:"OBJECTID",type:"esriFieldTypeOID",editable:!1,nullable:!1,domain:null},{name:"AnalysisSettings",alias:"Analysis Settings",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"EndTime",alias:"End Time",type:"esriFieldTypeDate",length:36,editable:!0,nullable:!0,visible:!0},{name:"EndUTCOffset",alias:"End Time: Offset from UTC in Minutes",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"Messages",alias:"Analysis Messages",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"RouteName",alias:"Route Name",type:"esriFieldTypeString",length:1024,editable:!0,nullable:!0,visible:!0,domain:null},{name:"StartTime",alias:"Start Time",type:"esriFieldTypeDate",length:36,editable:!0,nullable:!0,visible:!0},{name:"StartUTCOffset",alias:"Start Time: Offset from UTC in Minutes",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"TotalCosts",alias:"Total Costs",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"TotalLateMinutes",alias:"Total Late Minutes",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!1},{name:"TotalMeters",alias:"Total Meters",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0},{name:"TotalMinutes",alias:"Total Minutes",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0},{name:"TotalWaitMinutes",alias:"Total Wait Minutes",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!1},{name:"Version",alias:"Version",type:"esriFieldTypeString",length:16,editable:!0,nullable:!0,visible:!0,domain:null}],_t.popupInfo={title:"Route Details",fieldInfos:[{fieldName:"RouteName",label:"Route Name",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"TotalMinutes",label:"Total Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"TotalMeters",label:"Total Meters",isEditable:!1,tooltip:"",visible:!0,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"TotalLateMinutes",label:"Total Late Minutes",isEditable:!1,tooltip:"",visible:!1,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"TotalWaitMinutes",label:"Total Wait Minutes",isEditable:!1,tooltip:"",visible:!1,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"TotalCosts",label:"Total Costs",isEditable:!1,tooltip:"",visible:!1,stringFieldOption:"textbox"},{fieldName:"StartTime",label:"Start Time",isEditable:!1,tooltip:"",visible:!0,format:{dateFormat:"shortDateShortTime24"},stringFieldOption:"textbox"},{fieldName:"StartUTCOffset",label:"Start Time: Offset from UTC in Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"EndTime",label:"End Time",isEditable:!1,tooltip:"",visible:!0,format:{dateFormat:"shortDateShortTime24"},stringFieldOption:"textbox"},{fieldName:"EndUTCOffset",label:"End Time: Offset from UTC in Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"Messages",label:"Analysis Messages",isEditable:!1,tooltip:"",visible:!1,stringFieldOption:"textbox"},{fieldName:"AnalysisSettings",isEditable:!1,tooltip:"",visible:!1,stringFieldOption:"textbox"},{fieldName:"Version",label:"Version",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"}],description:null,showAttachments:!1,mediaInfos:[]},(0,r._)([(0,g.Cb)({json:{read:!1}})],_t.prototype,"analysisSettings",void 0),(0,r._)([(0,g.Cb)()],_t.prototype,"endTime",void 0),(0,r._)([(0,C.r)("endTime",["attributes.EndTimeUTC"])],_t.prototype,"readEndTime",null),(0,r._)([(0,g.Cb)()],_t.prototype,"endTimeOffset",void 0),(0,r._)([(0,C.r)("endTimeOffset",["attributes.EndTime","attributes.EndTimeUTC"])],_t.prototype,"readEndTimeOffset",null),(0,r._)([(0,g.Cb)({json:{read:{source:"attributes.FirstStopID"}}})],_t.prototype,"firstStopId",void 0),(0,r._)([(0,g.Cb)({type:W.Z})],_t.prototype,"geometry",void 0),(0,r._)([(0,g.Cb)({json:{read:{source:"attributes.LastStopID"}}})],_t.prototype,"lastStopId",void 0),(0,r._)([(0,g.Cb)({json:{read:!1}})],_t.prototype,"messages",void 0),(0,r._)([(0,g.Cb)({json:{read:{source:"attributes.Name"}}})],_t.prototype,"name",void 0),(0,r._)([(0,g.Cb)({json:{read:{source:"attributes.ObjectID"}}})],_t.prototype,"objectId",void 0),(0,r._)([(0,g.Cb)({type:n.Z,json:{read:!1}})],_t.prototype,"popupTemplate",void 0),(0,r._)([(0,g.Cb)()],_t.prototype,"startTime",void 0),(0,r._)([(0,C.r)("startTime",["attributes.StartTimeUTC"])],_t.prototype,"readStartTime",null),(0,r._)([(0,g.Cb)()],_t.prototype,"startTimeOffset",void 0),(0,r._)([(0,C.r)("startTimeOffset",["attributes.StartTime","attributes.StartTimeUTC"])],_t.prototype,"readStartTimeOffset",null),(0,r._)([(0,g.Cb)({json:{read:{source:"attributes.StopCount"}}})],_t.prototype,"stopCount",void 0),(0,r._)([(0,g.Cb)({types:L.LB,json:{read:!1}})],_t.prototype,"symbol",void 0),(0,r._)([(0,g.Cb)()],_t.prototype,"totalCosts",void 0),(0,r._)([(0,C.r)("totalCosts",["attributes"])],_t.prototype,"readTotalCosts",null),(0,r._)([(0,g.Cb)({json:{read:!1}})],_t.prototype,"totalDistance",void 0),(0,r._)([(0,g.Cb)({json:{read:!1}})],_t.prototype,"totalDuration",void 0),(0,r._)([(0,g.Cb)({json:{read:!1}})],_t.prototype,"totalLateDuration",void 0),(0,r._)([(0,g.Cb)()],_t.prototype,"totalViolations",void 0),(0,r._)([(0,C.r)("totalViolations",["attributes"])],_t.prototype,"readTotalViolations",null),(0,r._)([(0,g.Cb)()],_t.prototype,"totalWait",void 0),(0,r._)([(0,C.r)("totalWait",["attributes"])],_t.prototype,"readTotalWait",null),(0,r._)([(0,g.Cb)({json:{read:!1}})],_t.prototype,"totalWaitDuration",void 0),(0,r._)([(0,g.Cb)({readOnly:!0,json:{read:!1}})],_t.prototype,"type",void 0),(0,r._)([(0,g.Cb)({json:{read:!1}})],_t.prototype,"version",void 0),_t=St=(0,r._)([(0,S.j)("esri.rest.support.RouteInfo")],_t);const Nt=_t,Ot={type:String,json:{read:{source:"token"},write:{target:"token"}}};let At=class extends((0,K.J)(M.wq)){constructor(e){super(e),this.doNotLocateOnRestrictedElements=null,this.geometry=null,this.geometryType=null,this.name=null,this.spatialRelationship=null,this.type="layer",this.where=null}};(0,r._)([(0,g.Cb)({type:Boolean,json:{write:!0}})],At.prototype,"doNotLocateOnRestrictedElements",void 0),(0,r._)([(0,g.Cb)({types:s.qM,json:{read:V.im,write:!0}})],At.prototype,"geometry",void 0),(0,r._)([(0,R.e)(_e)],At.prototype,"geometryType",void 0),(0,r._)([(0,g.Cb)({type:String,json:{name:"layerName",write:!0}})],At.prototype,"name",void 0),(0,r._)([(0,R.e)(Se,{name:"spatialRel"})],At.prototype,"spatialRelationship",void 0),(0,r._)([(0,g.Cb)({type:String,json:{write:!0}})],At.prototype,"type",void 0),(0,r._)([(0,g.Cb)({type:String,json:{write:!0}})],At.prototype,"where",void 0),At=(0,r._)([(0,S.j)("esri.rest.support.DataLayer")],At);const It=At;var Dt;let jt=Dt=class extends We.default{constructor(e){super(e),this.doNotLocateOnRestrictedElements=null}clone(){return new Dt({doNotLocateOnRestrictedElements:this.doNotLocateOnRestrictedElements,...this.cloneProperties()})}};(0,r._)([(0,g.Cb)({type:Boolean,json:{write:!0}})],jt.prototype,"doNotLocateOnRestrictedElements",void 0),jt=Dt=(0,r._)([(0,S.j)("esri.rest.support.NetworkFeatureSet")],jt);const Ft=jt;let Bt=class extends((0,K.J)(M.wq)){constructor(e){super(e),this.doNotLocateOnRestrictedElements=null,this.url=null}};(0,r._)([(0,g.Cb)({type:Boolean,json:{write:!0}})],Bt.prototype,"doNotLocateOnRestrictedElements",void 0),(0,r._)([(0,g.Cb)({type:String,json:{write:!0}})],Bt.prototype,"url",void 0),Bt=(0,r._)([(0,S.j)("esri.rest.support.NetworkUrl")],Bt);const xt=Bt;var Et;function Lt(e,t,i){(0,m.i)(e)&&(t[i]=p.Z.isCollection(e)?{features:e.toArray().map((e=>e.toJSON()))}:e.toJSON())}let Mt=Et=class extends((0,K.J)(M.wq)){constructor(e){super(e),this.accumulateAttributes=null,this.apiKey=null,this.attributeParameterValues=null,this.directionsLanguage=null,this.directionsLengthUnits=null,this.directionsOutputType=null,this.directionsStyleName=null,this.directionsTimeAttribute=null,this.findBestSequence=null,this.geometryPrecision=null,this.geometryPrecisionM=null,this.geometryPrecisionZ=null,this.ignoreInvalidLocations=null,this.impedanceAttribute=null,this.outputGeometryPrecision=null,this.outputGeometryPrecisionUnits=null,this.outputLines="true-shape",this.outSpatialReference=null,this.overrides=null,this.pointBarriers=null,this.polygonBarriers=null,this.polylineBarriers=null,this.preserveFirstStop=null,this.preserveLastStop=null,this.preserveObjectID=null,this.restrictionAttributes=null,this.restrictUTurns=null,this.returnBarriers=!1,this.returnDirections=!1,this.returnPolygonBarriers=!1,this.returnPolylineBarriers=!1,this.returnRoutes=!0,this.returnStops=!1,this.returnTraversedEdges=null,this.returnTraversedJunctions=null,this.returnTraversedTurns=null,this.returnZ=!0,this.startTime=null,this.startTimeIsUTC=!0,this.stops=null,this.timeWindowsAreUTC=null,this.travelMode=null,this.useHierarchy=null,this.useTimeWindows=null}static from(e){return(0,w.m)(Et,e)}readAccumulateAttributes(e){return(0,m.a)(e)?null:e.map((e=>we.fromJSON(e)))}writeAccumulateAttributes(e,t,i){!(0,m.a)(e)&&e.length&&(t[i]=e.map((e=>we.toJSON(e))))}writePointBarriers(e,t,i){Lt(e,t,i)}writePolygonBarrier(e,t,i){Lt(e,t,i)}writePolylineBarrier(e,t,i){Lt(e,t,i)}readRestrictionAttributes(e){return(0,m.a)(e)?null:e.map((e=>Ce.fromJSON(e)))}writeRestrictionAttributes(e,t,i){!(0,m.a)(e)&&e.length&&(t[i]=e.map((e=>Ce.toJSON(e))))}readStartTime(e,t){const{startTime:i}=t;return(0,m.a)(i)?null:"now"===i?"now":new Date(i)}writeStartTime(e,t){(0,m.a)(e)||(t.startTime="now"===e?"now":e.getTime())}readStops(e,t){return function(e){return e&&"type"in e}(i=t.stops)?It.fromJSON(i):function(e){return e&&"url"in e}(i)?xt.fromJSON(i):function(e){return e&&"features"in e&&"doNotLocateOnRestrictedElements"in e}(i)?Ft.fromJSON(i):function(e){return e&&"features"in e}(i)?We.default.fromJSON(i):null;var i}writeStops(e,t,i){Lt(e,t,i)}};(0,r._)([(0,g.Cb)({type:[String],json:{name:"accumulateAttributeNames",write:!0}})],Mt.prototype,"accumulateAttributes",void 0),(0,r._)([(0,C.r)("accumulateAttributes")],Mt.prototype,"readAccumulateAttributes",null),(0,r._)([(0,_.w)("accumulateAttributes")],Mt.prototype,"writeAccumulateAttributes",null),(0,r._)([(0,g.Cb)(Ot)],Mt.prototype,"apiKey",void 0),(0,r._)([(0,g.Cb)({json:{write:!0}})],Mt.prototype,"attributeParameterValues",void 0),(0,r._)([(0,g.Cb)({type:String,json:{write:!0}})],Mt.prototype,"directionsLanguage",void 0),(0,r._)([(0,R.e)(oe)],Mt.prototype,"directionsLengthUnits",void 0),(0,r._)([(0,R.e)(ae)],Mt.prototype,"directionsOutputType",void 0),(0,r._)([(0,R.e)(ve)],Mt.prototype,"directionsStyleName",void 0),(0,r._)([(0,R.e)(ge,{name:"directionsTimeAttributeName",ignoreUnknown:!1})],Mt.prototype,"directionsTimeAttribute",void 0),(0,r._)([(0,g.Cb)({type:Boolean,json:{write:!0}})],Mt.prototype,"findBestSequence",void 0),(0,r._)([(0,g.Cb)({type:Number,json:{write:!0}})],Mt.prototype,"geometryPrecision",void 0),(0,r._)([(0,g.Cb)({type:Number,json:{write:!0}})],Mt.prototype,"geometryPrecisionM",void 0),(0,r._)([(0,g.Cb)({type:Number,json:{write:!0}})],Mt.prototype,"geometryPrecisionZ",void 0),(0,r._)([(0,g.Cb)({type:Boolean,json:{write:!0}})],Mt.prototype,"ignoreInvalidLocations",void 0),(0,r._)([(0,R.e)(we,{name:"impedanceAttributeName",ignoreUnknown:!1})],Mt.prototype,"impedanceAttribute",void 0),(0,r._)([(0,g.Cb)({type:Number,json:{write:!0}})],Mt.prototype,"outputGeometryPrecision",void 0),(0,r._)([(0,R.e)(re)],Mt.prototype,"outputGeometryPrecisionUnits",void 0),(0,r._)([(0,R.e)(ne)],Mt.prototype,"outputLines",void 0),(0,r._)([(0,g.Cb)({type:I.Z,json:{name:"outSR",write:!0}})],Mt.prototype,"outSpatialReference",void 0),(0,r._)([(0,g.Cb)({json:{write:!0}})],Mt.prototype,"overrides",void 0),(0,r._)([(0,g.Cb)({json:{name:"barriers",write:!0}})],Mt.prototype,"pointBarriers",void 0),(0,r._)([(0,_.w)("pointBarriers")],Mt.prototype,"writePointBarriers",null),(0,r._)([(0,g.Cb)({json:{write:!0}})],Mt.prototype,"polygonBarriers",void 0),(0,r._)([(0,_.w)("polygonBarriers")],Mt.prototype,"writePolygonBarrier",null),(0,r._)([(0,g.Cb)({json:{write:!0}})],Mt.prototype,"polylineBarriers",void 0),(0,r._)([(0,_.w)("polylineBarriers")],Mt.prototype,"writePolylineBarrier",null),(0,r._)([(0,g.Cb)({type:Boolean,json:{write:!0}})],Mt.prototype,"preserveFirstStop",void 0),(0,r._)([(0,g.Cb)({type:Boolean,json:{write:!0}})],Mt.prototype,"preserveLastStop",void 0),(0,r._)([(0,g.Cb)({type:Boolean,json:{write:!0}})],Mt.prototype,"preserveObjectID",void 0),(0,r._)([(0,g.Cb)({type:[String],json:{name:"restrictionAttributeNames",write:!0}})],Mt.prototype,"restrictionAttributes",void 0),(0,r._)([(0,C.r)("restrictionAttributes")],Mt.prototype,"readRestrictionAttributes",null),(0,r._)([(0,_.w)("restrictionAttributes")],Mt.prototype,"writeRestrictionAttributes",null),(0,r._)([(0,R.e)(le)],Mt.prototype,"restrictUTurns",void 0),(0,r._)([(0,g.Cb)({type:Boolean,json:{write:!0}})],Mt.prototype,"returnBarriers",void 0),(0,r._)([(0,g.Cb)({type:Boolean,json:{write:!0}})],Mt.prototype,"returnDirections",void 0),(0,r._)([(0,g.Cb)({type:Boolean,json:{write:!0}})],Mt.prototype,"returnPolygonBarriers",void 0),(0,r._)([(0,g.Cb)({type:Boolean,json:{write:!0}})],Mt.prototype,"returnPolylineBarriers",void 0),(0,r._)([(0,g.Cb)({type:Boolean,json:{write:!0}})],Mt.prototype,"returnRoutes",void 0),(0,r._)([(0,g.Cb)({type:Boolean,json:{write:!0}})],Mt.prototype,"returnStops",void 0),(0,r._)([(0,g.Cb)({type:Boolean,json:{write:!0}})],Mt.prototype,"returnTraversedEdges",void 0),(0,r._)([(0,g.Cb)({type:Boolean,json:{write:!0}})],Mt.prototype,"returnTraversedJunctions",void 0),(0,r._)([(0,g.Cb)({type:Boolean,json:{write:!0}})],Mt.prototype,"returnTraversedTurns",void 0),(0,r._)([(0,g.Cb)({type:Boolean,json:{write:!0}})],Mt.prototype,"returnZ",void 0),(0,r._)([(0,g.Cb)({type:Date,json:{type:Number,write:!0}})],Mt.prototype,"startTime",void 0),(0,r._)([(0,C.r)("startTime")],Mt.prototype,"readStartTime",null),(0,r._)([(0,_.w)("startTime")],Mt.prototype,"writeStartTime",null),(0,r._)([(0,g.Cb)({type:Boolean,json:{write:!0}})],Mt.prototype,"startTimeIsUTC",void 0),(0,r._)([(0,g.Cb)({json:{write:!0}})],Mt.prototype,"stops",void 0),(0,r._)([(0,C.r)("stops")],Mt.prototype,"readStops",null),(0,r._)([(0,_.w)("stops")],Mt.prototype,"writeStops",null),(0,r._)([(0,g.Cb)({type:Boolean,json:{write:!0}})],Mt.prototype,"timeWindowsAreUTC",void 0),(0,r._)([(0,g.Cb)({type:Ae,json:{write:!0}})],Mt.prototype,"travelMode",void 0),(0,r._)([(0,g.Cb)({type:Boolean,json:{write:!0}})],Mt.prototype,"useHierarchy",void 0),(0,r._)([(0,g.Cb)({type:Boolean,json:{write:!0}})],Mt.prototype,"useTimeWindows",void 0),Mt=Et=(0,r._)([(0,S.j)("esri.rest.support.RouteParameters")],Mt);const Pt=Mt;var Rt;let Jt=Rt=class extends((0,K.J)(M.wq)){constructor(e){super(e),this.arriveCurbApproach=null,this.arriveTime=null,this.arriveTimeOffset=null,this.bearing=null,this.bearingTol=null,this.cumulativeCosts=null,this.cumulativeDistance=null,this.cumulativeDuration=null,this.curbApproach=null,this.departCurbApproach=null,this.departTime=null,this.departTimeOffset=null,this.distanceToNetworkInMeters=null,this.geometry=null,this.lateDuration=null,this.locationType=null,this.name=null,this.navLatency=null,this.objectId=null,this.popupTemplate=null,this.posAlong=null,this.routeName=null,this.serviceCosts=null,this.serviceDistance=null,this.serviceDuration=null,this.sequence=null,this.sideOfEdge=null,this.snapX=null,this.snapY=null,this.snapZ=null,this.sourceId=null,this.sourceOid=null,this.status=null,this.symbol=null,this.timeWindowEnd=null,this.timeWindowEndOffset=null,this.timeWindowStart=null,this.timeWindowStartOffset=null,this.type="stop",this.violations=null,this.waitDuration=null,this.wait=null}readArriveTimeOffset(e,t){return Ue(t.attributes.ArriveTime,t.attributes.ArriveTimeUTC)}readCumulativeCosts(e,t){return Pe(t.attributes,"Cumul_")}readDepartTimeOffset(e,t){return Ue(t.attributes.DepartTime,t.attributes.DepartTimeUTC)}readServiceCosts(e,t){return Pe(t.attributes,"Attr_")}writeServiceCosts(e,t){Re(e,t,"Attr_")}writeTimeWindowEnd(e,t){(0,m.a)(e)||(t.attributes||(t.attributes={}),t.attributes.TimeWindowEnd=e.getTime())}writeTimeWindowStart(e,t){(0,m.a)(e)||(t.attributes||(t.attributes={}),t.attributes.TimeWindowStart=e.getTime())}readViolations(e,t){return Pe(t.attributes,"Violation_")}readWait(e,t){return Pe(t.attributes,"Wait_")}static fromGraphic(e){return new Rt({arriveCurbApproach:(0,m.i)(e.attributes.ArrivalCurbApproach)?ue.fromJSON(e.attributes.ArrivalCurbApproach):null,arriveTime:(0,m.i)(e.attributes.ArrivalTime)?new Date(e.attributes.ArrivalTime):null,arriveTimeOffset:e.attributes.ArrivalUTCOffset,cumulativeCosts:(0,m.i)(e.attributes.CumulativeCosts)?Je(JSON.parse(e.attributes.CumulativeCosts)):null,cumulativeDistance:e.attributes.CumulativeMeters??null,cumulativeDuration:e.attributes.CumulativeMinutes??null,curbApproach:(0,m.i)(e.attributes.CurbApproach)?ue.fromJSON(e.attributes.CurbApproach):null,departCurbApproach:(0,m.i)(e.attributes.DepartureCurbApproach)?ue.fromJSON(e.attributes.DepartureCurbApproach):null,departTime:(0,m.i)(e.attributes.DepartureTime)?new Date(e.attributes.DepartureTime):null,departTimeOffset:e.attributes.DepartureUTCOffset??null,geometry:e.geometry,lateDuration:e.attributes.LateMinutes??null,locationType:(0,m.i)(e.attributes.LocationType)?de.fromJSON(e.attributes.LocationType):null,name:e.attributes.Name,objectId:e.attributes.__OBJECTID,popupTemplate:e.popupTemplate,routeName:e.attributes.RouteName,sequence:e.attributes.Sequence??null,serviceCosts:(0,m.i)(e.attributes.ServiceCosts)?Je(JSON.parse(e.attributes.ServiceCosts)):null,serviceDistance:e.attributes.ServiceMeters??null,serviceDuration:e.attributes.ServiceMinutes??null,status:(0,m.i)(e.attributes.Status)?ce.fromJSON(e.attributes.Status):null,symbol:e.symbol,timeWindowEnd:(0,m.i)(e.attributes.TimeWindowEnd)?new Date(e.attributes.TimeWindowEnd):null,timeWindowEndOffset:e.attributes.TimeWindowEndUTCOffset??null,timeWindowStart:(0,m.i)(e.attributes.TimeWindowStart)?new Date(e.attributes.TimeWindowStart):null,timeWindowStartOffset:e.attributes.TimeWindowStartUTCOffset??null,waitDuration:e.attributes.WaitMinutes??null})}toGraphic(){const e={__OBJECTID:(0,m.u)(this.objectId),ArrivalCurbApproach:(0,m.i)(this.arriveCurbApproach)?ue.toJSON(this.arriveCurbApproach):null,ArrivalTime:(0,m.i)(this.arriveTime)?this.arriveTime.getTime():null,ArrivalUTCOffset:this.arriveTimeOffset,CumulativeCosts:(0,m.i)(this.cumulativeCosts)?JSON.stringify(ke(this.cumulativeCosts)):null,CumulativeMeters:this.cumulativeDistance,CumulativeMinutes:this.cumulativeDuration,CurbApproach:(0,m.i)(this.curbApproach)?ue.toJSON(this.curbApproach):null,DepartureCurbApproach:(0,m.i)(this.departCurbApproach)?ue.toJSON(this.departCurbApproach):null,DepartureTime:(0,m.i)(this.departTime)?this.departTime.getTime():null,DepartureUTCOffset:this.departTimeOffset,LateMinutes:this.lateDuration,LocationType:(0,m.i)(this.locationType)?de.toJSON(this.locationType):null,Name:(0,m.u)(this.name),RouteName:(0,m.u)(this.routeName),Sequence:this.sequence,ServiceCosts:(0,m.i)(this.serviceCosts)?JSON.stringify(ke(this.serviceCosts)):null,ServiceMeters:this.serviceDistance,ServiceMinutes:this.serviceDuration,Status:(0,m.i)(this.status)?ce.toJSON(this.status):null,TimeWindowEnd:(0,m.i)(this.timeWindowEnd)?this.timeWindowEnd.getTime():null,TimeWindowEndUTCOffset:this.timeWindowEndOffset??this.arriveTimeOffset,TimeWindowStart:(0,m.i)(this.timeWindowStart)?this.timeWindowStart.getTime():null,TimeWindowStartUTCOffset:this.timeWindowEndOffset??this.arriveTimeOffset,WaitMinutes:this.waitDuration};return new a.Z({geometry:this.geometry,attributes:e,symbol:this.symbol,popupTemplate:this.popupTemplate})}};Jt.fields=[{name:"__OBJECTID",alias:"OBJECTID",type:"esriFieldTypeOID",editable:!1,nullable:!1,domain:null},{name:"ArrivalCurbApproach",alias:"Arrival Curb Approach",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNACurbApproachType",codedValues:[{name:"Either side",code:0},{name:"From the right",code:1},{name:"From the left",code:2},{name:"Depart in the same direction",code:3}]}},{name:"ArrivalTime",alias:"Arrival Time",type:"esriFieldTypeDate",length:36,editable:!0,nullable:!0,visible:!0},{name:"ArrivalUTCOffset",alias:"Arrival Time: Offset from UTC in Minutes",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"CumulativeCosts",alias:"Cumulative Costs",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"CumulativeMeters",alias:"Cumulative Meters",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0},{name:"CumulativeMinutes",alias:"Cumulative Minutes",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0},{name:"CurbApproach",alias:"Curb Approach",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!1,domain:{type:"codedValue",name:"esriNACurbApproachType",codedValues:[{name:"Either side",code:0},{name:"From the right",code:1},{name:"From the left",code:2},{name:"Depart in the same direction",code:3}]}},{name:"DepartureCurbApproach",alias:"Departure Curb Approach",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNACurbApproachType",codedValues:[{name:"Either side",code:0},{name:"From the right",code:1},{name:"From the left",code:2},{name:"Depart in the same direction",code:3}]}},{name:"DepartureTime",alias:"Departure Time",type:"esriFieldTypeDate",length:36,editable:!0,nullable:!0,visible:!0},{name:"DepartureUTCOffset",alias:"Departure Time: Offset from UTC in Minutes",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"LateMinutes",alias:"Minutes Late",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!1},{name:"LocationType",alias:"Location Type",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNALocationType",codedValues:[{name:"Stop",code:0},{name:"Waypoint",code:1}]}},{name:"Name",alias:"Name",type:"esriFieldTypeString",length:255,editable:!0,nullable:!0,visible:!0},{name:"RouteName",alias:"Route Name",type:"esriFieldTypeString",length:255,editable:!0,nullable:!0,visible:!0},{name:"Sequence",alias:"Sequence",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"ServiceCosts",alias:"Service Costs",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"ServiceMeters",alias:"Service Meters",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!1},{name:"ServiceMinutes",alias:"Service Minutes",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!1},{name:"Status",alias:"Status",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNAObjectStatus",codedValues:[{name:"OK",code:0},{name:"Not Located on Network",code:1},{name:"Network Unbuilt",code:2},{name:"Prohibited Street",code:3},{name:"Invalid Field Values",code:4},{name:"Cannot Reach",code:5},{name:"Time Window Violation",code:6}]}},{name:"TimeWindowEnd",alias:"Time Window End",type:"esriFieldTypeDate",length:36,editable:!0,nullable:!0,visible:!1},{name:"TimeWindowEndUTCOffset",alias:"Time Window End: Offset from UTC in Minutes",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"TimeWindowStart",alias:"Time Window Start",type:"esriFieldTypeDate",length:36,editable:!0,nullable:!0,visible:!1},{name:"TimeWindowStartUTCOffset",alias:"Time Window Start: Offset from UTC in Minutes",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"WaitMinutes",alias:"Minutes Early",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!1}],Jt.popupInfo={title:"{Name}",fieldInfos:[{fieldName:"Name",label:"Name",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"RouteName",label:"Route Name",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"Sequence",label:"Sequence",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"ArrivalTime",label:"Arrival Time",isEditable:!0,tooltip:"",visible:!0,format:{dateFormat:"shortDateShortTime24"},stringFieldOption:"textbox"},{fieldName:"ArrivalUTCOffset",label:"Arrival Time: Offset from UTC in Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"DepartureTime",label:"Departure Time",isEditable:!0,tooltip:"",visible:!0,format:{dateFormat:"shortDateShortTime24"},stringFieldOption:"textbox"},{fieldName:"DepartureUTCOffset",label:"Departure Time: Offset from UTC in Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"CurbApproach",label:"Curb Approach",isEditable:!0,tooltip:"",visible:!1,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"ArrivalCurbApproach",label:"Arrival Curb Approach",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"DepartureCurbApproach",label:"Departure Curb Approach",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"Status",label:"Status",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"LocationType",label:"Location Type",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"TimeWindowStart",label:"Time Window Start",isEditable:!0,tooltip:"",visible:!1,format:{dateFormat:"shortDateShortTime24"},stringFieldOption:"textbox"},{fieldName:"TimeWindowStartUTCOffset",label:"Time Window Start: Offset from UTC in Minutes",isEditable:!1,tooltip:"",visible:!1,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"TimeWindowEnd",label:"Time Window End",isEditable:!0,tooltip:"",visible:!1,format:{dateFormat:"shortDateShortTime24"},stringFieldOption:"textbox"},{fieldName:"TimeWindowEndUTCOffset",label:"Time Window End: Offset from UTC in Minutes",isEditable:!1,tooltip:"",visible:!1,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"ServiceMinutes",label:"Service Minutes",isEditable:!0,tooltip:"",visible:!1,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"ServiceMeters",label:"Service Meters",isEditable:!0,tooltip:"",visible:!1,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"ServiceCosts",label:"Service Costs",isEditable:!0,tooltip:"",visible:!1,stringFieldOption:"textbox"},{fieldName:"CumulativeMinutes",label:"Cumulative Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"CumulativeMeters",label:"Cumulative Meters",isEditable:!1,tooltip:"",visible:!0,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"CumulativeCosts",label:"Cumulative Costs",isEditable:!0,tooltip:"",visible:!1,stringFieldOption:"textbox"},{fieldName:"LateMinutes",label:"Minutes Late",isEditable:!1,tooltip:"",visible:!1,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"WaitMinutes",label:"Minutes Early",isEditable:!1,tooltip:"",visible:!1,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"}],description:null,showAttachments:!1,mediaInfos:[]},(0,r._)([(0,g.Cb)({type:ue.apiValues,json:{read:{source:"attributes.ArrivalCurbApproach",reader:ue.read}}})],Jt.prototype,"arriveCurbApproach",void 0),(0,r._)([(0,g.Cb)({type:Date,json:{read:{source:"attributes.ArriveTimeUTC"}}})],Jt.prototype,"arriveTime",void 0),(0,r._)([(0,g.Cb)()],Jt.prototype,"arriveTimeOffset",void 0),(0,r._)([(0,C.r)("arriveTimeOffset",["attributes.ArriveTime","attributes.ArriveTimeUTC"])],Jt.prototype,"readArriveTimeOffset",null),(0,r._)([(0,g.Cb)({json:{name:"attributes.Bearing",read:!1,write:!0}})],Jt.prototype,"bearing",void 0),(0,r._)([(0,g.Cb)({json:{name:"attributes.BearingTol",read:!1,write:!0}})],Jt.prototype,"bearingTol",void 0),(0,r._)([(0,g.Cb)()],Jt.prototype,"cumulativeCosts",void 0),(0,r._)([(0,C.r)("cumulativeCosts",["attributes"])],Jt.prototype,"readCumulativeCosts",null),(0,r._)([(0,g.Cb)({json:{read:!1}})],Jt.prototype,"cumulativeDistance",void 0),(0,r._)([(0,g.Cb)({json:{read:!1}})],Jt.prototype,"cumulativeDuration",void 0),(0,r._)([(0,g.Cb)({type:ue.apiValues,json:{name:"attributes.CurbApproach",read:{reader:ue.read},write:{writer:ue.write}}})],Jt.prototype,"curbApproach",void 0),(0,r._)([(0,g.Cb)({type:ue.apiValues,json:{read:{source:"attributes.DepartCurbApproach",reader:ue.read}}})],Jt.prototype,"departCurbApproach",void 0),(0,r._)([(0,g.Cb)({type:Date,json:{read:{source:"attributes.DepartTimeUTC"}}})],Jt.prototype,"departTime",void 0),(0,r._)([(0,g.Cb)()],Jt.prototype,"departTimeOffset",void 0),(0,r._)([(0,C.r)("departTimeOffset",["attributes.DepartTime","attributes.DepartTimeUTC"])],Jt.prototype,"readDepartTimeOffset",null),(0,r._)([(0,g.Cb)({json:{read:{source:"attributes.DistanceToNetworkInMeters"}}})],Jt.prototype,"distanceToNetworkInMeters",void 0),(0,r._)([(0,g.Cb)({type:k.Z,json:{write:!0}})],Jt.prototype,"geometry",void 0),(0,r._)([(0,g.Cb)({json:{name:"attributes.LateMinutes",read:!1}})],Jt.prototype,"lateDuration",void 0),(0,r._)([(0,g.Cb)({type:de.apiValues,json:{name:"attributes.LocationType",read:{reader:de.read},write:{writer:de.write}}})],Jt.prototype,"locationType",void 0),(0,r._)([(0,g.Cb)({json:{name:"attributes.Name"}})],Jt.prototype,"name",void 0),(0,r._)([(0,g.Cb)({json:{read:{source:"attributes.NavLatency"}}})],Jt.prototype,"navLatency",void 0),(0,r._)([(0,g.Cb)({json:{name:"attributes.ObjectID"}})],Jt.prototype,"objectId",void 0),(0,r._)([(0,g.Cb)({type:n.Z,json:{read:!1}})],Jt.prototype,"popupTemplate",void 0),(0,r._)([(0,g.Cb)({json:{read:{source:"attributes.PosAlong"}}})],Jt.prototype,"posAlong",void 0),(0,r._)([(0,g.Cb)({json:{name:"attributes.RouteName"}})],Jt.prototype,"routeName",void 0),(0,r._)([(0,g.Cb)()],Jt.prototype,"serviceCosts",void 0),(0,r._)([(0,C.r)("serviceCosts",["attributes"])],Jt.prototype,"readServiceCosts",null),(0,r._)([(0,_.w)("serviceCosts")],Jt.prototype,"writeServiceCosts",null),(0,r._)([(0,g.Cb)({json:{read:!1}})],Jt.prototype,"serviceDistance",void 0),(0,r._)([(0,g.Cb)({json:{read:!1}})],Jt.prototype,"serviceDuration",void 0),(0,r._)([(0,g.Cb)({json:{name:"attributes.Sequence"}})],Jt.prototype,"sequence",void 0),(0,r._)([(0,g.Cb)({type:me.apiValues,json:{read:{source:"attributes.SideOfEdge",reader:me.read}}})],Jt.prototype,"sideOfEdge",void 0),(0,r._)([(0,g.Cb)({json:{read:{source:"attributes.SnapX"}}})],Jt.prototype,"snapX",void 0),(0,r._)([(0,g.Cb)({json:{read:{source:"attributes.SnapY"}}})],Jt.prototype,"snapY",void 0),(0,r._)([(0,g.Cb)({json:{read:{source:"attributes.SnapZ"}}})],Jt.prototype,"snapZ",void 0),(0,r._)([(0,g.Cb)({json:{read:{source:"attributes.SourceID"}}})],Jt.prototype,"sourceId",void 0),(0,r._)([(0,g.Cb)({json:{read:{source:"attributes.SourceOID"}}})],Jt.prototype,"sourceOid",void 0),(0,r._)([(0,g.Cb)({type:ce.apiValues,json:{read:{source:"attributes.Status",reader:ce.read}}})],Jt.prototype,"status",void 0),(0,r._)([(0,g.Cb)({types:L.LB,json:{read:!1}})],Jt.prototype,"symbol",void 0),(0,r._)([(0,g.Cb)({type:Date,json:{name:"attributes.TimeWindowEnd"}})],Jt.prototype,"timeWindowEnd",void 0),(0,r._)([(0,_.w)("timeWindowEnd")],Jt.prototype,"writeTimeWindowEnd",null),(0,r._)([(0,g.Cb)({json:{read:!1}})],Jt.prototype,"timeWindowEndOffset",void 0),(0,r._)([(0,g.Cb)({type:Date,json:{name:"attributes.TimeWindowStart"}})],Jt.prototype,"timeWindowStart",void 0),(0,r._)([(0,_.w)("timeWindowStart")],Jt.prototype,"writeTimeWindowStart",null),(0,r._)([(0,g.Cb)({json:{read:!1}})],Jt.prototype,"timeWindowStartOffset",void 0),(0,r._)([(0,g.Cb)({readOnly:!0,json:{read:!1}})],Jt.prototype,"type",void 0),(0,r._)([(0,g.Cb)()],Jt.prototype,"violations",void 0),(0,r._)([(0,C.r)("violations",["attributes"])],Jt.prototype,"readViolations",null),(0,r._)([(0,g.Cb)({json:{read:!1}})],Jt.prototype,"waitDuration",void 0),(0,r._)([(0,g.Cb)()],Jt.prototype,"wait",void 0),(0,r._)([(0,C.r)("wait",["attributes"])],Jt.prototype,"readWait",null),Jt=Rt=(0,r._)([(0,S.j)("esri.rest.support.Stop")],Jt);const kt=Jt;function Ut(e){return e.length?e:null}function Zt(e){const{defaultTravelMode:t,supportedTravelModes:i}=e;return i.find((e=>e.id===t))}function Wt(e){switch(e){case"esriGeometryPoint":return{type:"esriSMS",style:"esriSMSCircle",size:12,color:[0,0,0,0],outline:Wt("esriGeometryPolyline")};case"esriGeometryPolyline":return{type:"esriSLS",style:"esriSLSSolid",width:1,color:[0,0,0,0]};case"esriGeometryPolygon":return{type:"esriSFS",style:"esriSFSNull",outline:Wt("esriGeometryPolyline")}}}function Vt(e){return"layers"in e}async function Gt(e){const t=I.Z.WGS84;return await(0,A.iQ)(e.spatialReference,t),(0,A.iV)(e,t)}function qt(e,t){switch(t){case"seconds":return e/60;case"hours":return 60*e;case"days":return 60*e*24;default:return e}}function zt(e,t){return"decimal-degrees"===t||"points"===t||"unknown"===t?e:(0,v.c)(e,t,"meters")}i(26822),i(51723),i(23243),i(51669),i(6090),i(3977),i(36741),i(11253),i(90319),i(38822),i(52228),i(74057),i(48190),i(85557),i(95587),i(94070),i(43022),i(16218),i(9075),i(12158),i(74864),i(63683),i(94479),i(45702),i(51127),i(9352),i(89241),i(91700),i(63136),i(32037),i(90811),i(60045),i(68681),i(93939),i(238),i(68714),i(82933),i(65775),i(12381),i(73173),i(92624),i(92847),i(92200),i(51653),i(22465),i(5777),i(67541),i(93314),i(35197),i(1557),i(47842),i(17298),i(41864),i(74742),i(28239);const Kt=p.Z.ofType(lt),Ht=p.Z.ofType(dt),$t=p.Z.ofType(yt),Qt=p.Z.ofType(ft),Yt=p.Z.ofType(gt),Xt=p.Z.ofType(kt),ei=c.L.getLogger("esri.layers.RouteLayer");let ti=class extends((0,j.h)((0,x.M)((0,F.O)((0,B.I)((0,y.M)((0,d.p)(D.Z))))))){constructor(e){super(e),this._cachedServiceDescription=null,this._featureCollection=null,this._type="Feature Collection",this.defaultSymbols=new X,this.directionLines=null,this.directionPoints=null,this.featureCollectionType="route",this.legendEnabled=!1,this.maxScale=0,this.minScale=0,this.pointBarriers=new $t,this.polygonBarriers=new Qt,this.polylineBarriers=new Yt,this.routeInfo=null,this.spatialReference=I.Z.WGS84,this.stops=new Xt,this.type="route";const t=()=>{this._setStopSymbol(this.stops)};this.own([(0,f.on)((()=>this.stops),"change",t,{sync:!0,onListenerAdd:t})])}writeFeatureCollectionWebmap(e,t,i,r){const o=[this._writePolygonBarriers(),this._writePolylineBarriers(),this._writePointBarriers(),this._writeRouteInfo(),this._writeDirectionLines(),this._writeDirectionPoints(),this._writeStops()].filter((e=>!!e)),s=o.map(((e,t)=>t)),a="web-map"===r.origin?"featureCollection.layers":"layers";(0,b.s)(a,o,t),t.opacity=this.opacity,t.visibility=this.visible,t.visibleLayers=s}readDirectionLines(e,t){return this._getNetworkFeatures(t,"DirectionLines",(e=>lt.fromGraphic(e)))}readDirectionPoints(e,t){return this._getNetworkFeatures(t,"DirectionPoints",(e=>dt.fromGraphic(e)))}get fullExtent(){const e=new O.Z({xmin:-180,ymin:-90,xmax:180,ymax:90,spatialReference:I.Z.WGS84});if((0,m.i)(this.routeInfo)&&(0,m.i)(this.routeInfo.geometry))return this.routeInfo.geometry.extent??e;if((0,m.a)(this.stops))return e;const t=this.stops.filter((e=>(0,m.i)(e.geometry)));if(t.length<2)return e;const{spatialReference:i}=t.getItemAt(0).geometry;if((0,m.a)(i))return e;const r=t.toArray().map((e=>{const t=e.geometry;return[t.x,t.y]}));return new U.Z({points:r,spatialReference:i}).extent}readMaxScale(e,t){return(Vt(t)?t.layers:t.featureCollection.layers).find((e=>(0,m.i)(e.layerDefinition.maxScale)))?.layerDefinition.maxScale??0}readMinScale(e,t){return(Vt(t)?t.layers:t.featureCollection.layers).find((e=>(0,m.i)(e.layerDefinition.minScale)))?.layerDefinition.minScale??0}readPointBarriers(e,t){return this._getNetworkFeatures(t,"Barriers",(e=>yt.fromGraphic(e)))}readPolygonBarriers(e,t){return this._getNetworkFeatures(t,"PolygonBarriers",(e=>ft.fromGraphic(e)))}readPolylineBarriers(e,t){return this._getNetworkFeatures(t,"PolylineBarriers",(e=>gt.fromGraphic(e)))}readRouteInfo(e,t){const i=this._getNetworkFeatures(t,"RouteInfo",(e=>Nt.fromGraphic(e)));return i.length>0?i.getItemAt(0):null}readSpatialReference(e,t){const i=Vt(t)?t.layers:t.featureCollection.layers;if(!i.length)return I.Z.WGS84;const{layerDefinition:r}=i[0],o=r.spatialReference??r.extent.spatialReference??I.W;return I.Z.fromJSON(o)}readStops(e,t){return this._getNetworkFeatures(t,"Stops",(e=>kt.fromGraphic(e)),(e=>this._setStopSymbol(e)))}get title(){return(0,m.i)(this.routeInfo)&&(0,m.i)(this.routeInfo.name)?this.routeInfo.name:"Route"}set title(e){e?this._override("title",e):this._clearOverride("title")}get url(){return o.Z.routeServiceUrl}set url(e){null!=e?this._set("url",(0,E.a)(e,ei)):this._set("url",o.Z.routeServiceUrl)}load(e){return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Feature Collection"]},e)),Promise.resolve(this)}removeAll(){this.removeResult(),this.pointBarriers.removeAll(),this.polygonBarriers.removeAll(),this.polylineBarriers.removeAll(),this.stops.removeAll()}removeResult(){(0,m.i)(this.directionLines)&&(this.directionLines.removeAll(),this._set("directionLines",null)),(0,m.i)(this.directionPoints)&&(this.directionPoints.removeAll(),this._set("directionPoints",null)),(0,m.i)(this.routeInfo)&&this._set("routeInfo",null)}async save(){await this.load();const{fullExtent:e,portalItem:t}=this;if(!t)throw new u.Z("routelayer:portal-item-not-set","save() requires to the layer to have a portal item");if(!t.id)throw new u.Z("routelayer:portal-item-not-saved","Please use saveAs() first to save the routelayer");if("Feature Collection"!==t.type)throw new u.Z("routelayer:portal-item-wrong-type",'Portal item needs to have type "Feature Collection"');if((0,m.a)(this.routeInfo))throw new u.Z("routelayer:route-unsolved","save() requires a solved route");const{portal:i}=t;await i._signIn(),i.user||await t.reload();const{itemUrl:r,itemControl:o}=t;if("admin"!==o&&"update"!==o)throw new u.Z("routelayer:insufficient-permissions","To save this layer, you need to be the owner or an administrator of your organization");const s={messages:[],origin:"portal-item",portal:i,url:r&&(0,T.mN)(r),writtenProperties:[]},a=this.write(null,s);return t.extent=await Gt(e),t.title=this.title,await t.update({data:a}),t}async saveAs(e,t={}){if(await this.load(),(0,m.a)(this.routeInfo))throw new u.Z("routelayer:route-unsolved","saveAs() requires a solved route");const i=ee.default.from(e).clone();i.extent??(i.extent=await Gt(this.fullExtent)),i.id=null,i.portal??(i.portal=q.Z.getDefault()),i.title??(i.title=this.title),i.type="Feature Collection",i.typeKeywords=["Data","Feature Collection",te.T.MULTI_LAYER,"Route Layer"];const{portal:r}=i,o={messages:[],origin:"portal-item",portal:r,url:null,writtenProperties:[]};await r._signIn();const s=t?.folder,a=this.write(null,o);return await r.user.addItem({item:i,folder:s,data:a}),this.portalItem=i,(0,N.u)(o),o.portalItem=i,i}async solve(e,t){const i=e?.stops??this.stops,r=e?.pointBarriers??Ut(this.pointBarriers),o=e?.polylineBarriers??Ut(this.polylineBarriers),s=e?.polygonBarriers??Ut(this.polygonBarriers);if((0,m.a)(i))throw new u.Z("routelayer:undefined-stops","the route layer must have stops defined in the route parameters.");if(("esri.rest.support.FeatureSet"===i.declaredClass||"esri.rest.support.NetworkFeatureSet"===i.declaredClass)&&i.features.length<2||p.Z.isCollection(i)&&i.length<2)throw new u.Z("routelayer:insufficent-stops","the route layer must have two or more stops to solve a route.");if(p.Z.isCollection(i))for(const e of i)e.routeName=null;const a=e?.apiKey,n=this.url,l=await this._getServiceDescription(n,a,t),d=Zt(l),c=e?.travelMode??d,y=(0,m.l)(e?.accumulateAttributes,[]);(0,m.i)(c)&&(y.push(c.distanceAttributeName),c.timeAttributeName&&y.push(c.timeAttributeName));const b={startTime:new Date},f={accumulateAttributes:y,directionsOutputType:"featuresets",ignoreInvalidLocations:!0,pointBarriers:r,polylineBarriers:o,polygonBarriers:s,preserveFirstStop:!0,preserveLastStop:!0,returnBarriers:!!r,returnDirections:!0,returnPolygonBarriers:!!s,returnPolylineBarriers:!!o,returnRoutes:!0,returnStops:!0,stops:i},v=e?Pt.from(e):new Pt;for(const e in b)null==v[e]&&(v[e]=b[e]);let T;v.set(f);try{T=await async function(e,t,i){const r=[],o=[],s={},a={},n=(0,ie.p)(e),{path:l}=n;at(t.stops)&&Ee(t.stops.features,o,"stops.features",s),at(t.pointBarriers)&&Ee(t.pointBarriers.features,o,"pointBarriers.features",s),at(t.polylineBarriers)&&Ee(t.polylineBarriers.features,o,"polylineBarriers.features",s),at(t.polygonBarriers)&&Ee(t.polygonBarriers.features,o,"polygonBarriers.features",s);const p=await(0,Me.aX)(o);for(const e in s){const t=s[e];r.push(e),a[e]=p.slice(t[0],t[1])}if(function(e,t){for(let i=0;i<t.length;i++){const r=e[t[i]];if(r&&r.length)for(const e of r)if((0,m.i)(e)&&e.hasZ)return!0}return!1}(a,r)){let e=null;try{e=await Le(l,t.apiKey,i)}catch{}e&&!e.hasZ&&function(e,t){for(let i=0;i<t.length;i++){const r=e[t[i]];if(r&&r.length)for(const e of r)e.z=void 0}console.log("The remote Network Analysis service is powered by a network dataset which is not Z-aware.\nZ-coordinates of the input geometry are ignored.")}(a,r)}for(const e in a)a[e].forEach(((i,r)=>{t.get(e)[r].geometry=i}));const u={...i,query:{...n.query,...Ze(t),f:"json"}},d=l.endsWith("/solve")?l:`${l}/solve`,{data:c}=await(0,z.default)(d,u);return function(e){const{barriers:t,directionLines:i,directionPoints:r,directions:o,messages:s,polygonBarriers:a,polylineBarriers:n,routes:l,stops:p,traversedEdges:u,traversedJunctions:d,traversedTurns:c}=e,y=e=>{const t=h.find((t=>t.routeName===e));if((0,m.i)(t))return t;const i={routeId:h.length+1,routeName:e};return h.push(i),i},b=e=>{const t=h.find((t=>t.routeId===e));if((0,m.i)(t))return t;const i={routeId:e,routeName:null};return h.push(i),i},h=[];l?.features.forEach(((e,t)=>{e.geometry.spatialReference=l.spatialReference;const i=e.attributes.Name,r=t+1;h.push({routeId:r,routeName:i,route:e})})),o?.forEach((e=>{const{routeName:t}=e;y(t).directions=e}));const f=p?.features.every((e=>(0,m.a)(e.attributes.RouteName)))&&h.length>0?h[0].routeName:null;return p?.features.forEach((e=>{var t;e.geometry&&((t=e.geometry).spatialReference??(t.spatialReference=p.spatialReference));const i=f??e.attributes.RouteName,r=y(i);r.stops??(r.stops=[]),r.stops.push(e)})),i?.features.forEach((e=>{const t=e.attributes.RouteID,r=b(t),{geometryType:o,spatialReference:s}=i;r.directionLines??(r.directionLines={features:[],geometryType:o,spatialReference:s}),r.directionLines.features.push(e)})),r?.features.forEach((e=>{const t=e.attributes.RouteID,i=b(t),{geometryType:o,spatialReference:s}=r;i.directionPoints??(i.directionPoints={features:[],geometryType:o,spatialReference:s}),i.directionPoints.features.push(e)})),u?.features.forEach((e=>{const t=e.attributes.RouteID,i=b(t),{geometryType:r,spatialReference:o}=u;i.traversedEdges??(i.traversedEdges={features:[],geometryType:r,spatialReference:o}),i.traversedEdges.features.push(e)})),d?.features.forEach((e=>{const t=e.attributes.RouteID,i=b(t),{geometryType:r,spatialReference:o}=d;i.traversedJunctions??(i.traversedJunctions={features:[],geometryType:r,spatialReference:o}),i.traversedJunctions.features.push(e)})),c?.features.forEach((e=>{const t=e.attributes.RouteID,i=b(t);i.traversedTurns??(i.traversedTurns={features:[]}),i.traversedTurns.features.push(e)})),ot.fromJSON({routeResults:h,barriers:t,polygonBarriers:a,polylineBarriers:n,messages:s})}(c)}(n,v,t)}catch(e){throw(0,h.D_)(e)?e:new u.Z("routelayer:failed-route-request","the routing request failed",{error:e})}const g=this._toRouteLayerSolution(T);return this._isOverridden("title")||(this.title=(0,m.l)(g.routeInfo.name,"Route")),function(e,t,i){const r=t.networkDataset.networkAttributes.filter((e=>"cost"===e.usageType)),o=Zt(t),s=i.travelMode??o;if((0,m.a)(s))return void ei.warn("route-layer:missing-travel-mode","The routing service must have a default travel mode or one must be specified in the route parameter.");const{timeAttributeName:a,distanceAttributeName:n}=s,l=r.find((e=>e.name===a)),p=r.find((e=>e.name===n)),d=(0,m.u)(i.travelMode)?.impedanceAttributeName??(0,m.u)(i.impedanceAttribute)??t.impedance,c=se.fromJSON(l?.units),y=oe.fromJSON(p?.units);if(!c||!y)throw new u.Z("routelayer:unknown-impedance-units","the units of either the distance or time impedance are unknown");const b=i.directionsLanguage??t.directionsLanguage,h=(0,m.u)(i.accumulateAttributes)??t.accumulateAttributeNames??[],f=new Set(r.filter((({name:e})=>e===a||e===n||e===d||h.includes(e))).map((({name:e})=>e))),v=e=>{for(const t in e)f.has(t)||delete e[t]};for(const t of e.pointBarriers)(0,m.i)(t.costs)&&(t.addedCost=t.costs[d]??0,v(t.costs));for(const t of e.polygonBarriers)(0,m.i)(t.costs)&&(t.scaleFactor=t.costs[d]??1,v(t.costs));for(const t of e.polylineBarriers)(0,m.i)(t.costs)&&(t.scaleFactor=t.costs[d]??1,v(t.costs));const{routeInfo:T}=e,{findBestSequence:g,preserveFirstStop:w,preserveLastStop:C,startTimeIsUTC:S,timeWindowsAreUTC:_}=i;T.analysisSettings=new Ct({accumulateAttributes:h,directionsLanguage:b,findBestSequence:g,preserveFirstStop:w,preserveLastStop:C,startTimeIsUTC:S,timeWindowsAreUTC:_,travelMode:s}),T.totalDuration=qt(T.totalCosts[a]??0,c),T.totalDistance=zt(T.totalCosts[n]??0,y),T.totalLateDuration=qt(T.totalViolations[a]??0,c),T.totalWaitDuration=qt(T.totalWait[a]??0,c),(0,m.i)(T.totalCosts)&&v(T.totalCosts),(0,m.i)(T.totalViolations)&&v(T.totalViolations),(0,m.i)(T.totalWait)&&v(T.totalWait);for(const t of e.stops)(0,m.i)(t.serviceCosts)&&(t.serviceDuration=qt(t.serviceCosts[a]??0,c),t.serviceDistance=zt(t.serviceCosts[n]??0,y),v(t.serviceCosts)),(0,m.i)(t.cumulativeCosts)&&(t.cumulativeDuration=qt(t.cumulativeCosts[a]??0,c),t.cumulativeDistance=zt(t.cumulativeCosts[n]??0,y),v(t.cumulativeCosts)),(0,m.i)(t.violations)&&(t.lateDuration=qt(t.violations[a]??0,c),v(t.violations)),(0,m.i)(t.wait)&&(t.waitDuration=qt(t.wait[a]??0,c),v(t.wait))}(g,l,v),g}update(e){const{stops:t,directionLines:i,directionPoints:r,pointBarriers:o,polylineBarriers:s,polygonBarriers:a,routeInfo:n}=e;this.set({stops:t,pointBarriers:o,polylineBarriers:s,polygonBarriers:a}),this._set("directionLines",i),this._set("directionPoints",r),this._set("routeInfo",n)}_getNetworkFeatures(e,t,i,r){const o=(Vt(e)?e.layers:e.featureCollection.layers).find((e=>e.layerDefinition.name===t));if((0,m.a)(o))return new p.Z;const{layerDefinition:s,popupInfo:u,featureSet:d}=o,c=s.drawingInfo.renderer,{features:y}=d,b=c&&(0,l.a)(c),h=y.map((e=>{const r=a.Z.fromJSON(e),o=i(r);return o.symbol??(o.symbol=b?.getSymbol(r)??this._getNetworkSymbol(t)),o.popupTemplate??(o.popupTemplate=u&&n.Z.fromJSON(u)),o}));return r&&h.some((e=>!e.symbol))&&r(h),new p.Z(h)}_getNetworkSymbol(e){switch(e){case"Barriers":return this.defaultSymbols.pointBarriers;case"DirectionPoints":return this.defaultSymbols.directionPoints;case"DirectionLines":return this.defaultSymbols.directionLines;case"PolylineBarriers":return this.defaultSymbols.polylineBarriers;case"PolygonBarriers":return this.defaultSymbols.polygonBarriers;case"RouteInfo":return this.defaultSymbols.routeInfo;case"Stops":return null}}async _getServiceDescription(e,t,i){if((0,m.i)(this._cachedServiceDescription)&&this._cachedServiceDescription.url===e)return this._cachedServiceDescription.serviceDescription;const r=await Le(e,t,i);return this._cachedServiceDescription={serviceDescription:r,url:e},r}_setStopSymbol(e){if(!e||0===e.length)return;if((0,m.a)(this.defaultSymbols.stops))return;if(e.every((e=>(0,m.i)(e.symbol))))return;const{first:t,last:i,middle:r,unlocated:o,waypoint:s,break:a}=this.defaultSymbols.stops;if((0,m.a)(this.routeInfo)||1===e.length)return void e.forEach(((o,s)=>{switch(s){case 0:o.symbol=t;break;case e.length-1:o.symbol=i;break;default:o.symbol=r}}));const n=e.map((e=>e.sequence)).filter((e=>(0,m.i)(e))),l=Math.min(...n),p=Math.max(...n);for(const n of e)n.sequence!==l?n.sequence!==p?"ok"===n.status||"not-located-on-closest"===n.status?"waypoint"!==n.locationType?"break"!==n.locationType?n.symbol=r:n.symbol=a:n.symbol=s:n.symbol=o:n.symbol=i:n.symbol=t}_toRouteLayerSolution(e){const t=e.routeResults[0].stops.map((e=>kt.fromJSON(e.toJSON())));this._setStopSymbol(t);const i=new Xt(t),r=new Qt(e.polygonBarriers?.map((e=>{const t=ft.fromJSON(e.toJSON());return t.symbol=this.defaultSymbols.polygonBarriers,t}))),o=new Yt(e.polylineBarriers?.map((e=>{const t=gt.fromJSON(e.toJSON());return t.symbol=this.defaultSymbols.polylineBarriers,t}))),s=new $t(e.pointBarriers?.map((e=>{const t=yt.fromJSON(e.toJSON());return t.symbol=this.defaultSymbols.pointBarriers,t}))),a=Nt.fromJSON(e.routeResults[0].route.toJSON());a.symbol=this.defaultSymbols.routeInfo;const n=new Ht(e.routeResults[0].directionPoints?.features.map((e=>{const t=dt.fromJSON(e.toJSON());return t.symbol=this.defaultSymbols.directionPoints,t})));return{directionLines:new Kt(e.routeResults[0].directionLines?.features.map((e=>{const t=lt.fromJSON(e.toJSON());return t.symbol=this.defaultSymbols.directionLines,t}))),directionPoints:n,pointBarriers:s,polygonBarriers:r,polylineBarriers:o,routeInfo:a,stops:i}}_writeDirectionLines(){return this._writeNetworkFeatures(this.directionLines,this.defaultSymbols.directionLines,"esriGeometryPolyline",lt.fields,lt.popupInfo,"DirectionLines","Direction Lines")}_writeDirectionPoints(){return this._writeNetworkFeatures(this.directionPoints,this.defaultSymbols.directionPoints,"esriGeometryPoint",dt.fields,dt.popupInfo,"DirectionPoints","Direction Points")}_writeNetworkFeatures(e,t,i,r,o,s,a){return(0,m.a)(e)||!e.length?null:{featureSet:{features:e.toArray().map((e=>function(e){const{attributes:t,geometry:i,popupTemplate:r,symbol:o}=e.toGraphic().toJSON();return{attributes:t,geometry:i,popupInfo:r,symbol:o}}(e))),geometryType:i},layerDefinition:{capabilities:"Query,Update,Editing",drawingInfo:{renderer:{type:"simple",symbol:(0,m.i)(t)?t.toJSON():Wt(i)}},extent:this.fullExtent.toJSON(),fields:r,geometryType:i,hasM:!1,hasZ:!1,maxScale:this.maxScale,minScale:this.minScale,name:s,objectIdField:"__OBJECTID",spatialReference:this.spatialReference.toJSON(),title:a,type:"Feature Layer",typeIdField:""},popupInfo:o}}_writePointBarriers(){return this._writeNetworkFeatures(this.pointBarriers,this.defaultSymbols.pointBarriers,"esriGeometryPoint",yt.fields,yt.popupInfo,"Barriers","Point Barriers")}_writePolygonBarriers(){return this._writeNetworkFeatures(this.polygonBarriers,this.defaultSymbols.polygonBarriers,"esriGeometryPolygon",ft.fields,ft.popupInfo,"PolygonBarriers","Polygon Barriers")}_writePolylineBarriers(){return this._writeNetworkFeatures(this.polylineBarriers,this.defaultSymbols.polylineBarriers,"esriGeometryPolyline",gt.fields,gt.popupInfo,"PolylineBarriers","Line Barriers")}_writeRouteInfo(){return this._writeNetworkFeatures((0,m.i)(this.routeInfo)?new p.Z([this.routeInfo]):null,this.defaultSymbols.routeInfo,"esriGeometryPolyline",Nt.fields,Nt.popupInfo,"RouteInfo","Route Details")}_writeStops(){const e=this._writeNetworkFeatures(this.stops,null,"esriGeometryPoint",kt.fields,kt.popupInfo,"Stops","Stops");if((0,m.a)(e))return null;const{stops:t}=this.defaultSymbols,i=(0,m.i)(t)&&(0,m.i)(t.first)&&t.first.toJSON(),r=(0,m.i)(t)&&(0,m.i)(t.middle)&&t.middle.toJSON(),o=(0,m.i)(t)&&(0,m.i)(t.last)&&t.last.toJSON();return e.layerDefinition.drawingInfo.renderer={type:"uniqueValue",field1:"Sequence",defaultSymbol:r,uniqueValueInfos:[{value:"1",symbol:i,label:"First Stop"},{value:`${this.stops.length}`,symbol:o,label:"Last Stop"}]},e}};(0,r._)([(0,g.Cb)({readOnly:!0,json:{read:!1,origins:{"portal-item":{write:{allowNull:!0,ignoreOrigin:!0}},"web-map":{write:{overridePolicy(){return{allowNull:!0,ignoreOrigin:null==this.portalItem}}}}}}})],ti.prototype,"_featureCollection",void 0),(0,r._)([(0,_.w)(["web-map","portal-item"],"_featureCollection")],ti.prototype,"writeFeatureCollectionWebmap",null),(0,r._)([(0,g.Cb)({readOnly:!0,json:{read:!1,origins:{"web-map":{write:{target:"type",overridePolicy(){return{ignoreOrigin:null!=this.portalItem}}}}}}})],ti.prototype,"_type",void 0),(0,r._)([(0,g.Cb)({nonNullable:!0,type:X})],ti.prototype,"defaultSymbols",void 0),(0,r._)([(0,g.Cb)({readOnly:!0})],ti.prototype,"directionLines",void 0),(0,r._)([(0,C.r)(["web-map","portal-item"],"directionLines",["layers","featureCollection.layers"])],ti.prototype,"readDirectionLines",null),(0,r._)([(0,g.Cb)({readOnly:!0})],ti.prototype,"directionPoints",void 0),(0,r._)([(0,C.r)(["web-map","portal-item"],"directionPoints",["layers","featureCollection.layers"])],ti.prototype,"readDirectionPoints",null),(0,r._)([(0,g.Cb)({readOnly:!0,json:{read:!1,origins:{"web-map":{write:{ignoreOrigin:!0}}}}})],ti.prototype,"featureCollectionType",void 0),(0,r._)([(0,g.Cb)({readOnly:!0})],ti.prototype,"fullExtent",null),(0,r._)([(0,g.Cb)({json:{origins:{"web-map":{name:"featureCollection.showLegend"}},write:!0}})],ti.prototype,"legendEnabled",void 0),(0,r._)([(0,g.Cb)({type:["show","hide"]})],ti.prototype,"listMode",void 0),(0,r._)([(0,g.Cb)({type:Number,nonNullable:!0,json:{write:!1}})],ti.prototype,"maxScale",void 0),(0,r._)([(0,C.r)(["web-map","portal-item"],"maxScale",["layers","featureCollection.layers"])],ti.prototype,"readMaxScale",null),(0,r._)([(0,g.Cb)({type:Number,nonNullable:!0,json:{write:!1}})],ti.prototype,"minScale",void 0),(0,r._)([(0,C.r)(["web-map","portal-item"],"minScale",["layers","featureCollection.layers"])],ti.prototype,"readMinScale",null),(0,r._)([(0,g.Cb)({type:["ArcGISFeatureLayer"],value:"ArcGISFeatureLayer"})],ti.prototype,"operationalLayerType",void 0),(0,r._)([(0,g.Cb)({nonNullable:!0,type:p.Z.ofType(yt)})],ti.prototype,"pointBarriers",void 0),(0,r._)([(0,C.r)(["web-map","portal-item"],"pointBarriers",["layers","featureCollection.layers"])],ti.prototype,"readPointBarriers",null),(0,r._)([(0,g.Cb)({nonNullable:!0,type:p.Z.ofType(ft)})],ti.prototype,"polygonBarriers",void 0),(0,r._)([(0,C.r)(["web-map","portal-item"],"polygonBarriers",["layers","featureCollection.layers"])],ti.prototype,"readPolygonBarriers",null),(0,r._)([(0,g.Cb)({nonNullable:!0,type:p.Z.ofType(gt)})],ti.prototype,"polylineBarriers",void 0),(0,r._)([(0,C.r)(["web-map","portal-item"],"polylineBarriers",["layers","featureCollection.layers"])],ti.prototype,"readPolylineBarriers",null),(0,r._)([(0,g.Cb)({readOnly:!0})],ti.prototype,"routeInfo",void 0),(0,r._)([(0,C.r)(["web-map","portal-item"],"routeInfo",["layers","featureCollection.layers"])],ti.prototype,"readRouteInfo",null),(0,r._)([(0,g.Cb)({type:I.Z})],ti.prototype,"spatialReference",void 0),(0,r._)([(0,C.r)(["web-map","portal-item"],"spatialReference",["layers","featureCollection.layers"])],ti.prototype,"readSpatialReference",null),(0,r._)([(0,g.Cb)({nonNullable:!0,type:p.Z.ofType(kt)})],ti.prototype,"stops",void 0),(0,r._)([(0,C.r)(["web-map","portal-item"],"stops",["layers","featureCollection.layers"])],ti.prototype,"readStops",null),(0,r._)([(0,g.Cb)()],ti.prototype,"title",null),(0,r._)([(0,g.Cb)({readOnly:!0,json:{read:!1}})],ti.prototype,"type",void 0),(0,r._)([(0,g.Cb)()],ti.prototype,"url",null),ti=(0,r._)([(0,S.j)("esri.layers.RouteLayer")],ti);const ii=ti},39241:(e,t,i)=>{i.d(t,{I:()=>g});var r=i(29768),o=i(88762),s=i(82058),a=i(41864),n=i(60991),l=i(92143),p=i(71252),u=i(50406),d=i(32101),c=i(34250),m=(i(76506),i(91306),i(97714)),y=i(17533),b=i(2906),h=i(49900),f=i(56420),v=i(74653);i(31450),i(71552),i(40642),i(60474),i(66396),i(86656),i(6540),i(12047),i(21972),i(91055),i(19657),i(6906),i(81184),i(33101),i(21801),i(73796),i(60947),i(91597),i(86787),i(35132),i(89623),i(3482),i(67477),i(57251),i(78533),i(73173),i(74742),i(28239),i(91091),i(58943);const T=l.L.getLogger("esri.layers.mixins.PortalLayer"),g=e=>{let t=class extends e{constructor(){super(...arguments),this.resourceReferences={portalItem:null,paths:[]},this.userHasEditingPrivileges=!0}destroy(){this.portalItem?.destroy(),this.portalItem=null}set portalItem(e){e!==this._get("portalItem")&&(this.removeOrigin("portal-item"),this._set("portalItem",e))}readPortalItem(e,t,i){if(t.itemId)return new f.default({id:t.itemId,portal:i&&i.portal})}writePortalItem(e,t){e&&e.id&&(t.itemId=e.id)}async loadFromPortal(e,t){if(this.portalItem&&this.portalItem.id)try{const r=await i.e(8642).then(i.bind(i,8642)).then((e=>e.l));return(0,u.k_)(t),await r.load({instance:this,supportedTypes:e.supportedTypes,validateItem:e.validateItem,supportsData:e.supportsData},t)}catch(e){throw(0,u.D_)(e)||T.warn(`Failed to load layer (${this.title}, ${this.id}) portal item (${this.portalItem.id})\n  ${e}`),e}}async finishLoadEditablePortalLayer(e){this._set("userHasEditingPrivileges",await this._fetchUserHasEditingPrivileges(e).catch((e=>((0,u.r9)(e),!0))))}async _fetchUserHasEditingPrivileges(e){const t=this.url?o.id?.findCredential(this.url):null;if(!t)return!0;const i=w.credential===t?w.user:await this._fetchEditingUser(e);return w.credential=t,w.user=i,(0,p.a)(i)||null==i.privileges||i.privileges.includes("features:user:edit")}async _fetchEditingUser(e){const t=this.portalItem?.portal?.user;if(t)return t;const i=o.id.findServerInfo(this.url);if(!i?.owningSystemUrl)return null;const r=`${i.owningSystemUrl}/sharing/rest`,n=h.Z.getDefault();if(n&&n.loaded&&(0,d.Fv)(n.restUrl)===(0,d.Fv)(r))return n.user;const l=`${r}/community/self`,u=(0,p.i)(e)?e.signal:null,c=await(0,a.r)((0,s.default)(l,{authMode:"no-prompt",query:{f:"json"},signal:u}));return c.ok?v.default.fromJSON(c.value.data):null}read(e,t){t&&(t.layer=this),super.read(e,t)}write(e,t){const i=t&&t.portal,r=this.portalItem&&this.portalItem.id&&(this.portalItem.portal||h.Z.getDefault());return i&&r&&!(0,d.tm)(r.restUrl,i.restUrl)?(t.messages&&t.messages.push(new n.Z("layer:cross-portal",`The layer '${this.title} (${this.id})' cannot be persisted because it refers to an item on a different portal than the one being saved to. To save, set layer.portalItem to null or save to the same portal as the item associated with the layer`,{layer:this})),null):super.write(e,{...t,layer:this})}};return(0,r._)([(0,c.Cb)({type:f.default})],t.prototype,"portalItem",null),(0,r._)([(0,m.r)("web-document","portalItem",["itemId"])],t.prototype,"readPortalItem",null),(0,r._)([(0,b.w)("web-document","portalItem",{itemId:{type:String}})],t.prototype,"writePortalItem",null),(0,r._)([(0,c.Cb)({clonable:!1})],t.prototype,"resourceReferences",void 0),(0,r._)([(0,c.Cb)({readOnly:!0})],t.prototype,"userHasEditingPrivileges",void 0),t=(0,r._)([(0,y.j)("esri.layers.mixins.PortalLayer")],t),t},w={credential:null,user:null}},87258:(e,t,i)=>{i.r(t),i.d(t,{default:()=>g});var r,o=i(29768),s=i(74569),a=i(23761),n=i(57251),l=i(12047),p=i(76506),u=i(71252),d=i(34250),c=(i(91306),i(97714)),m=i(17533),y=i(2906),b=i(60947),h=i(32422),f=i(97546);i(21801),i(40642),i(71552),i(73796),i(91597),i(92143),i(31450),i(86787),i(86656),i(66396),i(35132),i(89623),i(84069),i(44567),i(98380),i(92896),i(22781),i(86748),i(15324),i(91055),i(75067),i(21972),i(60474),i(6540),i(19657),i(6906),i(50406),i(60991),i(89914),i(14249),i(60217),i(29107),i(30574),i(2157),i(25977),i(58076),i(98242),i(7471),i(54414),i(59465),i(1648),i(8925),i(33957),i(3482),i(45154),i(16769),i(93603),i(15438),i(593),i(85699),i(55531),i(96055),i(47776),i(18033),i(6331),i(62048),i(4292),i(75626),i(72652),i(29641),i(30493),i(70821),i(82673),i(34229),i(37029),i(96467),i(63571),i(30776),i(48027),i(54174),i(82426),i(29794),i(63130),i(25696),i(98402),i(42775),i(95834),i(34394),i(57150),i(76726),i(20444),i(76393),i(78548),i(2497),i(49906),i(46527),i(11799),i(48649),i(59877),i(9960),i(30823),i(53326),i(92482),i(5853),i(39141),i(32101),i(38742),i(48243),i(34635),i(10401),i(49900),i(88762),i(82058),i(81184),i(33101),i(67477),i(78533),i(74653),i(91091),i(58943),i(70737),i(36834),i(66122),i(8487),i(17817),i(90814),i(15459),i(61847),i(16796),i(16955),i(22401),i(77894),i(55187),i(8586),i(44509),i(69814),i(11305),i(62259),i(44790),i(5909),i(60669),i(48208),i(51589),i(9801),i(53523),i(42911),i(46826),i(45433),i(54732);const v=new n.J({esriGeometryPoint:"point",esriGeometryMultipoint:"multipoint",esriGeometryPolyline:"polyline",esriGeometryPolygon:"polygon",esriGeometryEnvelope:"extent",mesh:"mesh","":null});let T=r=class extends l.wq{constructor(e){super(e),this.displayFieldName=null,this.exceededTransferLimit=!1,this.features=[],this.fields=null,this.geometryType=null,this.hasM=!1,this.hasZ=!1,this.queryGeometry=null,this.spatialReference=null}readFeatures(e,t){const i=b.Z.fromJSON(t.spatialReference),r=[];for(let t=0;t<e.length;t++){const o=e[t],s=a.Z.fromJSON(o),n=o.geometry&&o.geometry.spatialReference;(0,u.i)(s.geometry)&&!n&&(s.geometry.spatialReference=i);const l=o.aggregateGeometries,p=s.aggregateGeometries;if(l&&(0,u.i)(p))for(const e in p){const t=p[e],r=l[e]?.spatialReference;(0,u.i)(t)&&!r&&(t.spatialReference=i)}r.push(s)}return r}writeGeometryType(e,t,i,r){if(e)return void v.write(e,t,i,r);const{features:o}=this;if(o)for(const e of o)if(e&&(0,u.i)(e.geometry))return void v.write(e.geometry.type,t,i,r)}readQueryGeometry(e,t){if(!e)return null;const i=!!e.spatialReference,r=(0,h.im)(e);return!i&&t.spatialReference&&(r.spatialReference=b.Z.fromJSON(t.spatialReference)),r}writeSpatialReference(e,t){if(e)return void(t.spatialReference=e.toJSON());const{features:i}=this;if(i)for(const e of i)if(e&&(0,u.i)(e.geometry)&&e.geometry.spatialReference)return void(t.spatialReference=e.geometry.spatialReference.toJSON())}clone(){return new r(this.cloneProperties())}cloneProperties(){return(0,p.d9)({displayFieldName:this.displayFieldName,exceededTransferLimit:this.exceededTransferLimit,features:this.features,fields:this.fields,geometryType:this.geometryType,hasM:this.hasM,hasZ:this.hasZ,queryGeometry:this.queryGeometry,spatialReference:this.spatialReference,transform:this.transform})}toJSON(e){const t=this.write();if(t.features&&Array.isArray(e)&&e.length>0)for(let i=0;i<t.features.length;i++){const r=t.features[i];if(r.geometry){const t=e&&e[i];r.geometry=t&&t.toJSON()||r.geometry}}return t}quantize(e){const{scale:[t,i],translate:[r,o]}=e,s=this.features,a=this._getQuantizationFunction(this.geometryType,(e=>Math.round((e-r)/t)),(e=>Math.round((o-e)/i)));for(let e=0,t=s.length;e<t;e++)a((0,u.u)(s[e].geometry))||(s.splice(e,1),e--,t--);return this.transform=e,this}unquantize(){const{geometryType:e,features:t,transform:i}=this;if(!i)return this;const{translate:[r,o],scale:[s,a]}=i,n=this._getHydrationFunction(e,(e=>e*s+r),(e=>o-e*a));for(const{geometry:e}of t)(0,u.i)(e)&&n(e);return this.transform=null,this}_quantizePoints(e,t,i){let r,o;const s=[];for(let a=0,n=e.length;a<n;a++){const n=e[a];if(a>0){const e=t(n[0]),a=i(n[1]);e===r&&a===o||(s.push([e-r,a-o]),r=e,o=a)}else r=t(n[0]),o=i(n[1]),s.push([r,o])}return s.length>0?s:null}_getQuantizationFunction(e,t,i){return"point"===e?e=>(e.x=t(e.x),e.y=i(e.y),e):"polyline"===e||"polygon"===e?e=>{const r=(0,h.oU)(e)?e.rings:e.paths,o=[];for(let e=0,s=r.length;e<s;e++){const s=r[e],a=this._quantizePoints(s,t,i);a&&o.push(a)}return o.length>0?((0,h.oU)(e)?e.rings=o:e.paths=o,e):null}:"multipoint"===e?e=>{const r=this._quantizePoints(e.points,t,i);return r.length>0?(e.points=r,e):null}:"extent"===e?e=>e:null}_getHydrationFunction(e,t,i){return"point"===e?e=>{e.x=t(e.x),e.y=i(e.y)}:"polyline"===e||"polygon"===e?e=>{const r=(0,h.oU)(e)?e.rings:e.paths;let o,s;for(let e=0,a=r.length;e<a;e++){const a=r[e];for(let e=0,r=a.length;e<r;e++){const r=a[e];e>0?(o+=r[0],s+=r[1]):(o=r[0],s=r[1]),r[0]=t(o),r[1]=i(s)}}}:"extent"===e?e=>{e.xmin=t(e.xmin),e.ymin=i(e.ymin),e.xmax=t(e.xmax),e.ymax=i(e.ymax)}:"multipoint"===e?e=>{const r=e.points;let o,s;for(let e=0,a=r.length;e<a;e++){const a=r[e];e>0?(o+=a[0],s+=a[1]):(o=a[0],s=a[1]),a[0]=t(o),a[1]=i(s)}}:void 0}};(0,o._)([(0,d.Cb)({type:String,json:{write:!0}})],T.prototype,"displayFieldName",void 0),(0,o._)([(0,d.Cb)({type:Boolean,json:{write:{overridePolicy:e=>({enabled:e})}}})],T.prototype,"exceededTransferLimit",void 0),(0,o._)([(0,d.Cb)({type:[a.Z],json:{write:!0}})],T.prototype,"features",void 0),(0,o._)([(0,c.r)("features")],T.prototype,"readFeatures",null),(0,o._)([(0,d.Cb)({type:[f.Z],json:{write:!0}})],T.prototype,"fields",void 0),(0,o._)([(0,d.Cb)({type:["point","multipoint","polyline","polygon","extent","mesh"],json:{read:{reader:v.read}}})],T.prototype,"geometryType",void 0),(0,o._)([(0,y.w)("geometryType")],T.prototype,"writeGeometryType",null),(0,o._)([(0,d.Cb)({type:Boolean,json:{write:{overridePolicy:e=>({enabled:e})}}})],T.prototype,"hasM",void 0),(0,o._)([(0,d.Cb)({type:Boolean,json:{write:{overridePolicy:e=>({enabled:e})}}})],T.prototype,"hasZ",void 0),(0,o._)([(0,d.Cb)({types:s.qM,json:{write:!0}})],T.prototype,"queryGeometry",void 0),(0,o._)([(0,c.r)("queryGeometry")],T.prototype,"readQueryGeometry",null),(0,o._)([(0,d.Cb)({type:b.Z,json:{write:!0}})],T.prototype,"spatialReference",void 0),(0,o._)([(0,y.w)("spatialReference")],T.prototype,"writeSpatialReference",null),(0,o._)([(0,d.Cb)({json:{write:!0}})],T.prototype,"transform",void 0),T=r=(0,o._)([(0,m.j)("esri.rest.support.FeatureSet")],T),T.prototype.toJSON.isDefaultToJSON=!0;const g=T}}]);