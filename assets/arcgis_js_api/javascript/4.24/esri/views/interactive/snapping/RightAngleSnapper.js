// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.24/esri/copyright.txt for details.
//>>built
define("exports ../../../chunks/_rollupPluginBabelHelpers ../../../core/maybe ../../../chunks/vec2 ../../../chunks/vec2f64 ./SnappingAlgorithm ./SnappingConstraint ./snappingUtils ./candidates/RightAngleSnappingCandidate ../support/viewUtils".split(" "),function(u,y,z,k,n,p,A,B,v,q){p=function(w){function r(){var c=w.apply(this,arguments)||this;c._tmp=n.create();return c}y._inheritsLoose(r,w);var t=r.prototype;t.snapNewVertex=function(c,a){var b=a.editGeometryOperations.data.components[0],d=b.vertices.length;
const e=[];if(2>d)return e;const g=q.anyMapPointToScreenPoint(c,a.coordinateHelper,a.elevationInfo,this.view);d=b.vertices[d-1];this._checkForSnappingCandidate(e,d.leftEdge,d.pos,c,d.leftEdge.leftVertex.pos,d.pos,a,c,g);b=b.vertices[0];this._checkForSnappingCandidate(e,b.rightEdge,b.pos,c,b.rightEdge.rightVertex.pos,b.pos,a,c,g);return e};t.snapExistingVertex=function(c,a){const b=[];var d=z.unwrap(a.vertexHandle),e=d.component;const g=e.vertices.length;if(3>g)return b;const h=q.anyMapPointToScreenPoint(c,
a.coordinateHelper,a.elevationInfo,this.view);var f=d.leftEdge;d=d.rightEdge;const l=e.vertices[0];e=e.vertices[g-1];if(!f)return this._checkForSnappingCandidate(b,l.rightEdge.rightVertex.rightEdge,l.rightEdge.rightVertex.pos,c,l.rightEdge.rightVertex.rightEdge.rightVertex.pos,l.rightEdge.rightVertex.pos,a,c,h),b;if(!d)return this._checkForSnappingCandidate(b,e.leftEdge.leftVertex.leftEdge,e.leftEdge.leftVertex.pos,c,e.leftEdge.leftVertex.leftEdge.leftVertex.pos,e.leftEdge.leftVertex.pos,a,c,h),b;
f&&f.leftVertex.leftEdge&&(e=f.leftVertex.leftEdge,this._checkForSnappingCandidate(b,e,f.leftVertex.pos,c,e.leftVertex.pos,f.leftVertex.pos,a,c,h));d&&d.rightVertex.rightEdge&&(f=d.rightVertex.rightEdge,this._checkForSnappingCandidate(b,f,d.rightVertex.pos,c,f.rightVertex.pos,d.rightVertex.pos,a,c,h));return b};t._checkForSnappingCandidate=function(c,a,b,d,e,g,h,f,l){if(this.edgeExceedsShortLineThreshold(a,h)){k.subtract(this._tmp,a.rightVertex.pos,a.leftVertex.pos);a=n.fromValues(this._tmp[1],-this._tmp[0]);
b=k.dot(a,k.subtract(this._tmp,d,b))/k.squaredLength(a);var {coordinateHelper:m,elevationInfo:x,pointer:C}=h;h=m.fromXYZ(k.scaleAndAdd(n.create(),g,a,b),m.getZ(f,0));B.squareDistance(l,q.anyMapPointToScreenPoint(h,m,x,this.view))<this.squaredProximityTreshold(C)&&c.push(new v.RightAngleSnappingCandidate({coordinateHelper:m,targetPoint:h,constraint:new A.RayConstraint(m,g,k.scaleAndAdd(m.createVector(),g,a,Math.sign(b))),previousVertex:e,otherVertex:g,otherVertexType:v.OtherVertexType.CENTER,elevationInfo:x}))}};
return r}(p.SnappingAlgorithm);u.RightAngleSnapper=p;Object.defineProperties(u,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});