// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.24/esri/copyright.txt for details.
//>>built
define("exports ../../../chunks/_rollupPluginBabelHelpers ../../../core/maybe ../../../chunks/vec2 ../../../chunks/vec2f64 ./Settings ./SnappingAlgorithm ./snappingUtils ./candidates/ParallelLineSnappingCandidate ../support/viewUtils ../../support/geometry2dUtils".split(" "),function(u,y,z,v,A,w,p,B,C,q,r){p=function(x){function t(){var c=x.apply(this,arguments)||this;c._tmpProjection=A.create();return c}y._inheritsLoose(t,x);var n=t.prototype;n.snapNewVertex=function(c,a){var b=a.editGeometryOperations.data.components[0],
d=b.edges.length,e=b.vertices.length;const g=[];if(2>d)return g;const h=q.anyMapPointToScreenPoint(c,a.coordinateHelper,a.elevationInfo,this.view);e=b.vertices[e-1];const k=b.vertices[0];d=b=b.edges[d-1];do this.edgeExceedsShortLineThreshold(d,a)&&(this._checkEdgeForParalleLines(d,e.pos,c,h,a,g),this._checkEdgeForParalleLines(d,k.pos,c,h,a,g)),d=d.leftVertex.leftEdge;while(d&&d!==b);return g};n.snapExistingVertex=function(c,a){const b=[],d=z.unwrap(a.vertexHandle);var e=d.component;if(3>e.edges.length)return b;
const g=q.anyMapPointToScreenPoint(c,a.coordinateHelper,a.elevationInfo,this.view),h=d.leftEdge,k=d.rightEdge,l=e.vertices[0],m=e.vertices[e.vertices.length-1];let f=e=e.edges[0];do f!==h&&f!==k&&this.edgeExceedsShortLineThreshold(f,a)&&(h&&this._checkEdgeForParalleLines(f,h.leftVertex.pos,c,g,a,b),k&&this._checkEdgeForParalleLines(f,k.rightVertex.pos,c,g,a,b),d===l?this._checkEdgeForParalleLines(f,m.pos,c,g,a,b):d===m&&this._checkEdgeForParalleLines(f,l.pos,c,g,a,b)),f=f.rightVertex.rightEdge;while(f&&
f!==e);return b};n._checkEdgeForParalleLines=function(c,a,b,d,e,g){const h=c.leftVertex.pos,k=c.rightVertex.pos;r.projectPointToLine(this._tmpProjection,a,h,k);if(!(v.squaredDistance(this._tmpProjection,a)<w.defaults.parallelLineThreshold)){r.projectPointToLine(this._tmpProjection,b,h,k,a);var {coordinateHelper:l,elevationInfo:m,pointer:f}=e;b=l.fromXYZ(this._tmpProjection,l.getZ(b,0));B.squareDistance(d,q.anyMapPointToScreenPoint(b,l,m,this.view))<this.squaredProximityTreshold(f)&&!this._parallelToPreviousCandidate(c,
g)&&g.push(new C.ParallelLineSnappingCandidate({coordinateHelper:l,referenceLine:c,lineStart:a,targetPoint:b,elevationInfo:m}))}};n._parallelToPreviousCandidate=function(c,a){const b=c.leftVertex.pos,d=c.rightVertex.pos;for(const e of a)if(r.projectPointToLine(this._tmpProjection,d,e.constraint.start,e.constraint.end,b),v.squaredDistance(this._tmpProjection,d)<w.defaults.parallelLineThreshold)return e.addReferenceLine(c),!0;return!1};return t}(p.SnappingAlgorithm);u.ParallelLineSnapper=p;Object.defineProperties(u,
{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});