// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.24/esri/copyright.txt for details.
//>>built
define("require ../../chunks/_rollupPluginBabelHelpers ../../chunks/tslib.es6 ../../core/Logger ../../core/maybe ../../core/reactiveUtils ../../core/accessorSupport/decorators/property ../../core/arrayUtils ../../core/has ../../core/accessorSupport/ensureType ../../core/accessorSupport/interfaces ../../core/accessorSupport/tracking ../../core/accessorSupport/extensions/serializableProperty/reader ../../core/accessorSupport/extensions/serializableProperty/writer ../../geometry/projection ./LayerView".split(" "),
function(u,k,d,b,h,q,e,x,y,z,A,B,C,D,l,v){const w=b.getLogger("esri.views.layers.SceneLayerView");b=function(r){function m(){var a=r.apply(this,arguments)||this;a.layer=null;a.filter=null;a._geometryEngine=null;a._projectionEngineLoaded=!1;return a}k._inheritsLoose(m,r);var g=m.prototype;g.initialize=function(){var a=this;q.whenOnce(()=>!this._geometryEngine&&h.isSome(this.layer.filter)&&this.layer.filter.geometries.length).then(k._asyncToGenerator(function*(){return a._geometryEngine=yield new Promise((c,
f)=>u(["../../geometry/geometryEngine"],c,f))}));this._projectionEngineLoaded=l.isLoaded();q.whenOnce(()=>!this._projectionEngineLoaded&&this._filterNeedsProjectionEngine).then(k._asyncToGenerator(function*(){yield l.load();a._projectionEngineLoaded=!0}))};g.highlight=function(a){throw Error("Not implemented");};g.queryFeatures=function(a,c){throw Error("Not implemented");};g.queryObjectIds=function(a,c){throw Error("Not implemented");};g.queryFeatureCount=function(a,c){throw Error("Not implemented");
};g.createQuery=function(){throw Error("Not implemented");};g.queryExtent=function(a,c){throw Error("Not implemented");};k._createClass(m,[{key:"availableFields",get:function(){return[]}},{key:"maximumNumberOfFeatures",get:function(){return 0},set:function(a){throw Error("Not implemented");}},{key:"maximumNumberOfFeaturesExceeded",get:function(){return!1}},{key:"layerFilter",get:function(){const a=this.layer.filter;if(h.isNone(a)||1>a.geometries.length)return null;const c=this._geometryEngine;if(h.isNone(c)||
!this._projectionEngineLoaded&&this._filterNeedsProjectionEngine)return null;try{let f=c.simplify(a.geometries.getItemAt(0));const t=f.spatialReference;for(let p=1;p<a.geometries.length;p++){let n=c.simplify(a.geometries.getItemAt(p));n.spatialReference.equals(t)||(n=l.project(n,t));f=c.union(f,n)}return{spatialRelationship:a.spatialRelationship,geometry:f}}catch{return w.warnOncePerTick("Failed to merge scene filter geometries. Layer mask will be ignored."),null}}},{key:"_filterNeedsProjectionEngine",
get:function(){const a=this.layer.filter;if(h.isNone(a)||1>=a.geometries.length)return!1;const c=a.geometries.getItemAt(0).spatialReference;return a.geometries.some(({spatialReference:f})=>!f.equals(c)&&!l.canProjectWithoutEngine(f,c))}},{key:"layerFilterUpdating",get:function(){return h.isSome(this.layer.filter)&&this.layer.filter.geometries.length&&(!this._geometryEngine||!this._projectionEngineLoaded&&this._filterNeedsProjectionEngine)}}]);return m}(v);d.__decorate([e.property()],b.prototype,"layer",
void 0);d.__decorate([e.property()],b.prototype,"availableFields",null);d.__decorate([e.property()],b.prototype,"maximumNumberOfFeatures",null);d.__decorate([e.property({readOnly:!0})],b.prototype,"maximumNumberOfFeaturesExceeded",null);d.__decorate([e.property()],b.prototype,"filter",void 0);d.__decorate([e.property({readOnly:!0})],b.prototype,"layerFilter",null);d.__decorate([e.property()],b.prototype,"_geometryEngine",void 0);d.__decorate([e.property()],b.prototype,"_projectionEngineLoaded",void 0);
d.__decorate([e.property()],b.prototype,"_filterNeedsProjectionEngine",null);d.__decorate([e.property()],b.prototype,"layerFilterUpdating",null);return b});