// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.24/esri/copyright.txt for details.
//>>built
define("../../../chunks/_rollupPluginBabelHelpers ../../../chunks/tslib.es6 ../../../geometry ../../../Graphic ../../../core/Collection ../../../core/Error ../../../core/Evented ../../../core/Handles ../../../core/Logger ../../../core/maybe ../../../core/promiseUtils ../../../core/reactiveUtils ../../../core/accessorSupport/decorators/property ../../../core/arrayUtils ../../../core/has ../../../core/accessorSupport/ensureType ../../../core/accessorSupport/decorators/subclass ../../../geometry/support/coordsUtils ../../../layers/GraphicsLayer ../../../symbols/SimpleMarkerSymbol ../../ViewingMode ../../2d/interactive/SnappingVisualizer2D ./drawUtils ./GraphicMover ./HighlightHelper ./layerUtils ./settings ../../input/InputManager ../../interactive/keybindings ../../interactive/editGeometry/EditGeometryOperations ../../interactive/snapping/SnappingContext ../../../geometry/Polyline ../../../geometry/Point".split(" "),
function(D,u,v,A,H,J,q,I,K,x,L,E,w,na,oa,pa,M,z,N,B,O,P,Q,R,S,T,U,V,W,X,Y,Z,C){let aa=function(p,r,d){this.graphic=p;this.mover=r;this.selected=d;this.type="reshape-start"},ba=function(p,r,d){this.graphic=p;this.mover=r;this.selected=d;this.type="reshape"},ca=function(p,r,d){this.graphic=p;this.mover=r;this.selected=d;this.type="reshape-stop"},da=function(p,r,d){this.mover=p;this.dx=r;this.dy=d;this.type="move-start"},ea=function(p,r,d){this.mover=p;this.dx=r;this.dy=d;this.type="move"},fa=function(p,
r,d){this.mover=p;this.dx=r;this.dy=d;this.type="move-stop"},ha=function(p){this.added=p;this.type="vertex-select"},ia=function(p){this.removed=p;this.type="vertex-deselect"},ja=function(p,r,d,a){this.added=p;this.graphic=r;this.oldGraphic=d;this.vertices=a;this.type="vertex-add"},ka=function(p,r,d,a){this.removed=p;this.graphic=r;this.oldGraphic=d;this.vertices=a;this.type="vertex-remove"};v=U.settings.reshapeGraphics;const F={vertices:{default:new B({style:"circle",size:v.vertex.size,color:v.vertex.color,
outline:{color:v.vertex.outlineColor,width:1}}),hover:new B({style:"circle",size:v.vertex.hoverSize,color:v.vertex.hoverColor,outline:{color:v.vertex.hoverOutlineColor,width:1}}),selected:new B({style:"circle",size:v.selected.size,color:v.selected.color,outline:{color:v.selected.outlineColor,width:1}})},midpoints:{default:new B({style:"circle",size:v.midpoint.size,color:v.midpoint.color,outline:{color:v.midpoint.outlineColor,width:1}}),hover:new B({style:"circle",size:v.midpoint.size,color:v.midpoint.color,
outline:{color:v.midpoint.outlineColor,width:1}})}},la=K.getLogger("esri.views.draw.support.Reshape");q=function(p){function r(a){a=p.call(this,a)||this;a._activeOperationInfo=null;a._editGeometryOperations=null;a._handles=new I;a._graphicAttributes={esriSketchTool:"box"};a._mover=null;a._snappingTask=null;a._stagedVertex=null;a._viewHandles=new I;a.callbacks={onReshapeStart(){},onReshape(){},onReshapeStop(){},onMoveStart(){},onMove(){},onMoveStop(){},onGraphicClick(){}};a.enableMidpoints=!0;a.enableMovement=
!0;a.enableVertices=!0;a.graphic=null;a.layer=null;a.midpointGraphics=new H;a.midpointSymbol=new B({style:"circle",size:6,color:[200,200,200],outline:{color:[100,100,100],width:1}});a.selectedVertices=[];a.snappingManager=null;a.type="reshape";a.vertexGraphics=new H;a.view=null;return a}D._inheritsLoose(r,p);var d=r.prototype;d.initialize=function(){this._highlightHelper=new S({view:this.view});this._setup();this._handles.add([E.when(()=>{var a;return null==(a=this.view)?void 0:a.ready},()=>{const {layer:a,
view:b}=this;T.addUniqueLayer(b,a);this._viewHandles.add(b.on("key-down",c=>this._keyDownHandler(c),V.ViewEventPriorities.TOOL))},{once:!0,initial:!0}),E.pausable(()=>this.graphic,()=>this.refresh()),E.pausable(()=>this.layer,(a,b)=>{b&&(this._clearSelection(),this._resetGraphics(b));this.refresh()}),E.pausable(()=>this.enableMidpoints,()=>this.refresh())])};d.destroy=function(){var a;this._reset();null==(a=this._mover)?void 0:a.destroy();this._mover=null;this._handles=x.destroyMaybe(this._handles);
this._viewHandles=x.destroyMaybe(this._viewHandles)};d.isUIGraphic=function(a){const b=[];this.graphic&&b.push(this.graphic);b.concat(this.vertexGraphics.items,this.midpointGraphics.items);return b.length&&b.includes(a)};d.refresh=function(){this._reset();this._setup()};d.reset=function(){this.graphic=null};d.clearSelection=function(){this._clearSelection()};d.removeSelectedVertices=function(){this.selectedVertices.length&&this._removeVertices(this.selectedVertices)};d._setup=function(){const {graphic:a,
layer:b}=this;if(b&&a&&!x.isNone(a.geometry)){var c=a.geometry;"mesh"===c.type||"extent"===c.type?this._logGeometryTypeError():("polygon"===c.type&&z.closeRingsAndFixWinding(c),this._setUpHighlights(),this._setupGraphics(),this._setupMover())}};d._setUpHighlights=function(){this.highlightsEnabled&&this.graphic&&this._highlightHelper.add(this.graphic)};d._setUpGeometryHelper=function(){var a=this.graphic.geometry;x.isNone(a)||"mesh"===a.type||"extent"===a.type?this._logGeometryTypeError():(a="multipoint"===
a.type?new Z({paths:a.points,spatialReference:a.spatialReference}):a,this._editGeometryOperations=X.EditGeometryOperations.fromGeometry(a,O.ViewingMode.Local))};d._saveSnappingContextForHandle=function(a,b){var c;this._snappingGraphicsLayer=new N({listMode:"hide",internal:!0,title:"Reshape snapping layer"});this.view.map.layers.add(this._snappingGraphicsLayer);this._snappingContext=new Y.SnappingContext({editGeometryOperations:this._editGeometryOperations,elevationInfo:{mode:"on-the-ground",offset:0},
pointer:(null==(c=b.viewEvent)?void 0:c.pointerType)||"mouse",excludeFeature:this.graphic,visualizer:new P.SnappingVisualizer2D(this._snappingGraphicsLayer),vertexHandle:this._getVertexFromEditGeometry(a)})};d._reset=function(){this._clearSelection();this._highlightHelper.removeAll();this._resetGraphics();this._resetSnappingStateVars();this._activeOperationInfo=null;this._mover&&this._mover.destroy();this._mover=null;this.view.cursor="default"};d._resetSnappingStateVars=function(){x.isSome(this.snappingManager)&&
this.snappingManager.doneSnapping();x.isSome(this._snappingGraphicsLayer)&&(this.view.map.layers.remove(this._snappingGraphicsLayer),this._snappingGraphicsLayer.destroy());this._editGeometryOperations=x.destroyMaybe(this._editGeometryOperations);this._snappingTask=x.abortMaybe(this._snappingTask);this._stagedVertex=this._snappingContext=this._snappingTask=null};d._resetGraphics=function(a){this._removeMidpointGraphics(a);this._removeVertexGraphics(a);this._set("selectedVertices",[])};d._removeMidpointGraphics=
function(a){(a=a||this.layer)&&a.removeMany(this.midpointGraphics.items);this.midpointGraphics.items.forEach(b=>b.destroy());this.midpointGraphics.removeAll()};d._removeVertexGraphics=function(a){(a=a||this.layer)&&a.removeMany(this.vertexGraphics.items);this.vertexGraphics.items.forEach(b=>b.destroy());this.vertexGraphics.removeAll()};d._getCoordinatesForUI=function(a){const b=z.geometryToCoordinates(a.clone());if("polygon"===a.type)for(const c of b)a=c[c.length-1],c[0][0]===a[0]&&c[0][1]===a[1]&&
2<c.length&&c.pop();return b};d._setupGraphics=function(){var a=this.graphic.geometry;!x.isSome(a)||"polyline"!==a.type&&"polygon"!==a.type||(a=this._getCoordinatesForUI(a),this.enableMidpoints&&this._setUpMidpointGraphics(a),this.enableVertices&&this._setUpVertexGraphics(a))};d._setUpMidpointGraphics=function(a){this._removeMidpointGraphics();a=this._createMidpointGraphics(a);this.midpointGraphics.addMany(a);this.layer.addMany(a)};d._setUpVertexGraphics=function(a){this._removeVertexGraphics();a=
this._createVertexGraphics(a);this.vertexGraphics.addMany(a);this._storeRelatedVertexIndices();this.layer.addMany(a)};d._createVertexGraphics=function(a){const {_graphicAttributes:b,symbols:c,view:{spatialReference:e}}=this,h=[];null==a?void 0:a.forEach((f,g)=>{f.forEach((l,m)=>{var n;const [k,t]=l;h.push(new A({geometry:new C({x:k,y:t,spatialReference:e}),symbol:null==c?void 0:null==(n=c.vertices)?void 0:n.default,attributes:{...b,pathIndex:g,pointIndex:m}}))})});return h};d._createMidpointGraphics=
function(a){const {_graphicAttributes:b,symbols:c,view:{spatialReference:e}}=this,h=[];null==a?void 0:a.forEach((f,g)=>{f.forEach((l,m)=>{const [n,k]=l;l=f[m+1]?m+1:0;if("polygon"===x.get(this.graphic.geometry,"type")||0!==l){const [t,y]=f[l],[G,ma]=z.getMidpoint([n,k],[t,y]);h.push(new A({geometry:new C({x:G,y:ma,spatialReference:e}),symbol:c.midpoints.default,attributes:{...b,pathIndex:g,pointIndexStart:m,pointIndexEnd:l}}))}})});return h};d._storeRelatedVertexIndices=function(){const a=this.vertexGraphics.items;
if(a){var b=a.map(({geometry:c})=>({x:c.x,y:c.y}));for(let c=0;c<b.length;c++){const e=[];for(let h=0;h<b.length;h++){if(c===h)continue;const f=b[c],g=b[h];f.x===g.x&&f.y===g.y&&e.push(h)}a[c].attributes.relatedGraphicIndices=e}}};d._setupMover=function(){const {enableMovement:a,graphic:b,midpointGraphics:c,vertexGraphics:e,view:h}=this,f=e.concat(c).items;a&&f.push(b);this._mover=new R({enableMoveAllGraphics:!1,highlightsEnabled:!1,indicatorsEnabled:!1,graphics:f,view:h,callbacks:{onGraphicClick:g=>
this._onGraphicClickCallback(g),onGraphicMoveStart:g=>this._onGraphicMoveStartCallback(g),onGraphicMove:g=>this._onGraphicMoveCallback(g),onGraphicMoveStop:g=>this._onGraphicMoveStopCallback(g),onGraphicPointerOver:g=>this._onGraphicPointerOverCallback(g),onGraphicPointerOut:g=>this._onGraphicPointerOutCallback(g)}})};d._onGraphicClickCallback=function(a){a.viewEvent.stopPropagation();const b=a.graphic;if(b===this.graphic){if(this.clearSelection(),this.emit("graphic-click",a),this.callbacks.onGraphicClick)this.callbacks.onGraphicClick(a)}else if(this._isMidpoint(b)){if(2!==
a.viewEvent.button){a=this.graphic.clone();var c=this._createVertexFromMidpoint(b);this.refresh();this._emitVertexAddEvent([b],a,c)}}else this._isVertex(b)&&(a.viewEvent.stopPropagation(),2===a.viewEvent.button?this._removeVertices(b):(a.viewEvent.native.shiftKey||this._clearSelection(),this.selectedVertices.includes(b)?this._removeFromSelection(b,!0):this._addToSelection(b)))};d._setUpOperation=function(a){const {graphic:b,dx:c,dy:e}=a,h=b===this.graphic;this._resetSnappingStateVars();this._setUpGeometryHelper();
this._saveSnappingContextForHandle(b,a);this._activeOperationInfo={target:this.graphic,mover:b,operationType:h?"move":"reshape",totalDx:c,totalDy:e}};d._onGraphicMoveStartCallback=function(a){const b=a.graphic,{dx:c,dy:e}=a;if(b===this.graphic)this._clearSelection(),this._resetGraphics(),this._setUpOperation(a),this._emitMoveStartEvent(c,e),"point"===this._editGeometryOperations.data.type&&this._onHandleMove(b,c,e,a,()=>this._emitMoveEvent(c,e));else{if(!this.selectedVertices.includes(b)){this._clearSelection();
if(this._isMidpoint(b)){const h=this.graphic.clone(),f=this._createVertexFromMidpoint(b);this._emitVertexAddEvent([b],h,f)}this._addToSelection(b)}this._setUpOperation(a);this._emitReshapeStartEvent(b);this._onHandleMove(b,c,e,a,()=>this._emitReshapeEvent(b))}};d._onGraphicMoveCallback=function(a){const {graphic:b,dx:c,dy:e}=a;this._activeOperationInfo.totalDx+=c;this._activeOperationInfo.totalDy+=e;const {operationType:h}=this._activeOperationInfo;"move"===h?"point"===this._editGeometryOperations.data.type?
this._onHandleMove(b,c,e,a,()=>this._emitMoveEvent(c,e)):this._emitMoveEvent(c,e):this._onHandleMove(b,c,e,a,()=>this._emitReshapeEvent(b))};d._onGraphicMoveStopCallback=function(a){const {graphic:b,dx:c,dy:e}=a;this._activeOperationInfo.totalDx+=c;this._activeOperationInfo.totalDy+=e;this._onHandleMove(b,c,e,a,()=>b===this.graphic?this._emitMoveStopEvent():this._emitReshapeStopEvent(b));this._resetSnappingStateVars();this._activeOperationInfo=null;this._isMidpoint(b)&&this.refresh()};d._updateMidpointGraphicLocations=
function(a){for(const b of this.midpointGraphics){const {pathIndex:c,pointIndexStart:e,pointIndexEnd:h}=b.attributes,[f,g]=a[c][e],[l,m]=a[c][h],[n,k]=z.getMidpoint([f,g],[l,m]);b.geometry=new C({x:n,y:k,spatialReference:this.view.spatialReference})}};d._getIndicesForVertexGraphic=function({attributes:a}){return[(null==a?void 0:a.pathIndex)||0,(null==a?void 0:a.pointIndex)||0]};d._getVertexFromEditGeometry=function(a){const [b,c]=this._getIndicesForVertexGraphic(a);return this._editGeometryOperations.data.components[b].vertices[c]};
d._onHandleMove=function(a,b,c,e,h){var f=this;x.abortMaybe(this._snappingTask);if(this._snappingContext){var g=a.geometry,l="graphic-move-stop"===e.type;if(x.isSome(this.snappingManager)&&2>this.selectedVertices.length&&!l){const m=this.snappingManager;this._stagedVertex=m.update(g,this._snappingContext);this._syncGeometryAfterVertexMove(a,new C(this._stagedVertex),b,c,l);h();this._snappingTask=L.createTask(function(){var n=D._asyncToGenerator(function*(k){k=yield m.snap(g,f._snappingContext,k);
k.valid&&(f._stagedVertex=k.apply(),f._syncGeometryAfterVertexMove(a,new C(f._stagedVertex),b,c,l),h())});return function(k){return n.apply(this,arguments)}}())}else e=x.isSome(this._stagedVertex)?new C(this._stagedVertex):g,this._syncGeometryAfterVertexMove(a,e,b,c,l),h()}};d._syncGeometryAfterVertexMove=function(){var a=D._asyncToGenerator(function*(b,c,e,h,f=!1){const g=this._editGeometryOperations.data.geometry;if("point"===g.type)b.geometry=c;else{const {x:l,y:m}=c,[n,k]=this._getIndicesForVertexGraphic(b);
let t=z.geometryToCoordinates(g);const y=t[n].length-1;t[n][k]=[l,m];"polygon"===g.type&&(0===k?t[n][y]=[l,m]:k===y&&(t[n][0]=[l,m]));this._isVertex(b)&&(t=this._moveRelatedCoordinates(t,b,l,m),t=this._moveSelectedHandleCoordinates(t,b,e,h,"polygon"===g.type),this._updateMidpointGraphicLocations(t));this.graphic.geometry=g.clone();e=this._getVertexFromEditGeometry(b);this._editGeometryOperations.moveVertices([e],l-e.pos[0],m-e.pos[1],0);f&&(this._mover?this._mover.updateGeometry(this._mover.graphics.indexOf(b),
c):b.geometry=c)}});return function(b,c,e,h){return a.apply(this,arguments)}}();d._moveRelatedCoordinates=function(a,b,c,e){var {relatedGraphicIndices:h}=b.attributes;for(const f of h){h=this.vertexGraphics.getItemAt(f);const {pathIndex:g,pointIndex:l}=h.attributes;a[g][l]=[c,e];h.geometry=b.geometry}return a};d._moveSelectedHandleCoordinates=function(a,b,c,e,h){for(const g of this.selectedVertices)if(g!==b){const {pathIndex:l,pointIndex:m,relatedGraphicIndices:n}=g.attributes,k=Q.cloneMove(g.geometry,
c,e,this.view);var f=a[l].length-1;a[l][m]=[k.x,k.y];g.geometry=k;h&&(0===m?a[l][f]=[k.x,k.y]:m===f&&(a[l][0]=[k.x,k.y]));for(const t of n){f=this.vertexGraphics.getItemAt(t);const {pathIndex:y,pointIndex:G}=f.attributes;a[y][G]=[k.x,k.y];f.geometry=k}}return a};d._onGraphicPointerOverCallback=function(a){a=a.graphic;this._isVertex(a)&&!this._isSelected(a)&&(a.symbol=this.symbols.vertices.hover);this._updateHoverCursor(a)};d._onGraphicPointerOutCallback=function(a){a=a.graphic;this._isVertex(a)&&
!this._isSelected(a)&&(a.symbol=this.symbols.vertices.default);this.view.cursor="default"};d._createVertexFromMidpoint=function(a){const {_graphicAttributes:b,graphic:c}=this;var e=c.geometry;if(x.isNone(e)||"polygon"!==e.type&&"polyline"!==e.type)return[];e=e.clone();const h=[],{pathIndex:f,pointIndexStart:g,pointIndexEnd:l}=a.attributes,{x:m,y:n}=a.geometry,k=0===l?g+1:l,t=z.geometryToCoordinates(e);t[f].splice(k,0,[m,n]);a.attributes={...b,pathIndex:f,pointIndex:k,relatedGraphicIndices:[]};h.push({coordinates:t[f][k],
componentIndex:f,vertexIndex:k});this.graphic.geometry=e;return h};d._addToSelection=function(a){a instanceof A&&(a=[a]);for(const b of a)b.symbol=this.symbols.vertices.selected;this._set("selectedVertices",this.selectedVertices.concat(a));this._emitSelectEvent(a)};d._removeFromSelection=function(a,b){const {vertices:c}=this.symbols;b=b?c.hover:c.default;a instanceof A&&(a=[a]);for(const e of a)this.selectedVertices.splice(this.selectedVertices.indexOf(e),1),this._set("selectedVertices",this.selectedVertices),
e.set("symbol",b);this._emitDeselectEvent(a)};d._clearSelection=function(){if(this.selectedVertices.length){const a=this.selectedVertices;for(const b of this.selectedVertices)b.set("symbol",this.symbols.vertices.default);this._set("selectedVertices",[]);this._emitDeselectEvent(a)}};d._keyDownHandler=function(a){W.SKETCH_KEYS.delete.includes(a.key)&&!a.repeat&&this.selectedVertices.length&&this._removeVertices(this.selectedVertices)};d._removeVertices=function(a){var b=this.graphic.geometry;if(!(x.isNone(b)||
"polygon"!==b.type&&"polyline"!==b.type||"polygon"===b.type&&4>this.vertexGraphics.length||3>this.vertexGraphics.length)){a instanceof A&&(a=[a]);var c=this.graphic.clone();b=b.clone();var e=z.geometryToCoordinates(b),h=[];a instanceof A&&(a=[a]);for(const f of a){const {x:g,y:l}=f.geometry;for(let m=0;m<e.length;m++){const n=e[m];for(let k=0;k<n.length;k++){const [t,y]=n[k];g===t&&l===y&&(h.push({coordinates:e[m][k],componentIndex:m,vertexIndex:k}),e[m].splice(Number(k),1))}}}if("polygon"===b.type)e=
e.filter(f=>{if(2>f.length)return!1;const [g,l]=f[0],[m,n]=f[f.length-1];if(2===f.length&&g===m&&l===n)return!1;g===m&&l===n||f.push(f[0]);return!0}),b.rings=e;else{for(const f of e)1===f.length&&e.splice(e.indexOf(f),1);b.paths=e}this.graphic.geometry=b;this.refresh();this._emitVertexRemoveEvent(a,c,h)}};d._isVertex=function(a){return this.vertexGraphics.includes(a)};d._isSelected=function(a){return this._isVertex(a)&&this.selectedVertices.includes(a)};d._isMidpoint=function(a){return this.midpointGraphics.includes(a)};
d._updateHoverCursor=function(a){this.view.cursor=this._isMidpoint(a)?"copy":"move"};d._emitMoveStartEvent=function(a,b){a=new da(this.graphic,a,b);this.emit("move-start",a);if(this.callbacks.onMoveStart)this.callbacks.onMoveStart(a)};d._emitMoveEvent=function(a,b){a=new ea(this.graphic,a,b);this.emit("move",a);if(this.callbacks.onMove)this.callbacks.onMove(a)};d._emitMoveStopEvent=function(){const {totalDx:a,totalDy:b}=this._activeOperationInfo,c=new fa(this.graphic,a,b);this.emit("move-stop",c);
if(this.callbacks.onMoveStop)this.callbacks.onMoveStop(c)};d._emitReshapeStartEvent=function(a){a=new aa(this.graphic,a,this.selectedVertices);this.emit("reshape-start",a);if(this.callbacks.onReshapeStart)this.callbacks.onReshapeStart(a)};d._emitReshapeEvent=function(a){a=new ba(this.graphic,a,this.selectedVertices);this.emit("reshape",a);if(this.callbacks.onReshape)this.callbacks.onReshape(a)};d._emitReshapeStopEvent=function(a){a=new ca(this.graphic,a,this.selectedVertices);this.emit("reshape-stop",
a);if(this.callbacks.onReshapeStop)this.callbacks.onReshapeStop(a)};d._emitSelectEvent=function(a){a=new ha(a);this.emit("select",a);if(this.callbacks.onVertexSelect)this.callbacks.onVertexSelect(a)};d._emitDeselectEvent=function(a){a=new ia(a);this.emit("deselect",a);if(this.callbacks.onVertexDeselect)this.callbacks.onVertexDeselect(a)};d._emitVertexAddEvent=function(a,b,c){a=new ja(a,this.graphic,b,c);this.emit("vertex-add",a);if(this.callbacks.onVertexAdd)this.callbacks.onVertexAdd(a)};d._emitVertexRemoveEvent=
function(a,b,c){a=new ka(a,this.graphic,b,c);this.emit("vertex-remove",a);if(this.callbacks.onVertexRemove)this.callbacks.onVertexRemove(a)};d._logGeometryTypeError=function(){la.error(new J("reshape:invalid-geometry","Reshape operation not supported for the provided graphic. The geometry type is not supported."))};D._createClass(r,[{key:"highlightsEnabled",set:function(a){var b;null==(b=this._highlightHelper)?void 0:b.removeAll();this._set("highlightsEnabled",a);this._setUpHighlights()}},{key:"state",
get:function(){const a=!!this.get("view.ready"),b=!(!this.get("graphic")||!this.get("layer"));return a&&b?"active":a?"ready":"disabled"}},{key:"symbols",set:function(a){const {midpoints:b=F.midpoints,vertices:c=F.vertices}=a||{};this._set("symbols",{midpoints:b,vertices:c})}}]);return r}(q.EventedAccessor);u.__decorate([w.property()],q.prototype,"callbacks",void 0);u.__decorate([w.property()],q.prototype,"enableMidpoints",void 0);u.__decorate([w.property()],q.prototype,"enableMovement",void 0);u.__decorate([w.property()],
q.prototype,"enableVertices",void 0);u.__decorate([w.property()],q.prototype,"graphic",void 0);u.__decorate([w.property({value:!0})],q.prototype,"highlightsEnabled",null);u.__decorate([w.property()],q.prototype,"layer",void 0);u.__decorate([w.property({readOnly:!0})],q.prototype,"midpointGraphics",void 0);u.__decorate([w.property()],q.prototype,"midpointSymbol",void 0);u.__decorate([w.property({readOnly:!0})],q.prototype,"selectedVertices",void 0);u.__decorate([w.property()],q.prototype,"snappingManager",
void 0);u.__decorate([w.property({readOnly:!0})],q.prototype,"state",null);u.__decorate([w.property({value:F})],q.prototype,"symbols",null);u.__decorate([w.property({readOnly:!0})],q.prototype,"type",void 0);u.__decorate([w.property({readOnly:!0})],q.prototype,"vertexGraphics",void 0);u.__decorate([w.property()],q.prototype,"view",void 0);return q=u.__decorate([M.subclass("esri.views.draw.support.Reshape")],q)});