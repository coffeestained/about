// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.24/esri/copyright.txt for details.
//>>built
define("exports ../../../../chunks/_rollupPluginBabelHelpers ../../../../chunks/tslib.es6 ../../../../core/Accessor ../../../../core/maybe ../../../../core/screenUtils ../../../../core/accessorSupport/decorators/property ../../../../core/arrayUtils ../../../../core/has ../../../../core/accessorSupport/ensureType ../../../../core/accessorSupport/decorators/subclass ../../../../chunks/vec3 ../../../../chunks/vec3f64 ../../../../geometry/support/ray ../../../../geometry/support/vectorStacks ../../../../layers/graphics/dehydratedFeatures ./LineOfSightIntersectionResult ../../layers/i3s/Intersector ../../support/geometryUtils/ray ../../terrain/Intersector ../../webgl-engine/lib/Intersector ../../webgl-engine/lib/IntersectorInterfaces ../../webgl-engine/lib/intersectorUtilsConversions".split(" "),
function(k,C,r,D,l,E,y,R,S,T,F,f,g,m,G,H,t,I,J,K,L,n,M){k.LineOfSightRayIntersector=function(z){function u(b){b=z.call(this,b)||this;b._terrainIntersectionOptionsLayerUids=new Set(["terrain"]);return b}C._inheritsLoose(u,z);var p=u.prototype;p.initialize=function(){this.intersector=L.newIntersector(this.view.state.viewingMode);this.intersector.options.hud=!1;this.intersector.options.store=n.StoreResults.MIN};p.getScreenPointIntersection=function(b){b=E.screenPointObjectToArray(b,G.sv2d.get());b=J.fromScreen(this.view.state.camera,
b,v);return this._getRayIntersection(b)};p._getRayIntersection=function(b,e){if(l.isNone(b)||l.isNone(this.view.sceneIntersectionHelper))return null;this.intersector.options.store=n.StoreResults.MIN;this.view.sceneIntersectionHelper.intersectToolIntersectorRay(b,this.intersector,e);var a=this.intersector.results.min;if(!a.getIntersectionPoint(w))return null;e=this.view.renderCoordsHelper.fromRenderCoords(w,this.view.spatialReference);const d=g.fromArray(a.normal);if(I.isI3sIntersectorResult(a))return new t.LineOfSightIntersectionResult({type:n.IntersectorType.OBJECT,
id:`${a.target.layerUid}/${a.target.nodeIndex}/${a.target.componentIndex}`,point:e,normal:d,ray:m.copy(b),graphic:null});if(K.isTerrainIntersectorResult(a))return new t.LineOfSightIntersectionResult({type:n.IntersectorType.TERRAIN,id:a.target.lij.slice(),point:e,normal:d,ray:m.copy(b),graphic:null});a=M.toGraphic(a,this.view);if(l.isSome(a)){const h=a.layer;var c=a.sourceLayer;if(c)switch(c.type){case "scene":c=H.getObjectId(a,c.objectIdField);break;default:c=a.uid}else c=a.uid;return new t.LineOfSightIntersectionResult({type:n.IntersectorType.OBJECT,
id:`${h.uid}/${c}`,point:e,normal:d,ray:m.copy(b),graphic:a})}return null};p.updateFromGroundIntersection=function(b,e,a){var d=w;const c=N,h=O,q=P,A=Q;f.copy(c,b);this.view.renderCoordsHelper.worldUpAtPosition(c,h);f.normalize(h,h);const x=this.view.basemapTerrain.elevationBounds,B=0<this.view.renderCoordsHelper.getAltitude(c)?1:-1;f.scale(q,h,B*((x?Math.abs(x.max-x.min):100)+Math.abs(e)));f.add(d,c,q);m.fromPoints(d,c,v);d=this._getRayIntersection(v,{include:this._terrainIntersectionOptionsLayerUids});
if(l.isSome(d)&&l.isSome(d.point))return this.view.renderCoordsHelper.toRenderCoords(d.point,A),f.scale(q,h,B*e),f.add(a,A,q),g.clone(d.normal);f.copy(a,b);return null};return u}(D);r.__decorate([y.property()],k.LineOfSightRayIntersector.prototype,"view",void 0);r.__decorate([y.property()],k.LineOfSightRayIntersector.prototype,"intersector",void 0);k.LineOfSightRayIntersector=r.__decorate([F.subclass("esri.views.3d.analysis.LineOfSight.LineOfSightRayIntersector")],k.LineOfSightRayIntersector);const w=
g.create(),N=g.create(),O=g.create(),P=g.create(),Q=g.create(),v=m.create();Object.defineProperties(k,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});