// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.24/esri/copyright.txt for details.
//>>built
define("exports ../../../../chunks/_rollupPluginBabelHelpers ../../../../chunks/tslib.es6 ../../../../core/Accessor ../../../../core/Handles ../../../../core/Logger ../../../../core/maybe ../../../../core/quantityUtils ../../../../core/reactiveUtils ../../../../core/accessorSupport/decorators/property ../../../../core/arrayUtils ../../../../core/has ../../../../core/accessorSupport/ensureType ../../../../core/accessorSupport/decorators/subclass ../../../../chunks/vec3 ../../../../chunks/vec3f64 ../../../../geometry/geometryEngine ../../../../geometry/Polyline ../../../../geometry/projection ../../../../geometry/projectionEllipsoid ../../../../geometry/support/geodesicUtils ../interfaces ../support/projectionUtils ../support/UnitNormalizer".split(" "),
function(f,x,p,F,G,H,m,r,g,t,O,P,Q,I,y,q,J,K,h,v,w,z,A,L){const M=H.getLogger("esri.views.3d.analysis.DirectLineMeasurement.DirectLineMeasurementController");f.DirectLineMeasurementController=function(B){function u(a){a=B.call(this,a)||this;a._unitNormalizer=new L.UnitNormalizer;a._handles=new G;a._tempStartPosition=q.create();a._tempEndPosition=q.create();a._tempCornerPosition=q.create();return a}x._inheritsLoose(u,B);var k=u.prototype;k.initialize=function(){this._handles.add(g.when(()=>{var a;
return null==(a=this.view)?void 0:a.ready},()=>this._initialize(),{once:!0,sync:!0,initial:!0}))};k.destroy=function(){this._handles=m.destroyMaybe(this._handles)};k._initialize=function(){const a=this.view.spatialReference;var b=v.getSphericalPCPF(a);this._sphericalPCPF=b=b===v.SphericalECEFSpatialReference?v.WGS84ECEFSpatialReference:b;const e=h.canProjectWithoutEngine(a,b);this._unitNormalizer.spatialReference=e?b:a;this._handles.add([g.watch(()=>({viewData:this.viewData,startPoint:this.analysis.startPoint}),
({viewData:c,startPoint:d})=>{c.elevationAlignedStartPoint=this._applyProjectionAndElevationAlignment(d)},g.syncAndInitial),g.watch(()=>({viewData:this.viewData,endPoint:this.analysis.endPoint}),({viewData:c,endPoint:d})=>{c.elevationAlignedEndPoint=this._applyProjectionAndElevationAlignment(d)},g.syncAndInitial),g.watch(()=>({result:this._computedResult,viewData:this.viewData}),({result:c,viewData:d})=>{d.result=c},g.syncAndInitial)])};k._applyProjectionAndElevationAlignment=function(a){if(m.isNone(a))return a;
const b=A.applyProjectionAndElevationAlignment(a,this.view.spatialReference,this.view.elevationProvider);return m.isNone(b)?(A.logFailedGeometryProjectionError(this.analysis,a.spatialReference,M),null):b};k._euclideanDistances=function(a,b){var e=a.clone();e.z=b.z;const c=this._tempStartPosition;var d=this._tempEndPosition,l=this._tempCornerPosition,n=this.view.spatialReference;const C=this._sphericalPCPF;n=h.canProjectWithoutEngine(n,C)?C:n;h.projectPointToVector(a,c,n);h.projectPointToVector(b,
d,n);h.projectPointToVector(e,l,n);e=y.distance(c,d);d=y.distance(l,d);a=Math.abs(b.z-a.z);b=N=>this._unitNormalizer.normalizeDistance(N);l=b(e);d=b(d);a=b(a);return{direct:r.createQuantity(l,"meters"),horizontal:r.createQuantity(d,"meters"),vertical:r.createQuantity(a,"meters")}};k._geodesicDistance=function(a,b,e){var c=a.spatialReference;const d=new K({spatialReference:c});d.addPath([a,b]);c=c.isGeographic&&w.isSupported(c)?w.geodesicLengths([d],"meters")[0]:c.isWebMercator?J.geodesicLength(d,
"meters"):null;a=m.isSome(c)?c:this._fallbackGeodesicDistance(a,b,e);return r.createQuantity(a,"meters")};k._fallbackGeodesicDistance=function(a,b,e){return h.projectPointToWGS84ComparableLonLat(a,D)&&h.projectPointToWGS84ComparableLonLat(b,E)?(a={distance:0},w.inverseGeodeticSolver(a,D,E),a.distance):e};x._createClass(u,[{key:"_computedResult",get:function(){const {elevationAlignedStartPoint:a,elevationAlignedEndPoint:b,measurementMode:e}=this.viewData;if(m.isNone(a)||m.isNone(b))return null;const c=
this._euclideanDistances(a,b),d=this._geodesicDistance(a,b,c.horizontal.value),l=e===z.MeasurementMode.Geodesic||e===z.MeasurementMode.Auto&&1E5<c.horizontal.value?"geodesic":"euclidean";return{mode:l,distance:"euclidean"===l?c.direct:d,directDistance:c.direct,horizontalDistance:c.horizontal,verticalDistance:c.vertical,geodesicDistance:d}}}]);return u}(F);p.__decorate([t.property()],f.DirectLineMeasurementController.prototype,"view",void 0);p.__decorate([t.property()],f.DirectLineMeasurementController.prototype,
"analysis",void 0);p.__decorate([t.property()],f.DirectLineMeasurementController.prototype,"viewData",void 0);p.__decorate([t.property()],f.DirectLineMeasurementController.prototype,"_computedResult",null);f.DirectLineMeasurementController=p.__decorate([I.subclass("esri.views.3d.analysis.DirectLineMeasurement.DirectLineMeasurementController")],f.DirectLineMeasurementController);const D=q.create(),E=q.create();Object.defineProperties(f,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});