// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.24/esri/copyright.txt for details.
//>>built
define("exports ../../../../../chunks/_rollupPluginBabelHelpers ../../../../../chunks/tslib.es6 ../../../../../core/Collection ../../../../../core/Evented ../../../../../core/HandleOwner ../../../../../core/handleUtils ../../../../../core/maybe ../../../../../core/reactiveUtils ../../../../../core/accessorSupport/decorators/property ../../../../../core/arrayUtils ../../../../../core/has ../../../../../core/accessorSupport/ensureType ../../../../../core/accessorSupport/decorators/subclass ../../../../../layers/graphics/dehydratedFeatures ../../../../../support/elevationInfoUtils ../../manipulatorUtils ../../SnappingVisualizer3D ../isSupportedGraphicUtils ../ManipulatorType ../manipulatorUtils ../visualElementUtils ../manipulations/config ../manipulations/MoveManipulation ../manipulations/moveUtils ../manipulations/MoveXYGraphicManipulation ./isSupportedGraphic ../../visualElements/OutlineVisualElement ../../../layers/graphics/GraphicState ../../../../interactive/dragEventPipeline ../../../../interactive/InteractiveToolBase ../../../../interactive/editGeometry/EditGeometryOperations ../../../../interactive/sketch/SketchTooltipOptions ../../../../interactive/snapping/SnappingContext ../../../../interactive/snapping/SnappingDragPipelineStep ../../../../interactive/tooltip/Tooltip ../../../../interactive/tooltip/TranslateTooltipInfos ../../../../support/automaticLengthMeasurementUtils ../../../../support/euclideanLengthMeasurementUtils".split(" "),
function(m,B,t,K,L,M,N,p,z,v,ja,ka,la,O,P,A,Q,R,S,D,T,U,V,w,W,X,Y,E,Z,F,aa,ba,G,ca,da,ea,x,fa,ha){let H=function(q){this.allGraphics=q;this.type="graphic-move-start"},I=function(q,u,n){this.dx=q;this.dy=u;this.allGraphics=n;this.type="graphic-move"},C=function(q){this.allGraphics=q;this.type="graphic-move-stop"};m.GraphicMoveTool=function(q){function u(a){a=q.call(this,a)||this;a.graphics=new K;a.enableZ=!0;a.tooltipOptions=new G;a.type="move-3d";a._snappingPipeline=new da.SnappingPipeline;a._tooltip=
null;return a}B._inheritsLoose(u,q);var n=u.prototype;n.initialize=function(){const {graphics:a,view:b}=this;this.own([a.on("change",()=>this._refreshManipulators()),z.watch(()=>this.tooltipOptions.enabled,e=>{this._tooltip=e?new ea.Tooltip({view:b}):p.destroyMaybe(this._tooltip)},z.syncAndInitial)]);this._refreshManipulators();this.finishToolCreation()};n.destroy=function(){this._tooltip=p.destroyMaybe(this._tooltip);this.graphics.removeAll();this._set("view",null)};n.reset=function(){};n._refreshManipulators=
function(){this.handles.removeAll();this._moveManipulation&&this._moveManipulation.destroy();this.manipulators.removeAll();const a=this.graphics.toArray().filter(b=>Y.isSupportedGraphic(b)===S.SupportedGraphicResult.SUPPORTED).map(b=>new ia(b));a.length&&(this._createManipulators(a),this._createVisualElements(a),this.handles.add(a.map(b=>this.view.trackGraphicState(b.state))),this._updateMoveManipulation(a))};n._createManipulators=function(a){for(const b of a){const e=b.state;b.manipulationXY=new X.MoveXYGraphicManipulation({tool:this,
view:this.view,graphicState:e});b.manipulationXY.forEachManipulator(d=>this.handles.add([d.events.on("immediate-click",c=>{this.emit("immediate-click",{...c,graphic:e.graphic});c.stopPropagation()}),d.events.on("grab-changed",({action:c})=>{const {tooltipOptions:f,_tooltip:g}=this;p.isNone(g)||("focus"===c?g.info=new x.TranslateGraphicTooltipInfo({tooltipOptions:f}):g.clear())})]));this.handles.add(b.manipulationXY.createDragPipeline((d,c,f,g)=>this._buildDragEventPipeline(a,w.ManipulationType.XY,
d,c,f,g)))}this._createMoveManipulation(a)};n._createMoveManipulation=function(a){const b=new w.MoveManipulation({tool:this,view:this.view,snapToScene:!1,xyAvailable:!0,xyAxisAvailable:!0,zAvailable:!0,radius:1===a.length?w.MoveManipulation.radiusForSymbol(a[0].graphic.symbol):V.DISC_RADIUS});this._moveManipulation=b;b.elevationInfo={mode:"absolute-height",offset:0};b.forEachManipulator((c,f)=>{this.handles.add(c.events.on("immediate-click",g=>{b.zManipulation.hasManipulator(c)||1!==this.graphics.length||
this.emit("immediate-click",{...g,graphic:this.graphics.getItemAt(0)});g.stopPropagation()}));f===D.ManipulatorType.TRANSLATE_XY&&this.handles.add(c.events.on("focus-changed",({action:g})=>{const {tooltipOptions:k,_tooltip:l}=this;p.isNone(l)||("focus"===g?l.info=new x.TranslateGraphicTooltipInfo({tooltipOptions:k}):l.clear())}));f===D.ManipulatorType.TRANSLATE_Z&&this.handles.add(c.events.on("focus-changed",({action:g})=>{const {tooltipOptions:k,_tooltip:l}=this;p.isNone(l)||("focus"===g?l.info=
new x.TranslateZTooltipInfo({tooltipOptions:k}):l.clear())}))});const e=()=>this._updateMoveManipulation(a);for(const c of a)this.handles.add([c.state.on("changed",e),z.watch(()=>c.state.displaying,e)]);const d=a[a.length-1];this.handles.add(d.state.on("changed",()=>this._updateMoveManipulationAngle(d)));this.handles.add(b.createDragPipeline((c,f,g,k,l)=>this._buildDragEventPipeline(a,c,f,g,k,l),A.getGraphicEffectiveElevationInfo(d.graphic),p.unwrap(d.graphic.geometry).spatialReference,d.graphic));
this._updateMoveManipulationAngle(d)};n._createVisualElements=function(a){for(const b of a){const e=U.createVisualElements({view:this.view,graphic:b.graphic,forEachManipulator:d=>{b.manipulationXY.forEachManipulator(d);this._moveManipulation.forEachManipulator(d)},onManipulatorsChanged:()=>N.makeHandle()});p.isNone(e)||(b.geometryRepresentation=e.visualElement,b.geometryRepresentation instanceof E.OutlineVisualElement&&this.handles.add([b.geometryRepresentation.events.on("attachment-origin-changed",
()=>{b.state.isDraped||this._updateMoveManipulation(a)}),z.watch(()=>b.state.isDraped,()=>this._updateMoveManipulation(a))]),this.handles.add(e))}};n._updateMoveManipulationAngle=function(a){this._moveManipulation.angleDeferred=()=>W.shapeOrientation(a.graphic.geometry)};n._updateMoveManipulation=function(a){const b=P.makeDehydratedPoint(0,0,0,this.view.spatialReference);let e=0,d=!1;const c=this._moveManipulation;for(const f of a)f.state.displaying&&(a=f.state.graphic,this.enableZ&&T.canMoveZ(a)&&
(d=!0),a=f.geometryRepresentation instanceof E.OutlineVisualElement&&!f.state.isDraped?f.geometryRepresentation.attachmentOrigin:Q.getGraphicAttachmentOrigin(this.view,a),p.isSome(a)&&(b.x+=a.x,b.y+=a.y,b.z+=a.z,e++));0<e?(b.x/=e,b.y/=e,b.z/=e,c.location=b,c.xyManipulation.available=!0,c.xyAxisManipulation.available=!0,c.zManipulation.available=d):c.available=!1};n._buildDragEventPipeline=function(a,b,e,d,c,f){const g=[],k=[];let l=null,y=null;const J=()=>{for(const h of g)h.dragging=!1;g.length=
0;k.length=0;y=l=null;this._moveManipulation.interactive=!0};if(1===a.length&&b===w.ManipulationType.XY){const h=a[0].graphic;d=this._buildSnappingPipelineSteps(h,A.getGraphicEffectiveElevationInfo(h),d,c,f)}d=d.next(h=>{if("start"===h.action){g.length=0;k.length=0;for(const r of a)r.dragging||!r.manipulationXY.hasManipulator(e)&&r.manipulationXY.grabbing||(g.push(r),k.push(r.graphic),r.dragging=!0);if(0!==k.length&&(this._moveManipulation.interactive=!1,l=F.dragGraphicMany(k,this.view.state.viewingMode),
y=F.resetGraphicMany(k),this.emit("graphic-move-start",new H(k)),this.destroyed))return null}return 0!==k.length?h:null}).next(h=>l(h)).next(h=>this._updateMoveTooltip(h,b,a)).next(h=>{switch(h.action){case "start":case "update":if(h.translationX||h.translationY||h.translationZ){const r=this.view.toScreen(h.mapStart);h=this.view.toScreen(h.mapEnd);this.emit("graphic-move",new I(h.x-r.x,h.y-r.y,k));if(this.destroyed)return null}break;case "end":this.emit("graphic-move-stop",new C(k));if(this.destroyed)return null;
J()}});c.next(h=>y(h)).next(()=>{this.emit("graphic-move-stop",new C(k));if(this.destroyed)return null;J()});return d};n._updateMoveTooltip=function(a,b,e){const {tooltipOptions:d,_tooltip:c}=this;if(p.isNone(c))return a;c.clear();if(b===w.ManipulationType.XY||b===w.ManipulationType.XY_AXIS)"end"===a.action?c.info=new x.TranslateGraphicTooltipInfo({tooltipOptions:d}):(e=fa.autoHorizontalDistanceByElevationModeBetweenPoints(a.mapStart,a.mapEnd,0===e.length?"absolute-height":e[0].state.isDraped?"on-the-ground":
"absolute-height"),p.isSome(e)&&(c.info=new x.TranslateGraphicTooltipInfo({tooltipOptions:d,distance:e})));b===w.ManipulationType.Z&&("end"===a.action?c.info=new x.TranslateZTooltipInfo({tooltipOptions:d}):p.applySome(ha.verticalSignedDistanceBetweenPoints(a.mapStart,a.mapEnd),f=>{c.info=new x.TranslateZTooltipInfo({tooltipOptions:d,distance:f})}));return a};n._buildSnappingPipelineSteps=function(a,b,e,d,c){const f=a.geometry;if(p.isNone(f)||"point"!==f.type&&"mesh"!==f.type)return e;const g=("point"===
f.type?f:f.anchor).clone(),k=new ca.SnappingContext({elevationInfo:b,pointer:c,editGeometryOperations:ba.EditGeometryOperations.fromGeometry(g,this.view.state.viewingMode),visualizer:new R.SnappingVisualizer3D,excludeFeature:a});b=this.snappingManager;return e.next(l=>{g.z=A.getConvertedElevation(this.view,g,A.getGraphicEffectiveElevationInfo(a),{mode:"absolute-height",offset:0});const y=k.coordinateHelper.pointToVector(g);return{...l,snapOrigin:y}}).next(this._snappingPipeline.createSnapDragEventPipelineStep({snappingContext:k,
snappingManager:b,cancel:d,updatingHandles:this.updatingHandles}),this._snappingPipeline.next)};B._createClass(u,[{key:"updating",get:function(){return this.updatingHandles.updating}},{key:"test",get:function(){return{tooltip:this._tooltip}}}]);return u}(M.HandleOwnerMixin(L.EventedMixin(aa.InteractiveToolBase)));t.__decorate([v.property({constructOnly:!0,nonNullable:!0})],m.GraphicMoveTool.prototype,"view",void 0);t.__decorate([v.property()],m.GraphicMoveTool.prototype,"graphics",void 0);t.__decorate([v.property({constructOnly:!0,
nonNullable:!0})],m.GraphicMoveTool.prototype,"enableZ",void 0);t.__decorate([v.property({constructOnly:!0,type:G})],m.GraphicMoveTool.prototype,"tooltipOptions",void 0);t.__decorate([v.property({constructOnly:!0})],m.GraphicMoveTool.prototype,"snappingManager",void 0);t.__decorate([v.property()],m.GraphicMoveTool.prototype,"type",void 0);t.__decorate([v.property()],m.GraphicMoveTool.prototype,"updating",null);m.GraphicMoveTool=t.__decorate([O.subclass("esri.views.3d.interactive.editingTools.graphicMove3D.GraphicMoveTool")],
m.GraphicMoveTool);let ia=function(){function q(u){this.manipulationXY=this.geometryRepresentation=this.state=null;this.dragging=!1;this.state=new Z.GraphicState({graphic:u})}B._createClass(q,[{key:"graphic",get:function(){return this.state.graphic}}]);return q}();m.GraphicMoveEvent=I;m.GraphicMoveStartEvent=H;m.GraphicMoveStopEvent=C;Object.defineProperties(m,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});