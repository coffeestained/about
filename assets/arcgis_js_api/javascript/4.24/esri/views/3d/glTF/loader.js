// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.24/esri/copyright.txt for details.
//>>built
define("exports ../../../chunks/_rollupPluginBabelHelpers ../../../core/maybe ../../../chunks/mat4f64 ./DefaultErrorContext ./LoaderResult ./internal/Resource ../../webgl/enums".split(" "),function(z,t,u,G,H,A,I,q){function x(){x=t._asyncToGenerator(function*(g,a,d={},l=!0){const c=yield I.Resource.load(g,v,a,d),e=`gltf_${J++}`,f={lods:[],materials:new Map,textures:new Map,meta:K(c)};g=!(!c.json.asset.extras||"symbolResource"!==c.json.asset.extras.ESRI_type);const n=new Map;yield L(c,function(){var h=
t._asyncToGenerator(function*(b,m,k,w){var r;const B=null!=(r=n.get(k))?r:0;n.set(k,B+1);var p=void 0!==b.mode?b.mode:q.PrimitiveType.TRIANGLES;r=p===q.PrimitiveType.TRIANGLES||p===q.PrimitiveType.TRIANGLE_STRIP||p===q.PrimitiveType.TRIANGLE_FAN?p:null;if(u.isNone(r))v.warnUnsupported("Unsupported primitive mode ("+M[p]+"). Skipping primitive.");else if(c.hasPositions(b)){p=c.getPositionData(b,d);var N=c.getMaterial(b,d,l),C=c.hasNormals(b)?c.getNormalData(b,d):null,D=c.hasTangents(b)?c.getTangentData(b,
d):null,E=c.hasTextureCoordinates(b)?c.getTextureCoordinates(b,d):null,F=c.hasVertexColors(b)?c.getVertexColors(b,d):null;b=c.getIndexData(b,d);m={transform:G.clone(m),attributes:{position:yield p,normal:C?yield C:null,texCoord0:E?yield E:null,color:F?yield F:null,tangent:D?yield D:null},indices:yield b,primitiveType:r,material:O(f,yield N,e)};b=null;u.isSome(f.meta)&&u.isSome(f.meta.ESRI_lod)&&"screenSpaceRadius"===f.meta.ESRI_lod.metric&&(b=f.meta.ESRI_lod.thresholds[k]);f.lods[k]=f.lods[k]||{parts:[],
name:w,lodThreshold:b};f.lods[k].parts[B]=m}else v.warn("Skipping primitive without POSITION vertex attribute.")});return function(b,m,k,w){return h.apply(this,arguments)}}());for(const h of f.lods)h.parts=h.parts.filter(b=>!!b);return{model:f,meta:{isEsriSymbolResource:g,uri:c.uri},customMeta:{}}});return x.apply(this,arguments)}function K(g){let a=null;g.json.nodes.forEach(d=>{d=d.extras;u.isSome(d)&&(d.ESRI_proxyEllipsoid||d.ESRI_lod)&&(a=d)});return a}function L(g,a){return y.apply(this,arguments)}
function y(){y=t._asyncToGenerator(function*(g,a){function d(h,b){return l.apply(this,arguments)}function l(){l=t._asyncToGenerator(function*(h,b){const m=c.nodes[h];h=g.getNodeTransform(h);v.warnUnsupportedIf(null!=m.weights,"Morph targets are not supported.");if(null!=m.mesh){const k=c.meshes[m.mesh];for(const w of k.primitives)n.push(a(w,h,b,k.name))}for(const k of m.children||[])n.push(d(k,b))});return l.apply(this,arguments)}const c=g.json;var e=c.scenes[c.scene||0].nodes;const f=1<e.length,
n=[];for(const h of e)e=c.nodes[h],n.push(d(h,0)),e.extensions&&e.extensions.MSFT_lod&&Array.isArray(e.extensions.MSFT_lod.ids)&&!f&&e.extensions.MSFT_lod.ids.forEach((b,m)=>d(b,m+1));yield Promise.all(n)});return y.apply(this,arguments)}function O(g,a,d){const l=e=>{const f=`${d}_tex_${e&&e.id}${e&&e.name?"_"+e.name:""}`;e&&!g.textures.has(f)&&(e=A.makeTextureSource(e.data,{wrap:{s:e.wrapS,t:e.wrapT},mipmap:P.includes(e.minFilter),noUnpackFlip:!0}),g.textures.set(f,e));return f},c=`${d}_mat_${a.id}_${a.name}`;
g.materials.has(c)||(a=A.makeMaterialParameters({color:[a.color[0],a.color[1],a.color[2]],opacity:a.color[3],alphaMode:a.alphaMode,alphaCutoff:a.alphaCutoff,doubleSided:a.doubleSided,colorMixMode:a.ESRI_externalColorMixMode,textureColor:a.colorTexture?l(a.colorTexture):void 0,textureNormal:a.normalTexture?l(a.normalTexture):void 0,textureOcclusion:a.occlusionTexture?l(a.occlusionTexture):void 0,textureEmissive:a.emissiveTexture?l(a.emissiveTexture):void 0,textureMetallicRoughness:a.metallicRoughnessTexture?
l(a.metallicRoughnessTexture):void 0,emissiveFactor:[a.emissiveFactor[0],a.emissiveFactor[1],a.emissiveFactor[2]],metallicFactor:a.metallicFactor,roughnessFactor:a.roughnessFactor}),g.materials.set(c,a));return c}let J=0;const v=new H.DefaultErrorContext,P=[q.TextureSamplingMode.LINEAR_MIPMAP_LINEAR,q.TextureSamplingMode.LINEAR_MIPMAP_NEAREST],M="POINTS LINES LINE_LOOP LINE_STRIP TRIANGLES TRIANGLE_STRIP TRIANGLE_FAN".split(" ");z.load=function(g,a){return x.apply(this,arguments)};Object.defineProperties(z,
{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});