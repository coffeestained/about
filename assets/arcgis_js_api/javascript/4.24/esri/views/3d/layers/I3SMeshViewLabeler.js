// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.24/esri/copyright.txt for details.
//>>built
define("../../../chunks/_rollupPluginBabelHelpers ../../../chunks/tslib.es6 ../../../Graphic ../../../symbols ../../../core/Accessor ../../../core/Handles ../../../core/maybe ../../../core/reactiveUtils ../../../core/accessorSupport/decorators/property ../../../core/arrayUtils ../../../core/has ../../../core/accessorSupport/ensureType ../../../core/accessorSupport/decorators/subclass ../../../core/accessorSupport/diffUtils ../../../chunks/vec3f64 ../../../layers/graphics/dehydratedFeatures ./graphics/Graphics3DCore ./graphics/Graphics3DScaleVisibility ./i3s/I3SGeometryUtil ../support/LimitGraphicsMap ../webgl-engine/lib/basicInterfaces ../../../symbols/PointSymbol3D".split(" "),
function(v,n,A,h,B,C,p,D,q,M,N,O,E,F,G,w,H,I,x,J,K,L){h=function(y){function r(a){a=y.call(this,a)||this;a.loadedGraphics=new J.LimitGraphicsMap(5E4);a.slicePlaneEnabled=!1;a._renderingInfo={symbol:new L};a._handles=new C;a._graphicsByNode=new Map;a._scaleVisibility=new I({layerScaleEnabled:!1});return a}v._inheritsLoose(r,y);var k=r.prototype;k.initialize=function(){this._graphicsCore=new H.Graphics3DCore({owner:this,layer:this.layer,preferredUpdatePolicy:K.UpdatePolicy.ASYNC,elevationFeatureExpressionEnabled:!1,
graphicSymbolSupported:!1,getRenderingInfoWithoutRenderer:!0,hasZ:!0,hasM:!1});this._scaleVisibility.setup(this,this.layer,(b,c,g)=>this._graphicsCore.spatialIndex.queryGraphicUIDsInExtent(b,c,g),this._graphicsCore,this.view.basemapTerrain);const a=this.view.labeler.addGraphicsOwner(this._graphicsCore,this._scaleVisibility,{emptySymbolLabelSupported:!0,elevationInfoOverride:{mode:"absolute-height",offset:0},disablePlacement:{logEntityDescription:"3D Object Scene Layer features"}}),e=this.view.deconflictor.addGraphicsOwner(this._graphicsCore);
this._graphicsCore.setup({labeler:a,deconflictor:e,scaleVisibility:this._scaleVisibility}).then(()=>this._graphicsCore.startCreateGraphics()).catch(()=>{});this._handles.add(D.watch(()=>this.layer.labelingInfo,(b,c)=>{F.diff(b,c)&&this._graphicsCore.updateLabelingInfo()}))};k.destroy=function(){this._handles=p.destroyMaybe(this._handles);this._scaleVisibility=p.destroyMaybe(this._scaleVisibility);this._graphicsCore=p.destroyMaybe(this._graphicsCore);this.loadedGraphics=p.destroyMaybe(this.loadedGraphics);
this.view=null};k.addNodeMeta=function(a,e){let b=0;const c=a.filteredIds,g=this.view.spatialReference,l=a.featureIds.map((d,t)=>{x.boundingBoxTop(t,this.collection,a.objectHandle,f);const z=w.makeDehydratedPoint(0,0,0,g);this.view.renderCoordsHelper.fromRenderCoords(f,z);t=e(t,a);let u=!1;p.isNone(c)?u=!0:b<c.length&&d===c[b]&&(u=!0,b++);return{objectId:d,uid:A.generateUID(),attributes:t,visible:u,geometry:z}});this.loadedGraphics.addMany(l);this._graphicsByNode.set(a.node.index,l)};k.updateLabelPositions=
function(a){const e=this._graphicsByNode.get(a.node.index);let b=0;const c=this.view.spatialReference,g=[];for(let l=0;l<a.featureIds.length;l++){const d=e[b];a.featureIds[l]===d.objectId&&(b++,x.boundingBoxTop(l,this.collection,a.objectHandle,f),this.view.renderCoordsHelper.fromRenderCoords(f,f,c),p.isSome(d.geometry)&&"point"===d.geometry.type&&d.geometry.x===f[0]&&d.geometry.y===f[1]&&d.geometry.z===f[2]||(p.isSome(d.geometry)&&"point"===d.geometry.type?(d.geometry.x=f[0],d.geometry.y=f[1],d.geometry.z=
f[2]):d.geometry=w.makeDehydratedPoint(f[0],f[1],f[2],c),g.push(d.uid)))}this._graphicsCore.updateLabelingInfo(g)};k.setNodeMetaAttributes=function(a,e){const b=this._graphicsByNode.get(a.node.index),c=Array(b.length);for(let g=0;g<b.length;g++){const l=b[g];l.attributes=e(g,a);c[g]=l.uid}this._graphicsCore.updateLabelingInfo(c)};k.applyFilterChange=function(a){var e=this._graphicsByNode.get(a.node.index);if(e)if(p.isNone(a.filteredIds))for(var b of e)b.visible||(b.visible=!0,m.graphic=b,m.property=
"visible",m.oldValue=!1,m.newValue=!0,this._graphicsCore.graphicUpdateHandler(m));else{b=0;for(const c of e)e=c.visible,b<a.filteredIds.length&&c.objectId===a.filteredIds[b]?(c.visible=!0,b++):c.visible=!1,e!==c.visible&&(m.graphic=c,m.property="visible",m.oldValue=e,m.newValue=c.visible,this._graphicsCore.graphicUpdateHandler(m))}};k.removeNodeMeta=function(a){this.loadedGraphics.removeManyByObjectId(a.featureIds)};k.getRenderingInfo=function(){return this._renderingInfo};k.notifyGraphicGeometryChanged=
function(){};k.notifyGraphicVisibilityChanged=function(){};v._createClass(r,[{key:"updatePolicy",get:function(){return this._graphicsCore.effectiveUpdatePolicy}},{key:"usedMemory",get:function(){return this._graphicsCore.usedMemory}},{key:"unloadedMemoryEstimate",get:function(){return this._graphicsCore.unprocessedMemoryEstimate}},{key:"test",get:function(){return{graphicsCore:this._graphicsCore}}}]);return r}(B);n.__decorate([q.property()],h.prototype,"view",void 0);n.__decorate([q.property()],h.prototype,
"layer",void 0);n.__decorate([q.property()],h.prototype,"collection",void 0);n.__decorate([q.property()],h.prototype,"loadedGraphics",void 0);n.__decorate([q.property({aliasOf:"_graphicsCore.updating"})],h.prototype,"updating",void 0);n.__decorate([q.property()],h.prototype,"slicePlaneEnabled",void 0);n.__decorate([q.property()],h.prototype,"_graphicsCore",void 0);h=n.__decorate([E.subclass("esri.views.3d.layers.I3SMeshViewLabeler")],h);const m={graphic:null,property:null,oldValue:null,newValue:null},
f=G.create();return h});