// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.24/esri/copyright.txt for details.
//>>built
define("exports ../../../../../chunks/_rollupPluginBabelHelpers ../../../../../core/mathUtils ../../../../../chunks/vec3f64 ../../../../../geometry/support/aaBoundingBox ../../materials/internal/MaterialUtil".split(" "),function(G,N,O,C,J,P){function Q(g,h,a){let d=0,e=Infinity;for(let b=0;3>b;++b){var c=g[b];if(h[b]<c){if(1E-6>=a[b])return!1;d=Math.max(d,(c-h[b])/a[b])}else-1E-6>=a[b]&&(e=Math.min(e,(c-h[b])/a[b]));if(d>e)return!1;c=g[b+3];if(h[b]>c){if(-1E-6<=a[b])return!1;d=Math.max(d,(c-h[b])/
a[b])}else 1E-6<=a[b]&&(e=Math.min(e,(c-h[b])/a[b]));if(d>e)return!1}return!0}function R(g,h,a,d,e,c){let b=d;for(;a<b;){var f=g[a];h[6*f+e+3]<=c?++a:(--b,g[a]=g[b],g[b]=f)}f=a;for(b=d;f<b;)d=g[b-1],h[6*d+e]>=c?--b:(g[b-1]=g[f],g[f]=d,++f);return{next:a,mid:f}}function S(g,h,a,d){if(d<=a)return J.fromValues(NaN,NaN,NaN,NaN,NaN,NaN);var e=6*g[a];for(var c=0;3>c;++c)x[c]=h[e+0+c],y[c]=h[e+3+c];for(a+=1;a<d;++a)for(e=6*g[a],c=0;3>c;++c)x[c]=Math.min(x[c],h[e+0+c]),y[c]=Math.max(y[c],h[e+3+c]);return J.fromValues(x[0],
x[1],x[2],y[0],y[1],y[2])}function T(g){var h=g[3]-g[0];const a=g[4]-g[1],d=g[5]-g[2];h=h>a?h>d?0:a>d?1:2:a>d?1:d>h?2:0;return{axis:h,midValue:(g[h]+g[h+3])/2}}function U(g,h,a,d,e){a-=h;const c=new Float32Array(6*a);for(let f=0;f<a;++f){var b=3*(f+h);const k=g[b+0]*e,m=g[b+1]*e;b=g[b+2]*e;for(let l=0;3>l;++l){const p=d[k+l],n=d[m+l],u=d[b+l];c[6*f+l]=Math.min(p,n,u);c[6*f+3+l]=Math.max(p,n,u)}}return c}function V(g,h,a,d){const e=d-a;var c=0;for(var b=a;b<d;++b)for(var f=0;3>f;++f)c=Math.max(h[3*
b+f],c);d=65535>=c?new Uint16Array(3*e):new Uint32Array(3*e);for(c=0;c<e;++c)for(b=3*(g[c]+a),f=0;3>f;++f)d[3*c+f]=h[b+f];return d}let K=function(g,h,a,d,e){this.aabb=g;this.axis=h;this.d=a;this.midStartIndex=d;this.rightStartIndex=e},M=function(){function g(a,d,e,c){this.globalTriangleVertexIndices=a;this.firstTriangleIndex=d;this.positionAttribute=c;this.rayDirection=C.create();this.bspNodeTree=[];this.vertexPositionBuffer=c.data;this.vertexPositionStride=c.stride;const b=e-d,f=65535>=b?new Uint16Array(b):
new Uint32Array(b);this.indices=f;for(let k=0;k<b;++k)f[k]=k;{const k=U(a,d,e,c.data,c.stride),m=O.clamp(Math.log2(b/40),2,10),l=(p,n,u)=>{var q=S(f,k,p,n);const t=n-p;if(40>=t)return p=new K(q,void 0,0,p,n),this.bspNodeTree.push(p),p;const {axis:v,midValue:z}=T(q),r=R(f,k,p,n,v,z),B=(D,E)=>{if(!(u>m)){var A=E-D;if(!(40>A||A>=.8*t))return l(D,E,u+1)}};q=new K(q,v,z,r.next,r.mid);this.bspNodeTree.push(q);q.leftNode=B(p,r.next);q.rightNode=B(r.mid,n);return q};l(0,b,0);this.triangleVertexIndices=V(f,
a,d,e)}}var h=g.prototype;h.intersectRayTriangleRange=function(a,d){{if(a>=d)return;const z=this.triangleVertexIndices,r=this.positionAttribute.data,B=this.positionAttribute.stride;var e=this.rayOrigin;const D=e[0],E=e[1];e=e[2];var c=this.rayDirection;const A=c[0],H=c[1];c=c[2];for(let I=a,F=3*a;I<d;++I){var b=z[F]*B,f=r[b],k=r[b+1],m=r[b+2],l=z[F+1]*B;b=r[l];var p=r[l+1];l=r[l+2];var n=z[F+2]*B,u=r[n],q=r[n+1];n=r[n+2];F+=3;b-=f;p-=k;l-=m;u-=f;q-=k;n-=m;var t=H*n-q*c,v=c*u-n*A;const L=A*q-u*H,w=
b*t+p*v+l*L;if(!(Math.abs(w)<=Number.EPSILON)){f=D-f;k=E-k;m=e-m;t=f*t+k*v+m*L;if(0<w){if(0>t||t>w)continue}else if(0<t||t<w)continue;v=k*l-p*m;m=m*b-l*f;k=f*p-b*k;f=A*v+H*m+c*k;if(0<w){if(0>f||t+f>w)continue}else if(0<f||t+f<w)continue;k=(u*v+q*m+n*k)/w;0<=k&&(m=this.indices[I]+this.firstTriangleIndex,b=P.computeNormal(b,p,l,u,q,n,W),this.callback(k,b,m,!1))}}}g.numFacesTested+=d-a};h.intersectRay=function(a,d){g.numFacesTested=0;var e=C.fromValues(a.r0[0],a.r0[1],a.r0[2]),c=C.fromValues(a.r1[0],
a.r1[1],a.r1[2]);a=c[0]-e[0];const b=c[1]-e[1];c=c[2]-e[2];1E-6>a*a+b*b+c*c||(this.rayOrigin=e,e=this.rayDirection,e[0]=a,e[1]=b,e[2]=c,e=this.triangleVertexIndices.length/3,this.callback=d,this.intersectRayBSP(this.bspNodeTree[0],0,e))};h.intersectRayBSP=function(a,d,e){const c=this.rayOrigin,b=this.rayDirection;if(Q(a.aabb,c,b)){var f=a.axis,k=a.d;if(c[f]<k||0>b[f]){const m=a.midStartIndex;if(d<m){const l=a.leftNode;void 0!==l?this.intersectRayBSP(l,d,m):this.intersectRayTriangleRange(d,m)}}this.intersectRayTriangleRange(a.midStartIndex,
a.rightStartIndex);if(c[f]>k||0<b[f])d=a.rightStartIndex,d<e&&(a=a.rightNode,void 0!==a?this.intersectRayBSP(a,d,e):this.intersectRayTriangleRange(d,e))}};N._createClass(g,[{key:"estimatedMemoryUsage",get:function(){return this.triangleVertexIndices.byteLength+this.indices.byteLength}}]);return g}();M.numFacesTested=0;const W=C.create(),x=[Infinity,Infinity,Infinity],y=[-Infinity,-Infinity,-Infinity];G.ComponentIntersectionData=M;G.componentMinimalSizeForIntersectionData=200;Object.defineProperties(G,
{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});