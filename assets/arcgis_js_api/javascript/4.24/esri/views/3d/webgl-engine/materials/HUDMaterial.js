// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.24/esri/copyright.txt for details.
//>>built
define("exports ../../../../chunks/_rollupPluginBabelHelpers ../../../../core/mathUtils ../../../../core/maybe ../../../../chunks/mat3 ../../../../chunks/mat3f64 ../../../../chunks/mat4 ../../../../chunks/mat4f64 ../../../../chunks/vec2 ../../../../chunks/vec2f64 ../../../../chunks/vec3 ../../../../chunks/vec3f64 ../../../../chunks/vec4f64 ../../../../core/libs/gl-matrix-2/types/mat4 ../../../../geometry/support/aaBoundingRect ../../support/buffer/InterleavedLayout ../core/shaderLibrary/ShaderOutputOptions ../core/shaderLibrary/hud/HUD.glsl ../lib/geometryDataUtils ../lib/GLTextureMaterial ../lib/Material ../lib/RenderSlot ../lib/screenSizePerspectiveUtils ../lib/Util ../lib/VertexAttribute ./internal/bufferWriterUtils ./internal/MaterialUtil ./renderers/utils ../../../../chunks/HUDMaterial.glsl ../shaders/HUDMaterialTechnique ../shaders/HUDMaterialTechniqueConfiguration".split(" "),
function(O,M,ja,B,T,U,ka,V,la,W,k,G,ma,na,oa,pa,C,X,qa,Y,Z,J,N,ra,h,K,sa,ta,aa,ba,ua){function va(r,p,c,a=wa){la.copy(a,r.anchorPosition);a[0]*=-p[0];a[1]*=-p[1];a[0]+=r.screenOffset[0]*c;a[1]+=r.screenOffset[1]*c;return a}function ca(r,p,c,a,d,e,b,g){p=p-d-(0<g[0]?a[0]*g[0]:0);let f=p+a[0]+2*d;c=c-d-(0<g[1]?a[1]*g[1]:0);d=c+a[1]+2*d;g=b.distanceFieldBoundingBox;b.textureIsSignedDistanceField&&B.isSome(g)&&(p+=a[0]*g[0],c+=a[1]*g[1],f-=a[0]*(1-g[2]),d-=a[1]*(1-g[3]),p-=e,f+=e,c-=e,d+=e);return r[0]>
p&&r[0]<f&&r[1]>c&&r[1]<d}let Ca=function(r){function p(a){a=r.call(this,a,new da)||this;a.techniqueConfig=new ua.HUDMaterialTechniqueConfiguration;return a}M._inheritsLoose(p,r);var c=p.prototype;c.getConfiguration=function(a,d){this.techniqueConfig.output=a;this.techniqueConfig.hasSlicePlane=this.parameters.hasSlicePlane;this.techniqueConfig.hasVerticalOffset=!!this.parameters.verticalOffset;this.techniqueConfig.hasScreenSizePerspective=!!this.parameters.screenSizePerspective;this.techniqueConfig.screenCenterOffsetUnitsEnabled=
"screen"===this.parameters.centerOffsetUnits?X.HUDSpace.Screen:X.HUDSpace.World;this.techniqueConfig.hasPolygonOffset=this.parameters.polygonOffset;this.techniqueConfig.isDraped=this.parameters.isDraped;this.techniqueConfig.occlusionTestEnabled=this.parameters.occlusionTest;this.techniqueConfig.pixelSnappingEnabled=this.parameters.pixelSnappingEnabled;this.techniqueConfig.signedDistanceFieldEnabled=this.parameters.textureIsSignedDistanceField;this.techniqueConfig.vvSize=!!this.parameters.vvSizeEnabled;
this.techniqueConfig.vvColor=!!this.parameters.vvColorEnabled;a===C.ShaderOutput.Color&&(this.techniqueConfig.debugDrawLabelBorder=!!this.parameters.debugDrawLabelBorder);a===C.ShaderOutput.Highlight&&(this.techniqueConfig.binaryHighlightOcclusionEnabled=this.parameters.binaryHighlightOcclusion);this.techniqueConfig.depthEnabled=this.parameters.depthEnabled;this.techniqueConfig.transparencyPassType=d.transparencyPassType;this.techniqueConfig.hasMultipassGeometry=d.multipassGeometry.enabled;this.techniqueConfig.hasMultipassTerrain=
d.multipassTerrain.enabled;this.techniqueConfig.cullAboveGround=d.multipassTerrain.cullAboveGround;return this.techniqueConfig};c.intersect=function(a,d,e,b,g,f,q,m,l){B.isSome(l)?this._intersectDrapedHudGeometry(a,f,q,m,l):this._intersectHudGeometry(a,d,e,b,q,m)};c._intersectDrapedHudGeometry=function(a,d,e,b,g){const f=a.vertexAttributes.get(h.VertexAttribute.POSITION),q=a.vertexAttributes.get(h.VertexAttribute.SIZE),m=this.parameters,l=aa.calculateAnchorPosForRendering(m);let w=1;var x=1;B.isSome(b)&&
(x=b(ea),w=x[0],x=x[5]);w*=a.screenToWorldRatio;x*=a.screenToWorldRatio;b=2*a.screenToWorldRatio;for(let A=0;A<f.data.length/f.size;A++){var t=A*f.size;const D=f.data[t];t=f.data[t+1];const y=A*q.size;E[0]=q.data[y]*w;E[1]=q.data[y+1]*x;let n;m.textureIsSignedDistanceField&&(n=m.outlineSize*a.screenToWorldRatio/2);ca(d,D,t,E,b,n,m,l)&&e(g.dist,g.normal,-1,!1)}};c._intersectHudGeometry=function(a,d,e,b,g,f){if(b.options.selectionMode&&b.options.hud&&!ta.isInstanceHidden(d)){d=this.parameters;var q=
1,m=1;T.fromMat4(P,e);if(B.isSome(f)){m=f(ea);q=m[0];m=m[5];{f=P;var l=f[0],w=f[1],x=f[2],t=f[3],A=f[4],D=f[5],y=f[6],n=f[7],F=f[8],H=1/Math.sqrt(l*l+w*w+x*x);const I=1/Math.sqrt(t*t+A*A+D*D),Q=1/Math.sqrt(y*y+n*n+F*F);f[0]=l*H;f[1]=w*H;f[2]=x*H;f[3]=t*I;f[4]=A*I;f[5]=D*I;f[6]=y*Q;f[7]=n*Q;f[8]=F*Q}}f=a.vertexAttributes.get(h.VertexAttribute.POSITION);l=a.vertexAttributes.get(h.VertexAttribute.SIZE);w=a.vertexAttributes.get(h.VertexAttribute.NORMAL);a=a.vertexAttributes.get(h.VertexAttribute.AUXPOS1);
ra.assert(3<=f.size);x=b.point;t=b.camera;A=aa.calculateAnchorPosForRendering(d);q*=t.pixelRatio;m*=t.pixelRatio;D="screen"===this.parameters.centerOffsetUnits;for(y=0;y<f.data.length/f.size;y++)if(n=y*f.size,k.set(v,f.data[n],f.data[n+1],f.data[n+2]),k.transformMat4(v,v,e),n=y*l.size,E[0]=l.data[n]*q,E[1]=l.data[n+1]*m,k.transformMat4(v,v,t.viewMatrix),n=y*a.size,k.set(z,a.data[n+0],a.data[n+1],a.data[n+2]),D||(v[0]+=z[0],v[1]+=z[1],0!==z[2]&&(n=z[2],k.normalize(z,v),k.subtract(v,v,k.scale(z,z,n)))),
n=y*w.size,k.set(L,w.data[n],w.data[n+1],w.data[n+2]),this._normalAndViewAngle(L,P,t,R),this._applyVerticalOffsetTransformationView(v,R,t,S),t.applyProjection(v,u),-1<u[0]){u[0]=Math.floor(u[0]);u[1]=Math.floor(u[1]);D&&(z[0]||z[1])&&(u[0]+=z[0],0!==z[1]&&(u[1]+=N.applyScaleFactor(z[1],S.factorAlignment)),t.unapplyProjection(u,v));u[0]+=this.parameters.screenOffset[0];u[1]+=this.parameters.screenOffset[1];N.applyPrecomputedScaleFactor(E,S.factor,E);n=1*t.pixelRatio;let I;d.textureIsSignedDistanceField&&
(I=d.outlineSize*t.pixelRatio/2);ca(x,u[0],u[1],E,n,I,d,A)&&(F=b.ray,k.transformMat4(fa,v,ka.invert(xa,t.viewMatrix)),u[0]=x[0],u[1]=x[1],t.unprojectFromRenderScreen(u,v)&&(n=G.create(),k.copy(n,F.direction),H=1/k.length(n),k.scale(n,n,H),F=k.distance(F.origin,v)*H,g(F,n,-1,!0,1,fa)))}}};c.computeAttachmentOrigin=function(a,d){var e=a.vertexAttributes;if(!e)return!1;e=e.get(h.VertexAttribute.POSITION);a=a.indices.get(h.VertexAttribute.POSITION);return qa.computeAttachmentOriginPoints(e,a,d)};c.createBufferWriter=
function(){return new ya(this)};c._normalAndViewAngle=function(a,d,e,b){na.isMat4(d)&&(d=T.fromMat4(za,d));k.transformMat3(b.normal,a,d);k.transformMat4(b.normal,b.normal,e.viewInverseTransposeMatrix);b.cosAngle=k.dot(ha,Aa);return b};c._updateScaleInfo=function(a,d,e){const b=this.parameters;B.isSome(b.screenSizePerspective)?N.precomputeScaleFactor(e,d,b.screenSizePerspective,a.factor):(a.factor.scale=1,a.factor.factor=0,a.factor.minPixelSize=0,a.factor.paddingPixels=0);B.isSome(b.screenSizePerspectiveAlignment)?
N.precomputeScaleFactor(e,d,b.screenSizePerspectiveAlignment,a.factorAlignment):(a.factorAlignment.factor=a.factor.factor,a.factorAlignment.scale=a.factor.scale,a.factorAlignment.minPixelSize=a.factor.minPixelSize,a.factorAlignment.paddingPixels=a.factor.paddingPixels)};c.applyShaderOffsetsView=function(a,d,e,b,g,f,q){d=this._normalAndViewAngle(d,e,g,R);this._applyVerticalGroundOffsetView(a,d,g,q);this._applyVerticalOffsetTransformationView(q,d,g,f);this._applyPolygonOffsetView(q,d,b[3],g,q);this._applyCenterOffsetView(q,
b,q);return q};c.applyShaderOffsetsNDC=function(a,d,e,b,g){this._applyCenterOffsetNDC(a,d,e,b);B.isSome(g)&&k.copy(g,b);this._applyPolygonOffsetNDC(b,d,e,b);return b};c._applyPolygonOffsetView=function(a,d,e,b,g){var f=b.aboveGround?1:-1;e=Math.sign(e);0===e&&(e=f);f*=e;if(0>=this.parameters.shaderPolygonOffset)return k.copy(g,a);d=ja.clamp(Math.abs(d.cosAngle),.01,1);b=1-Math.sqrt(1-d*d)/d/b.viewport[2];0<f?k.scale(g,a,b):k.scale(g,a,1/b);return g};c._applyVerticalGroundOffsetView=function(a,d,e,
b){const g=k.length(a),f=e.aboveGround?1:-1;e=.5*e.computeRenderPixelSizeAtDist(g);d=k.scale(v,d.normal,f*e);k.add(b,a,d);return b};c._applyVerticalOffsetTransformationView=function(a,d,e,b){const g=this.parameters;if(!g.verticalOffset||!g.verticalOffset.screenLength){if(g.screenSizePerspective||g.screenSizePerspectiveAlignment){var f=k.length(a);this._updateScaleInfo(b,f,d.cosAngle)}else b.factor.scale=1,b.factorAlignment.scale=1;return a}f=k.length(a);const q=B.unwrapOr(g.screenSizePerspectiveAlignment,
g.screenSizePerspective);e=sa.verticalOffsetAtDistance(e,f,g.verticalOffset,d.cosAngle,q);this._updateScaleInfo(b,f,d.cosAngle);k.scale(d.normal,d.normal,e);return k.add(a,a,d.normal)};c._applyCenterOffsetView=function(a,d,e){const b="screen"!==this.parameters.centerOffsetUnits;e!==a&&k.copy(e,a);b&&(e[0]+=d[0],e[1]+=d[1],d[2]&&(k.normalize(L,e),k.add(e,e,k.scale(L,L,d[2]))));return e};c._applyCenterOffsetNDC=function(a,d,e,b){const g="screen"!==this.parameters.centerOffsetUnits;b!==a&&k.copy(b,a);
g||(b[0]+=d[0]/e.fullWidth*2,b[1]+=d[1]/e.fullHeight*2);return b};c._applyPolygonOffsetNDC=function(a,d,e,b){const g=this.parameters.shaderPolygonOffset;a!==b&&k.copy(b,a);g&&(a=e.aboveGround?1:-1,b[2]-=(a*Math.sign(d[3])||a)*g);return b};c.requiresSlot=function(a){if(a===J.RenderSlot.DRAPED_MATERIAL)return!0;const {drawInSecondSlot:d,occlusionTest:e}=this.parameters;return a===(d?J.RenderSlot.LABEL_MATERIAL:J.RenderSlot.HUD_MATERIAL)||e&&a===J.RenderSlot.OCCLUSION_PIXELS};c.createGLMaterial=function(a){return a.output===
C.ShaderOutput.Color||a.output===C.ShaderOutput.Alpha?new Ba(a):a.output===C.ShaderOutput.Highlight?new ia(a):null};c.calculateRelativeScreenBounds=function(a,d,e=oa.create()){va(this.parameters,a,d,e);e[2]=e[0]+a[0];e[3]=e[1]+a[1];return e};return p}(Z.Material),ia=function(r){function p(a){return r.call(this,{...a,...a.material.parameters})||this}M._inheritsLoose(p,r);var c=p.prototype;c.selectProgram=function(a){return this.ensureTechnique(ba.HUDMaterialTechnique,a)};c.beginSlot=function(a){this.updateTexture(this._material.parameters.textureId);
this._material.setParameters(this.textureBindParameters);return this.selectProgram(a)};return p}(Y.GLTextureMaterial),Ba=function(r){function p(){return r.apply(this,arguments)||this}M._inheritsLoose(p,r);var c=p.prototype;c._isOcclusionSlot=function(a){return a.slot===J.RenderSlot.OCCLUSION_PIXELS&&this._material.parameters.occlusionTest&&(this._output===C.ShaderOutput.Color||this._output===C.ShaderOutput.Alpha)};c.selectProgram=function(a){return this.ensureTechnique(ba.HUDMaterialTechnique,a,this._isOcclusionSlot(a)?
C.ShaderOutput.Occlusion:this._output)};return p}(ia);const S={factor:{scale:0,factor:0,minPixelSize:0,paddingPixels:0},factorAlignment:{scale:0,factor:0,minPixelSize:0,paddingPixels:0}},wa=W.create(),v=G.create(),L=G.create(),u=ma.create(),ha=G.create(),fa=G.create(),P=U.create(),za=U.create(),xa=V.create(),z=G.create(),R={normal:ha,cosAngle:0},ea=V.create(),E=[0,0],Aa=G.fromValues(0,0,1);let da=function(r){function p(){var c=r.apply(this,arguments)||this;c.renderOccluded=Z.RenderOccludedFlag.Occlude;
c.color=[1,1,1,1];c.texCoordScale=[1,1];c.polygonOffset=!1;c.anchorPosition=W.fromValues(.5,.5);c.screenOffset=[0,0];c.shaderPolygonOffset=1E-5;c.textureIsSignedDistanceField=!1;c.outlineColor=[1,1,1,1];c.outlineSize=0;c.vvSizeEnabled=!1;c.vvSizeMinSize=[1,1,1];c.vvSizeMaxSize=[100,100,100];c.vvSizeOffset=[0,0,0];c.vvSizeFactor=[1,1,1];c.vvColorEnabled=!1;c.vvColorValues=[0,0,0,0,0,0,0,0];c.vvColorColors=[1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0];c.hasSlicePlane=!1;c.pixelSnappingEnabled=
!0;c.occlusionTest=!0;c.binaryHighlightOcclusion=!0;c.debugDrawLabelBorder=!1;c.centerOffsetUnits="world";c.drawInSecondSlot=!1;c.depthEnabled=!0;c.isDraped=!1;return c}M._inheritsLoose(p,r);return p}(Y.GLTextureMaterialBindParameters);const Da=pa.newLayout().vec3f(h.VertexAttribute.POSITION).vec3f(h.VertexAttribute.NORMAL).vec2f(h.VertexAttribute.UV0).vec4u8(h.VertexAttribute.COLOR).vec2f(h.VertexAttribute.SIZE).vec4f(h.VertexAttribute.AUXPOS1).vec4f(h.VertexAttribute.AUXPOS2);let ya=function(){function r(c){this.material=
c;this.vertexBufferLayout=Da}var p=r.prototype;p.allocate=function(c){return this.vertexBufferLayout.createBuffer(c)};p.elementCount=function(c){return 6*c.indices.get(h.VertexAttribute.POSITION).length};p.write=function(c,a,d,e){K.writePosition(a.indices.get(h.VertexAttribute.POSITION),a.vertexAttributes.get(h.VertexAttribute.POSITION).data,c.transformation,d.position,e,6);K.writeNormal(a.indices.get(h.VertexAttribute.NORMAL),a.vertexAttributes.get(h.VertexAttribute.NORMAL).data,c.invTranspTransformation,
d.normal,e,6);var b=a.vertexAttributes.get(h.VertexAttribute.UV0).data;if(null==b||4>b.length){b=this.material.parameters;var g=c=0;var f=b.texCoordScale[0];b=b.texCoordScale[1]}else c=b[0],g=b[1],f=b[2],b=b[3];f=Math.min(1.99999,f+1);b=Math.min(1.99999,b+1);var q=a.indices.get(h.VertexAttribute.POSITION).length,m=d.uv0,l=e;for(var w=0;w<q;++w)m.set(l,0,c),m.set(l,1,g),l+=1,m.set(l,0,f),m.set(l,1,g),l+=1,m.set(l,0,f),m.set(l,1,b),l+=1,m.set(l,0,f),m.set(l,1,b),l+=1,m.set(l,0,c),m.set(l,1,b),l+=1,
m.set(l,0,c),m.set(l,1,g),l+=1;K.writeColor(a.indices.get(h.VertexAttribute.COLOR),a.vertexAttributes.get(h.VertexAttribute.COLOR).data,4,d.color,e,6);c=a.indices.get(h.VertexAttribute.SIZE);g=a.vertexAttributes.get(h.VertexAttribute.SIZE).data;f=c.length;b=d.size;q=e;for(m=0;m<f;++m){l=g[2*c[m]];w=g[2*c[m]+1];for(let x=0;6>x;++x)b.set(q,0,l),b.set(q,1,w),q+=1}a.indices.get(h.VertexAttribute.AUXPOS1)&&a.vertexAttributes.get(h.VertexAttribute.AUXPOS1)&&K.writeBufferVec4(a.indices.get(h.VertexAttribute.AUXPOS1),
a.vertexAttributes.get(h.VertexAttribute.AUXPOS1).data,d.auxpos1,e,6);a.indices.get(h.VertexAttribute.AUXPOS2)&&a.vertexAttributes.get(h.VertexAttribute.AUXPOS2)&&K.writeBufferVec4(a.indices.get(h.VertexAttribute.AUXPOS2),a.vertexAttributes.get(h.VertexAttribute.AUXPOS2).data,d.auxpos2,e,6)};return r}();O.HUDMaterial=Ca;O.Parameters=da;Object.defineProperties(O,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});