// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.24/esri/copyright.txt for details.
//>>built
define("require exports ../../../../chunks/_rollupPluginBabelHelpers ../core/shaderModules/interfaces ../core/shaderTechnique/ReloadableShaderModule ../core/shaderTechnique/ShaderTechnique ../lib/DefaultVertexAttributeLocations ../lib/Program ../../../../chunks/Laserlines.glsl ../../../webgl/enums ../../../webgl/renderState".split(" "),function(l,d,g,e,m,c,n,p,q,h,f){e=function(b){function a(){return b.apply(this,arguments)||this}g._inheritsLoose(a,b);return a}(e.NoParameters);c=function(b){function a(){return b.apply(this,
arguments)||this}g._inheritsLoose(a,b);var k=a.prototype;k.initializeProgram=function(r){const t=a.shader.get().build(this.configuration);return new p.Program(r.rctx,t,n.Default3D)};k.initializePipeline=function(){return f.makePipelineState({blending:f.simpleBlendingParams(h.BlendFactor.ONE,h.BlendFactor.ONE_MINUS_SRC_ALPHA),colorWrite:f.defaultColorWriteParams})};return a}(c.ShaderTechnique);c.shader=new m.ReloadableShaderModule(q.LaserlinesShader,()=>new Promise((b,a)=>l(["./Laserlines.glsl"],b,
a)));d.LaserlinePassParameters=e;d.LaserlineTechnique=c;Object.defineProperties(d,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});