// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.24/esri/copyright.txt for details.
//>>built
define("exports ../../../../chunks/_rollupPluginBabelHelpers ../../../../core/time ../../../../chunks/vec2f64 ../../../../chunks/vec4f64 ../core/shaderLibrary/ShaderOutputOptions ../lib/AnimationTimer ../lib/GLMaterials ../lib/Material ../lib/OrderIndependentTransparency ../lib/RenderSlot ./WaterGLMaterial ./WaterTechnique ./internal/DefaultBufferWriter ./internal/MaterialUtil".split(" "),function(h,k,q,r,t,d,u,v,l,w,e,m,x,n,y){let D=function(g){function f(a){a=g.call(this,a,new p)||this;a._techniqueConfig=
new x.WaterTechniqueConfiguration;a.animation=new u.AnimationTimer;return a}k._inheritsLoose(f,g);var b=f.prototype;b.getConfiguration=function(a,c){this._techniqueConfig.output=a;this._techniqueConfig.writeDepth=this.parameters.writeDepth;this._techniqueConfig.receiveShadows=this.parameters.receiveShadows;this._techniqueConfig.hasSlicePlane=this.parameters.hasSlicePlane;this._techniqueConfig.transparent=this.parameters.transparent;this._techniqueConfig.hasScreenSpaceReflections=this.parameters.hasScreenSpaceReflections;
this._techniqueConfig.hasCloudsReflections=this.parameters.hasCloudsReflections;this._techniqueConfig.isDraped=this.parameters.isDraped;this._techniqueConfig.transparencyPassType=c.transparencyPassType;this._techniqueConfig.enableOffset=c.camera.relativeElevation<w.OITPolygonOffsetLimit;this._techniqueConfig.hasMultipassTerrain=c.multipassTerrain.enabled;this._techniqueConfig.cullAboveGround=c.multipassTerrain.cullAboveGround;return this._techniqueConfig};b.update=function(a){this.animation.enabled=
35E3>Math.sqrt(this.parameters.waveTextureRepeat/this.parameters.waveStrength)*Math.min(a.camera.relativeElevation,a.camera.distance);a=this.animation.advance(a);this.setParameters({timeElapsed:q.secondsFromMilliseconds(this.animation.time)*this.parameters.animationSpeed},!1);return this.animation.enabled&&a};b.intersect=function(a,c,E,z,A,B,C){y.intersectTriangleGeometry(a,c,z,A,B,void 0,C)};b.requiresSlot=function(a,c){switch(v.outputFromPass(c)){case d.ShaderOutput.Normal:return a===e.RenderSlot.DRAPED_WATER;
case d.ShaderOutput.Color:if(this.parameters.isDraped)return a===e.RenderSlot.DRAPED_MATERIAL;break;case d.ShaderOutput.Highlight:return a===e.RenderSlot.OPAQUE_MATERIAL||a===e.RenderSlot.DRAPED_MATERIAL}c=e.RenderSlot.OPAQUE_MATERIAL;this.parameters.transparent&&(c=this.parameters.writeDepth?e.RenderSlot.TRANSPARENT_MATERIAL:e.RenderSlot.TRANSPARENT_DEPTH_WRITE_DISABLED_MATERIAL);return a===c};b.createGLMaterial=function(a){if(a.output===d.ShaderOutput.Color&&this.parameters.isDraped)return a.output=
d.ShaderOutput.Draped,new m.WaterGLMaterial(a);switch(a.output){case d.ShaderOutput.Color:case d.ShaderOutput.Normal:case d.ShaderOutput.Highlight:case d.ShaderOutput.Alpha:return new m.WaterGLMaterial(a)}return null};b.createBufferWriter=function(){return new n.DefaultBufferWriter(n.PositionUVLayout)};return f}(l.Material),p=function(g){function f(){var b=g.apply(this,arguments)||this;b.waveStrength=.06;b.waveTextureRepeat=32;b.waveDirection=r.fromValues(1,0);b.waveVelocity=.05;b.flowStrength=.015;
b.flowOffset=-.5;b.animationSpeed=.35;b.timeElapsed=0;b.color=t.fromValues(0,0,0,0);b.transparent=!0;b.writeDepth=!0;b.hasSlicePlane=!1;b.isDraped=!1;b.receiveShadows=!0;b.hasScreenSpaceReflections=!1;b.hasCloudsReflections=!1;return b}k._inheritsLoose(f,g);return f}(l.MaterialParameters);h.WaterMaterial=D;h.WaterMaterialParameters=p;Object.defineProperties(h,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});