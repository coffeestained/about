// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.24/esri/copyright.txt for details.
//>>built
define("require exports ../../../../chunks/_rollupPluginBabelHelpers ../../../../chunks/tslib.es6 ../core/shaderLibrary/ShaderOutputOptions ../core/shaderTechnique/ReloadableShaderModule ../core/shaderTechnique/ShaderTechnique ../core/shaderTechnique/ShaderTechniqueConfiguration ../lib/basicInterfaces ../lib/OrderIndependentTransparency ../lib/Program ../lib/VertexAttribute ../materials/DefaultTechniqueConfiguration ../../../../chunks/ShadedColorMaterial.glsl ../../../webgl/enums ../../../webgl/renderState".split(" "),
function(y,l,v,c,m,b,n,d,h,p,z,r,A,B,t,q){n=function(g){function e(){return g.apply(this,arguments)||this}v._inheritsLoose(e,g);var a=e.prototype;a.initializeProgram=function(k){const f=e.shader.get().build(this.configuration);return new z.Program(k.rctx,f,w)};a._setPipelineState=function(k){const f=this.configuration,u=k===h.TransparencyPassType.NONE,x=k===h.TransparencyPassType.FrontFace;return q.makePipelineState({blending:f.output!==m.ShaderOutput.Color&&f.output!==m.ShaderOutput.Alpha||!f.transparent?
null:u?p.blendingDefault:p.oitBlending(k),culling:q.cullingParams(f.cullFace),depthTest:{func:x?t.CompareFunction.LESS:f.shadingEnabled?t.CompareFunction.LEQUAL:t.CompareFunction.LESS},depthWrite:u?f.writeDepth&&q.defaultDepthWriteParams:p.oitDepthWrite(k),colorWrite:q.defaultColorWriteParams,polygonOffset:u||x?null:p.OITPolygonOffset})};a.initializePipeline=function(){return this._setPipelineState(this.configuration.transparencyPassType)};return e}(n.ShaderTechnique);n.shader=new b.ReloadableShaderModule(B.ShadedColorMaterialShader,
()=>new Promise((g,e)=>y(["./ShadedColorMaterial.glsl"],g,e)));b=function(g){function e(){var a=g.apply(this,arguments)||this;a.output=m.ShaderOutput.Color;a.cullFace=h.CullFaceOptions.None;a.transparencyPassType=h.TransparencyPassType.NONE;a.hasSlicePlane=!1;a.transparent=!1;a.writeDepth=!0;a.screenSizeEnabled=!0;a.shadingEnabled=!0;a.hasMultipassTerrain=!1;a.cullAboveGround=!1;return a}v._inheritsLoose(e,g);return e}(A.DefaultTechniqueConfiguration);c.__decorate([d.parameter({count:m.ShaderOutput.COUNT})],
b.prototype,"output",void 0);c.__decorate([d.parameter({count:h.CullFaceOptions.COUNT})],b.prototype,"cullFace",void 0);c.__decorate([d.parameter({count:h.TransparencyPassType.COUNT})],b.prototype,"transparencyPassType",void 0);c.__decorate([d.parameter()],b.prototype,"hasSlicePlane",void 0);c.__decorate([d.parameter()],b.prototype,"transparent",void 0);c.__decorate([d.parameter()],b.prototype,"writeDepth",void 0);c.__decorate([d.parameter()],b.prototype,"screenSizeEnabled",void 0);c.__decorate([d.parameter()],
b.prototype,"shadingEnabled",void 0);c.__decorate([d.parameter()],b.prototype,"hasMultipassTerrain",void 0);c.__decorate([d.parameter()],b.prototype,"cullAboveGround",void 0);const w=new Map([[r.VertexAttribute.POSITION,0],[r.VertexAttribute.NORMAL,1],[r.VertexAttribute.OFFSET,2]]);l.ShadedColorMaterialTechnique=n;l.ShadedColorMaterialTechniqueConfiguration=b;l.ShadedColorMaterialVertexAttrLocations=w;Object.defineProperties(l,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});