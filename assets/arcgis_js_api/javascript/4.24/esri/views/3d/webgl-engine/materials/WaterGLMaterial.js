// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.24/esri/copyright.txt for details.
//>>built
define("exports ../../../../chunks/_rollupPluginBabelHelpers ../../../../core/maybe ../core/shaderLibrary/ShaderOutputOptions ../lib/basicInterfaces ../lib/GLMaterial ./WaterTechnique".split(" "),function(f,h,k,l,m,c,n){c=function(g){function d(){return g.apply(this,arguments)||this}h._inheritsLoose(d,g);var b=d.prototype;b._updateShadowState=function(a){a.shadowMap.enabled!==this._material.parameters.receiveShadows&&this._material.setParameters({receiveShadows:a.shadowMap.enabled})};b._updateSSRState=
function(a){a.ssr.enabled!==this._material.parameters.hasScreenSpaceReflections&&this._material.setParameters({hasScreenSpaceReflections:a.ssr.enabled})};b._updateCloudsReflectionState=function(a){a=k.isSome(a.clouds.data);a!==this._material.parameters.hasCloudsReflections&&this._material.setParameters({hasCloudsReflections:a})};b.ensureResources=function(a){const e=this._techniqueRepository.constructionContext.waterTextureRepository;e.resourceState===m.ResourceState.NOT_LOADED&&e.loadTextures(a);
return e.resourceState};b.beginSlot=function(a){this._output===l.ShaderOutput.Color&&(this._updateShadowState(a),this._updateSSRState(a),this._updateCloudsReflectionState(a));return this.ensureTechnique(n.WaterTechnique,a)};return d}(c);f.WaterGLMaterial=c;Object.defineProperties(f,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});