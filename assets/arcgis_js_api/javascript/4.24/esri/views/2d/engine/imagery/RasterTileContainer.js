// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.24/esri/copyright.txt for details.
//>>built
define("exports ../../../../chunks/_rollupPluginBabelHelpers ../../../../geometry/support/aaBoundingRect ../../viewpointUtils ../brushes ./RasterTile ../webgl/enums ../webgl/TileContainer".split(" "),function(k,n,p,q,r,t,l,g){g=function(e){function h(){var a=e.apply(this,arguments)||this;a.isCustomTilingScheme=!1;return a}n._inheritsLoose(h,e);var f=h.prototype;f.createTile=function(a){const c=this._getTileBounds(a),[b,d]=this._tileInfoView.tileInfo.size;return new t.RasterTile(a,c[0],c[3],b,d)};
f.prepareRenderPasses=function(a){const c=a.registerRenderPass({name:"imagery (tile)",brushes:[r.brushes.raster],target:()=>this.children.map(b=>b.bitmap),drawPhase:l.WGLDrawPhase.MAP});return[...e.prototype.prepareRenderPasses.call(this,a),c]};f.doRender=function(a){this.visible&&a.drawPhase===l.WGLDrawPhase.MAP&&e.prototype.doRender.call(this,a)};f._getTileBounds=function(a){const c=this._tileInfoView.getTileBounds(p.create(),a);if(this.isCustomTilingScheme&&a.world){var {tileInfo:b}=this._tileInfoView,
d=q.getWorldWidth(b.spatialReference);if(d){const {resolution:m}=b.lodAt(a.level);b=(d=d/m%b.size[0])?(b.size[0]-d)*m:0;c[0]-=b*a.world;c[2]-=b*a.world}}return c};return h}(g);k.RasterTileContainer=g;Object.defineProperties(k,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});