// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.24/esri/copyright.txt for details.
//>>built
define("../../../../chunks/_rollupPluginBabelHelpers ../../../../core/maybe ./RasterBitmap ../webgl/VertexStream ../webgl/brushes/WGLBrush ../../../webgl/enums ../../../webgl/rasterUtils".split(" "),function(q,r,t,u,v,l,e){return function(p){function n(){var a=p.apply(this,arguments)||this;a._desc={lut:{vsPath:"raster/lut",fsPath:"raster/lut",attributes:new Map([["a_position",0],["a_texcoord",1]])},stretch:{vsPath:"raster/stretch",fsPath:"raster/stretch",attributes:new Map([["a_position",0],["a_texcoord",
1]])},hillshade:{vsPath:"raster/hillshade",fsPath:"raster/hillshade",attributes:new Map([["a_position",0],["a_texcoord",1]])}};a._rendererUniformInfos=new Map;return a}q._inheritsLoose(n,p);var g=n.prototype;g.dispose=function(){this._quad&&this._quad.dispose()};g.prepareState=function({context:a},c){a.setBlendingEnabled(!0);a.setBlendFunctionSeparate(l.BlendFactor.ONE,l.BlendFactor.ONE_MINUS_SRC_ALPHA,l.BlendFactor.ONE,l.BlendFactor.ONE_MINUS_SRC_ALPHA);a.setColorMask(!0,!0,!0,!0);a.setStencilWriteMask(0);
a.setStencilTestEnabled(!0);a.setStencilFunction(l.CompareFunction.EQUAL,c.stencilRef,255)};g.draw=function(a,c){var b;if(t.hasSource(c)&&!c.suspended){var {timeline:d,context:h,painter:k,requestRender:m}=a;d.begin(this.name);var f=!(null!=(b=h.capabilities.textureFloat)&&b.textureFloatLinear);c.updateTexture(a);a=this._getShaderVariations(c,f);a=k.materialManager.getProgram(this._desc[c.symbolizerParameters.type],a);this._drawWithProgram(h,a,c,m);d.end(this.name)}};g._drawWithProgram=function(a,
c,b,d,h=1,k=[0,0],m=!1){this._quad||(this._quad=new u(a,[0,0,1,0,0,1,1,1]));if(r.isSome(d)&&!c.isCompiled)d();else{var {symbolizerParameters:f,transformGrid:w,width:x,height:y,opacity:z}=b;d=f.type;a.useProgram(c);var A=this._getShaderVariations(b);d=this._getUniformInfos(d,a,c,A);var {names:B,textures:C}=b.getTextures();e.setTextures(a,c,B,C);a=e.getBasicGridUniforms(h,k);m=e.getCommonUniforms(w,[x,y],[b.source.width,b.source.height],z,m);e.setUniforms(c,d,{u_coordScale:b.coordScale,u_dvsMat3:b.transforms.dvs,
...a,...m});if(f.colormap){const {colormap:D,colormapOffset:E}=f;b=e.getColormapUniforms(D,E);e.setUniforms(c,d,b)}"stretch"===f.type?(b=e.getStretchUniforms(f),e.setUniforms(c,d,b)):"hillshade"===f.type&&(b=e.getShadedReliefUniforms(f),e.setUniforms(c,d,b));this._quad.draw()}};g._getUniformInfos=function(a,c,b,d){a=0<d.length?a+"-"+d.join("-"):a;if(this._rendererUniformInfos.has(a))return this._rendererUniformInfos.get(a);c=e.getUniformLocationInfos(c,b);this._rendererUniformInfos.set(a,c);return c};
g._getShaderVariations=function(a,c=!1){const b=[],{interpolation:d}=a,{type:h,colormap:k}=a.symbolizerParameters;"cubic"===d?b.push("bicubic"):"bilinear"===d&&"stretch"===h&&null!=k?(b.push("bilinear"),b.push("nnedge")):c&&"bilinear"===d&&b.push("bilinear");a.isRendereredSource?b.push("noop"):k&&b.push("applyColormap");a.transformGrid&&(b.push("applyProjection"),1===a.transformGrid.spacing[0]&&b.push("lookupProjection"));return b};return n}(v)});