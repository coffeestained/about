// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.24/esri/copyright.txt for details.
//>>built
define("exports ../../chunks/_rollupPluginBabelHelpers ../../core/Error ../../core/Logger ../../core/promiseUtils ./actions".split(" "),function(f,l,g,A,B,e){function v(a){const {selectedFeature:c,location:d,view:b}=a;return b?"3d"===b.type?c||d:a.get("selectedFeature.geometry")||d:null}function n(a){var c,d;return(null==a?void 0:a.isAggregate)&&"cluster"===(null==a?void 0:null==(c=a.sourceLayer)?void 0:null==(d=c.featureReduction)?void 0:d.type)}function w(a,c){if("3d"!==(null==c?void 0:c.type)||
!a||"esri.Graphic"!==a.declaredClass)return!0;if((c=c.getViewForGraphic(a))&&"whenGraphicBounds"in c){let d=!1;c.whenGraphicBounds(a,{useViewElevation:!0}).then(b=>{d=!b||!b.boundingBox||b.boundingBox[0]===b.boundingBox[3]&&b.boundingBox[1]===b.boundingBox[4]&&b.boundingBox[2]===b.boundingBox[5]}).catch(()=>{const b=new g("zoom-to:invalid-graphic","Could not zoom to the location of the graphic.",{graphic:a});m.error(b)});return d}return!0}function x(a){return p.apply(this,arguments)}function p(){p=
l._asyncToGenerator(function*(a){const {location:c,selectedFeature:d,view:b,zoomFactor:k}=a,h=v(a);if(!h)throw a=new g("zoom-to:invalid-target-or-view","Cannot zoom to location without a target and view.",{target:h,view:b}),m.error(a),a;const C=b.scale/k,q=a.get("selectedFeature.geometry")||c,y=q&&"point"===q.type&&w(d,b);e.zoomToFeature.active=!0;e.zoomToFeature.disabled=!0;try{yield a.view.goTo({target:h,scale:y?C:void 0})}finally{e.zoomToFeature.active=!1,e.zoomToFeature.disabled=!1,a.zoomToLocation=
null,y&&(a.location=q)}});return p.apply(this,arguments)}function z(a){return r.apply(this,arguments)}function r(){r=l._asyncToGenerator(function*(a){const {selectedFeature:c,view:d}=a;if("2d"!==(null==d?void 0:d.type))throw a=new g("zoomToCluster:invalid-view","View must be 2d MapView.",{view:d}),m.error(a),a;if(!n(c))throw a=new g("zoomToCluster:invalid-selectedFeature","Selected feature must represent an aggregate/cluster graphic.",{selectedFeature:c}),m.error(a),a;a=yield d.whenLayerView(c.sourceLayer);
const b=a.createQuery();b.aggregateIds=[c.getObjectId()];e.zoomToClusteredFeatures.active=!0;e.zoomToClusteredFeatures.disabled=!0;({extent:a}=yield a.queryExtent(b));yield d.goTo({target:a});e.zoomToClusteredFeatures.active=!1;e.zoomToClusteredFeatures.disabled=!1});return r.apply(this,arguments)}function t(){t=l._asyncToGenerator(function*(a){const {selectedFeature:c,view:d}=a;var b=yield d.whenLayerView(c.sourceLayer);const k=b.createQuery();k.aggregateIds=[c.getObjectId()];({extent:b}=yield b.queryExtent(k));
a.selectedClusterBoundaryFeature.geometry=b;d.graphics.add(a.selectedClusterBoundaryFeature)});return t.apply(this,arguments)}function u(){u=l._asyncToGenerator(function*(a){const {selectedFeature:c,view:d}=a;a=yield d.whenLayerView(c.sourceLayer);const b=a.createQuery();b.aggregateIds=[c.getObjectId()];e.browseClusteredFeatures.active=!0;e.browseClusteredFeatures.disabled=!0;({features:a}=yield a.queryFeatures(b));e.browseClusteredFeatures.active=!1;e.browseClusteredFeatures.disabled=!1;d.popup.open({features:[c].concat(a),
featureMenuOpen:!0})});return u.apply(this,arguments)}const m=A.getLogger("esri.widgets.Popup.PopupViewModel");f.browseAggregateFeatures=function(a){return u.apply(this,arguments)};f.displayClusterExtent=function(a){return t.apply(this,arguments)};f.getSelectedTarget=v;f.isClusterFeature=n;f.isZoomScreenSize=w;f.removeClusteredFeaturesForBrowsing=function(a){const c=a.features.filter(d=>n(d));c.length&&(a.features=c)};f.triggerAction=a=>{const {event:c,view:d}=a;({action:a}=c);var b=d&&d.popup;if(!a)return Promise.reject(new g("trigger-action:missing-arguments",
"Event has no action"));if(!b)return Promise.reject(new g("trigger-action:missing-arguments","view.popup is missing"));const {disabled:k,id:h}=a;if(!h)return Promise.reject(new g("trigger-action:invalid-action","action.id is missing"));if(k)return Promise.reject(new g("trigger-action:invalid-action","Action is disabled"));if(h===e.zoomToFeature.id)return x(b.viewModel).catch(B.throwIfNotAbortError);if(h===e.zoomToClusteredFeatures.id)return z(b.viewModel);if(h===e.browseClusteredFeatures.id)return b.featureMenuOpen=
!b.featureMenuOpen,b.viewModel.browseClusterEnabled=!b.viewModel.browseClusterEnabled,Promise.resolve();b.viewModel.browseClusterEnabled=!1;if(h===e.removeSelectedFeature.id){b.close();({selectedFeature:a}=b);if(!a)return Promise.reject(new g(`trigger-action:${e.removeSelectedFeature.id}`,"selectedFeature is required",{selectedFeature:a}));({sourceLayer:b}=a);b?b.remove(a):d.graphics.remove(a)}return Promise.resolve()};f.zoomToClusterExtent=z;f.zoomToLocation=x;Object.defineProperties(f,{__esModule:{value:!0},
[Symbol.toStringTag]:{value:"Module"}})});