// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.24/esri/copyright.txt for details.
//>>built
define("../../../chunks/_rollupPluginBabelHelpers ../../../chunks/tslib.es6 ../../../Basemap ../../../core/Collection ../../../core/Error ../../../core/Handles ../../../core/Loadable ../../../core/Logger ../../../core/Promise ../../../core/promiseUtils ../../../core/reactiveUtils ../../../core/accessorSupport/decorators/property ../../../core/arrayUtils ../../../core/has ../../../core/accessorSupport/ensureType ../../../core/accessorSupport/decorators/subclass ../../../portal/Portal ./LocalBasemapsSource".split(" "),
function(k,c,b,r,t,u,v,w,x,y,l,e,C,D,E,z,m,A){const n=r.ofType(b),B=w.getLogger("esri.widgets.BasemapGallery.support.PortalBasemapsSource");b=function(p){function h(a){a=p.call(this,a)||this;a._handles=new u;a.basemaps=new n;a.filterFunction=null;a.portal=m.getDefault();a.query=null;a.updateBasemapsCallback=null;return a}k._inheritsLoose(h,p);var f=h.prototype;f.initialize=function(){this._handles.add([l.watch(()=>{var a,d;return[this.filterFunction,this.loadStatus,null==(a=this.portal)?void 0:a.basemapGalleryGroupQuery,
null==(d=this.portal)?void 0:d.user,this.query,this.updateBasemapsCallback]},()=>this.refresh(),l.initial)])};f.destroy=function(){this._handles.destroy();this.portal=this.filterFunction=this._handles=null};f.load=function(a){this.addResolvingPromise(this.portal.load(a));this.notifyChange("state");return Promise.resolve(this)};f.refresh=function(){var a=k._asyncToGenerator(function*(){if("ready"===this.state){this._lastPortalBasemapFetchController&&(this._lastPortalBasemapFetchController.abort(),
this._lastPortalBasemapFetchController=null);var d=this.portal,q=new AbortController;this._lastPortalBasemapFetchController=q;this.notifyChange("state");try{const g=yield d.fetchBasemaps(this._toQueryString(this.query),q);this._updateBasemaps(g)}catch(g){if(y.isAbortError(g))throw g;B.warn(new t("basemap-source:fetch-basemaps-error","Could not fetch basemaps from portal.",{error:g}));this._updateBasemaps()}this._lastPortalBasemapFetchController=null;this.notifyChange("state")}});return function(){return a.apply(this,
arguments)}}();f._toQueryString=function(a){return a&&"string"!==typeof a?Object.keys(a).map(d=>`${d}:${a[d]}`).join(" AND "):a};f._updateBasemaps=function(a=[]){a=this.filterFunction?a.filter(this.filterFunction):a;a=this.updateBasemapsCallback?this.updateBasemapsCallback(a):a;this.basemaps.removeAll();this.basemaps.addMany(a)};k._createClass(h,[{key:"state",get:function(){return"not-loaded"===this.loadStatus?"not-loaded":"loading"===this.loadStatus||this._lastPortalBasemapFetchController?"loading":
"ready"}}]);return h}(v.LoadableMixin(x.EsriPromiseMixin(A)));c.__decorate([e.property({readOnly:!0,type:n})],b.prototype,"basemaps",void 0);c.__decorate([e.property()],b.prototype,"filterFunction",void 0);c.__decorate([e.property({type:m})],b.prototype,"portal",void 0);c.__decorate([e.property()],b.prototype,"query",void 0);c.__decorate([e.property({readOnly:!0})],b.prototype,"state",null);c.__decorate([e.property()],b.prototype,"updateBasemapsCallback",void 0);return b=c.__decorate([z.subclass("esri.widgets.BasemapGallery.support.PortalBasemapsSource")],
b)});