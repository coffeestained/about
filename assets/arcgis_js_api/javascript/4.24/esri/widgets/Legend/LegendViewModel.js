// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.24/esri/copyright.txt for details.
//>>built
define("../../chunks/_rollupPluginBabelHelpers ../../chunks/tslib.es6 ../../intl ../../core/Accessor ../../core/Collection ../../core/Handles ../../core/reactiveUtils ../../core/accessorSupport/decorators/property ../../core/arrayUtils ../../core/has ../../core/accessorSupport/ensureType ../../core/accessorSupport/decorators/subclass ./support/ActiveLayerInfo ../../intl/locale".split(" "),function(t,m,k,y,u,z,h,n,F,G,H,A,v,B){const w=u.ofType(v),C="esri.layers.BuildingSceneLayer esri.layers.CSVLayer esri.layers.FeatureLayer esri.layers.GeoJSONLayer esri.layers.GeoRSSLayer esri.layers.GroupLayer esri.layers.HeatmapLayer esri.layers.ImageryLayer esri.layers.ImageryTileLayer esri.layers.MapImageLayer esri.layers.OGCFeatureLayer esri.layers.PointCloudLayer esri.layers.StreamLayer esri.layers.SceneLayer esri.layers.TileLayer esri.layers.VoxelLayer esri.layers.WFSLayer esri.layers.WMSLayer esri.layers.WMTSLayer esri.layers.WCSLayer".split(" "),
D=["view.basemapView.baseLayerViews","view.groundView.layerViews","view.layerViews","view.basemapView.referenceLayerViews"];k=function(x){function r(a){a=x.call(this,a)||this;a._handles=new z;a._layerViewByLayerId={};a._layerInfosByLayerViewId={};a._activeLayerInfosByLayerViewId={};a._activeLayerInfosWithNoParent=new u;a.activeLayerInfos=new w;a.basemapLegendVisible=!1;a.groundLegendVisible=!1;a.hideLayersNotInCurrentView=!1;a.keepCacheOnDestroy=!1;a.respectLayerVisibility=!0;a.layerInfos=[];a.view=
null;return a}t._inheritsLoose(r,x);var e=r.prototype;e.initialize=function(){this._handles.add(h.watch(()=>this.view,()=>this._viewHandles(),h.initial),"view");this._handles.add(B.onLocaleChange(()=>this._refresh()))};e.destroy=function(){this._destroyViewActiveLayerInfos();this._handles.destroy();this.view=this._handles=null};e._viewHandles=function(){this._handles.remove("state");this.view&&this._handles.add(h.watch(()=>this.state,()=>this._stateHandles(),h.initial),"state")};e._stateHandles=function(){this._resetAll();
"ready"===this.state&&this._watchPropertiesAndAllLayerViews()};e._resetAll=function(){this._handles.remove(["all-layer-views","legend-properties"]);this._destroyViewActiveLayerInfos();this.activeLayerInfos.removeAll()};e._destroyViewActiveLayerInfos=function(){Object.keys(this._activeLayerInfosByLayerViewId).forEach(this._destroyViewActiveLayerInfo,this)};e._destroyViewActiveLayerInfo=function(a){this._handles.remove(a);const b=this._activeLayerInfosByLayerViewId[a];delete this._activeLayerInfosByLayerViewId[a];
b&&b.parent&&b.parent.children.remove(b)};e._watchPropertiesAndAllLayerViews=function(){const {allLayerViews:a}=this.view;a.length&&this._refresh();this._handles.add(a.on("change",b=>this._allLayerViewsChangeHandle(b)),"all-layer-views");this._handles.add(h.watch(()=>[this.layerInfos,this.basemapLegendVisible,this.groundLegendVisible],()=>this._propertiesChangeHandle()),"legend-properties")};e._allLayerViewsChangeHandle=function(a){a.removed.forEach(b=>this._destroyViewActiveLayerInfo(b.uid));this._refresh()};
e._propertiesChangeHandle=function(){this._destroyViewActiveLayerInfos();this._refresh()};e._refresh=function(){this._layerInfosByLayerViewId={};this.activeLayerInfos.removeAll();this._generateLayerViews().filter(this._filterLayerViewsByLayerInfos,this).filter(this._isLayerViewSupported,this).forEach(this._generateActiveLayerInfo,this);this._sortActiveLayerInfos(this.activeLayerInfos)};e._sortActiveLayerInfos=function(a){if(!(2>a.length)){var b=[];a.forEach(f=>{if(!f.parent){var d=f.layer.parent;
(d=(d=d&&"uid"in d&&this._layerViewByLayerId[d.uid])&&this._activeLayerInfosByLayerViewId[d.uid])&&a.includes(d)&&(b.push(f),f.parent=d,d.children.add(f),this._sortActiveLayerInfos(d.children))}});a.removeMany(b);var c={};this.view.allLayerViews.forEach((f,d)=>c[f.layer.uid]=d);a.sort((f,d)=>(c[d.layer.uid]||0)-(c[f.layer.uid]||0))}};e._generateLayerViews=function(){const a=[];D.filter(this._filterLayerViews,this).map(this.get,this).filter(b=>null!=b).forEach(this._collectLayerViews("layerViews",
a));return a};e._filterLayerViews=function(a){const b=!this.groundLegendVisible&&"view.groundView.layerViews"===a;return!(!this.basemapLegendVisible&&("view.basemapView.baseLayerViews"===a||"view.basemapView.referenceLayerViews"===a))&&!b};e._collectLayerViews=function(a,b){const c=f=>{f&&f.forEach(d=>{b.push(d);c(d[a])});return b};return c};e._filterLayerViewsByLayerInfos=function(a){const b=this.layerInfos;return b&&b.length?b.some(c=>this._hasLayerInfo(c,a)):!0};e._hasLayerInfo=function(a,b){const c=
this._isLayerUIDMatching(a.layer,b.layer.uid);c&&(this._layerInfosByLayerViewId[b.uid]=a);return c};e._isLayerUIDMatching=function(a,b){return a&&(a.uid===b||this._hasLayerUID(a.layers,b))};e._hasLayerUID=function(a,b){return a&&a.some(c=>this._isLayerUIDMatching(c,b))};e._isLayerViewSupported=function(a){return C.includes(a.layer.declaredClass)?(this._layerViewByLayerId[a.layer.uid]=a,!0):!1};e._generateActiveLayerInfo=function(a){this._isLayerActive(a)?this._buildActiveLayerInfo(a):(this._handles.remove(a.uid),
this._handles.add(h.watch(()=>{var b;return[a.legendEnabled,null==(b=a.layer)?void 0:b.legendEnabled]},()=>this._layerActiveHandle(a)),a.uid))};e._layerActiveHandle=function(a){this._isLayerActive(a)&&(this._handles.remove(a.uid),this._buildActiveLayerInfo(a))};e._isLayerActive=function(a){return this.respectLayerVisibility?a.legendEnabled&&a.get("layer.legendEnabled"):!0};e._buildActiveLayerInfo=function(a){var b;const c=a.layer,f=a.uid;var d=this._layerInfosByLayerViewId[f];let g=this._activeLayerInfosByLayerViewId[f];
g||(g=new v({layer:c,layerView:a,title:d&&void 0!==d.title&&d.layer.uid===c.uid?d.title:c.title,view:this.view,respectLayerVisibility:this.respectLayerVisibility,hideLayersNotInCurrentView:this.hideLayersNotInCurrentView,keepCacheOnDestroy:this.keepCacheOnDestroy,sublayerIds:d&&d.sublayerIds||[]}),this._activeLayerInfosByLayerViewId[f]=g);d=c.parent&&"uid"in c.parent&&this._layerViewByLayerId[null==(b=c.parent)?void 0:b.uid];g.parent=this._activeLayerInfosByLayerViewId[null==d?void 0:d.uid];if(!this._handles.has(f)){b=
h.watch(()=>c.title,q=>this._titleHandle(q,g));d=h.watch(()=>[c.opacity,"renderer"in c&&c.renderer,"pointSymbol"in c&&c.pointSymbol,"lineSymbol"in c&&c.lineSymbol,"polygonSymbol"in c&&c.polygonSymbol],()=>this._constructLegendElements(g));var p=h.when(()=>{var q;return!0===(null==(q=this.view)?void 0:q.stationary)},()=>this._scaleHandle(g),h.initial);const l=h.watch(()=>a._effectiveRenderer,()=>this._constructLegendElements(g)),E=h.watch(()=>"effect"in c&&c.effect,()=>this._constructLegendElements(g));
b=[b,d,p,l,E];this.respectLayerVisibility&&(d=h.watch(()=>a.legendEnabled,q=>this._legendEnabledHandle(q,g)),p=h.watch(()=>c.legendEnabled,q=>this._legendEnabledHandle(q,g)),b.push(d,p));this._handles.add(b,f)}g.isScaleDriven||this._constructLegendElements(g);this._addActiveLayerInfo(g)};e._titleHandle=function(a,b){b.title=a;this._constructLegendElements(b)};e._legendEnabledHandle=function(a,b){a?this._addActiveLayerInfo(b):this._removeActiveLayerInfo(b)};e._scaleHandle=function(a){(a.isScaleDriven||
a.hideLayersNotInCurrentView)&&this._constructLegendElements(a)};e._addActiveLayerInfo=function(a){const {layerView:b,layer:c}=a;if(this._isLayerActive(b)&&!this.activeLayerInfos.includes(a)){var f=a.parent;if(f)f.children.includes(a)||f.children.push(a),this._sortActiveLayerInfos(f.children);else{var d;f=null==(d=this.layerInfos)?void 0:d.some(g=>g.layer.uid===c.uid);c.parent&&"uid"in c.parent&&!f?this._activeLayerInfosWithNoParent.add(a):(this.activeLayerInfos.add(a),this._sortActiveLayerInfos(this.activeLayerInfos))}if(this._activeLayerInfosWithNoParent.length){const g=
[];this._activeLayerInfosWithNoParent.forEach(p=>{var l=p.layer.parent;l=l&&"uid"in l&&this._layerViewByLayerId[null==l?void 0:l.uid];if(l=this._activeLayerInfosByLayerViewId[null==l?void 0:l.uid])g.push(p),p.parent=l});g.length&&(this._activeLayerInfosWithNoParent.removeMany(g),g.forEach(p=>this._addActiveLayerInfo(p)))}}};e._removeActiveLayerInfo=function(a){const b=a.parent;b?b.children.remove(a):this.activeLayerInfos.remove(a)};e._constructLegendElements=function(a){var b;const c=a.layer;"featureCollections"in
c&&c.featureCollections?a.buildLegendElementsForFeatureCollections(c.featureCollections):"featureReduction"in c&&"binning"===(null==(b=c.featureReduction)?void 0:b.type)&&"renderer"in c.featureReduction?a.buildLegendElementsForRenderer(c.featureReduction.renderer):"renderer"in c&&c.renderer?a.buildLegendElementsForRenderer(c.renderer):"url"in c&&c.url?a.buildLegendElementsForTools():a.children.forEach(f=>this._constructLegendElements(f))};t._createClass(r,[{key:"state",get:function(){return this.get("view.ready")?
"ready":"disabled"}}]);return r}(y);m.__decorate([n.property({type:w})],k.prototype,"activeLayerInfos",void 0);m.__decorate([n.property()],k.prototype,"basemapLegendVisible",void 0);m.__decorate([n.property()],k.prototype,"groundLegendVisible",void 0);m.__decorate([n.property()],k.prototype,"hideLayersNotInCurrentView",void 0);m.__decorate([n.property()],k.prototype,"keepCacheOnDestroy",void 0);m.__decorate([n.property()],k.prototype,"respectLayerVisibility",void 0);m.__decorate([n.property()],k.prototype,
"layerInfos",void 0);m.__decorate([n.property({readOnly:!0})],k.prototype,"state",null);m.__decorate([n.property()],k.prototype,"view",void 0);return k=m.__decorate([A.subclass("esri.widgets.Legend.LegendViewModel")],k)});