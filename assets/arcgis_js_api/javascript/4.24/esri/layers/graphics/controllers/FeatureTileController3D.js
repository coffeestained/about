// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.24/esri/copyright.txt for details.
//>>built
define("exports ../../../chunks/_rollupPluginBabelHelpers ../../../chunks/tslib.es6 ../../../core/Accessor ../../../core/asyncUtils ../../../core/Collection ../../../core/has ../../../core/Error ../../../core/Handles ../../../core/lang ../../../core/Logger ../../../core/maybe ../../../core/Promise ../../../core/promiseUtils ../../../core/reactiveUtils ../../../core/accessorSupport/decorators/property ../../../core/accessorSupport/ensureType ../../../core/accessorSupport/decorators/subclass ../../../core/support/WatchUpdatingTracking ../../support/arcgisLayerUrl ../../../portal/support/geometryServiceUtils ../../../rest/support/StatisticDefinition ../../../views/3d/layers/support/FeatureTileFetcher3D ../../../views/3d/layers/support/FeatureTileFetcher3DDebugger ../../../views/3d/support/debugFlags".split(" "),
function(d,t,l,E,z,A,R,F,G,B,H,f,I,w,p,m,S,J,K,L,M,N,O,P,Q){function C(q,u){if(!u)return!1;for(const k of u)if(!q.has(k))return!0;return!1}const y=H.getLogger("esri.layers.graphics.controllers.FeatureTileController3D");d.FeatureTileController3D=function(q){function u(a){a=q.call(this,a)||this;a.type="feature-tile-3d";a.watchUpdatingTracking=new K.WatchUpdatingTracking;a.serviceDataExtent=null;a.serviceDataCount=d.FeatureTileController3DConstants.NO_SERVICE_DATA_COUNT;a.vertexLimitExceeded=!1;a.displayFeatureLimit=
null;a.suspended=!1;a.tileFetcher=null;a.handles=new G;a.fetchDataInfoPromise=null;a.fetchDataInfoAbortController=null;a.lifeCycleAbortController=new AbortController;return a}t._inheritsLoose(u,q);var k=u.prototype;k._approximateExtentSizeAtScale=function(a,b){const c=this.layerView.view,e=b.levels[0];return(e.tileSize[0]/(e.scale/a)+e.tileSize[1]/(e.scale/a))/2*Math.ceil((c.width/b.pixelSize+c.height/b.pixelSize)/2)};k.initialize=function(){this.watchUpdatingTracking.add(()=>this.vertexLimitInfo,
()=>this.watchUpdatingTracking.addPromise(this._updateVertexLimitExceeded(null,this.lifeCycleAbortController.signal)));this.watchUpdatingTracking.add(()=>this.mode,()=>this._modeChanged(),p.initial);this.addResolvingPromise(Promise.resolve().then(()=>this._verifyCapabilities()).then(()=>this.watchUpdatingTracking.addPromise(this._fetchServiceDataInfo())).then(()=>this._initializeTileFetcher()))};k._verifyCapabilities=function(){const a=this.layerView.layer;if(!a.get("capabilities.operations.supportsQuery")&&
"ogc-feature"!==a.type)throw new F("graphicscontroller:query-capability-required","Service requires query capabilities to be used as a feature layer",{layer:a});};k.destroy=function(){this._cancelFetchServiceDataInfo();this.tileFetcher=f.destroyMaybe(this.tileFetcher);this.handles=f.destroyMaybe(this.handles);this.tilesHandle=f.removeMaybe(this.tilesHandle);this.lifeCycleAbortController&&(this.lifeCycleAbortController.abort(),this.lifeCycleAbortController=null);this.watchUpdatingTracking.destroy();
this._set("watchUpdatingTracking",null)};k.suspend=function(){this.suspended||(this.suspended=!0,f.isSome(this.tileFetcher)&&this.tileFetcher.suspend())};k.resume=function(){this.suspended&&(this.suspended=!1,f.isSome(this.tileFetcher)&&this.tileFetcher.resume())};k.restart=function(){const a=()=>{f.isSome(this.tileFetcher)&&this.tileFetcher.restart()};this.watchUpdatingTracking.addPromise(this._fetchServiceDataInfo().then(a,a))};k.refetch=function(){const a=()=>{f.isSome(this.tileFetcher)&&this.tileFetcher.refetch()};
this.watchUpdatingTracking.addPromise(this._fetchServiceDataInfo().then(a,a))};k._initializeTileFetcher=function(){const a=this.layerView.view;if(a){var b=p.whenOnce(()=>{var c;return null==(c=a.featureTiles)?void 0:c.tilingScheme},this.lifeCycleAbortController.signal);this.watchUpdatingTracking.addPromise(b);b.then(()=>{const {layerView:c,tileDescriptors:e}=this,n=c.layer,h=new O.FeatureTileFetcher3D({context:this.context,filterExtent:this.extent,tileDescriptors:e,features:this.graphics});this.tileFetcher=
h;this.suspended?this.tileFetcher.suspend():this.tileFetcher.resume();const r=this.layerView.view.resourceController;r&&this.handles.add(p.watch(()=>r.memoryController.memoryFactor,g=>h.memoryFactor=g,p.syncAndInitial));const v="polygon"===this.context.geometryType?"polygonLodFactor":"polyline"===this.context.geometryType?"polylineLodFactor":null;v&&this.handles.add(p.watch(()=>{var g,x,D;return null==(g=this.layerView.view)?void 0:null==(x=g.qualitySettings)?void 0:null==(D=x.graphics3D)?void 0:
D[v]},g=>h.lodFactor=g||1,p.initial));"ogc-feature"!==n.type&&this.watchUpdatingTracking.add(()=>n.createQueryVersion,()=>this._dataFilterChanged());this.watchUpdatingTracking.add(()=>c.availableFields,(g,x)=>this._availableFieldsChanged(x,g));this.watchUpdatingTracking.add(()=>c.requiredFields,(g,x)=>this._requiredFieldsChanged(x,g));this.handles.add([n.on("apply-edits",g=>this._applyEdits(g)),p.watch(()=>this.extent,g=>h.filterExtent=g,p.sync),p.watch(()=>this.tileDescriptors,g=>h.tileDescriptors=
g,p.sync),p.watch(()=>this.maximumNumberOfFeatures,g=>{h.maximumNumberOfFeatures=g;h.useTileCount=this.serviceDataCount>g},p.syncAndInitial),p.watch(()=>this.serviceDataCount,g=>h.useTileCount=g>this.maximumNumberOfFeatures,p.syncAndInitial),p.watch(()=>Q.FEATURE_TILE_FETCH_SHOW_TILES,g=>{g&&h&&!h.debugger?(h.debugger=new P.FeatureTileFetcher3DDebugger(h,a.featureTiles.tilingScheme.toTileInfo(),a),h.debugger.update()):!g&&this.tileFetcher&&h.debugger&&(h.debugger.destroy(),h.debugger=null)},p.syncAndInitial)]);
this.supportsExceedsLimitQuery||this.watchUpdatingTracking.add(()=>this.maxTotalSnapshotVertices,()=>this.watchUpdatingTracking.addPromise(this._updateVertexLimitExceeded(null,this.lifeCycleAbortController.signal)))}).catch(()=>{})}};k._modeChanged=function(){switch(this.mode){case "tiles":this.tilesHandle||(this.tilesHandle=this.layerView.view.featureTiles.addClient());break;default:y.warn("Unhandled feature layer mode "+this.mode);case "snapshot":f.isSome(this.tilesHandle)&&(this.tilesHandle.remove(),
this.tilesHandle=null)}};k._dataFilterChanged=function(){this._set("maxTotalSnapshotVertices",0);this.notifyChange("maxTotalSnapshotVertices");this.refetch()};k._applyEdits=function(a){f.isNone(this.tileFetcher)||this.tileFetcher.applyEdits(a).then(b=>{b&&(b.deletedFeatures.length||b.updatedFeatures.length||b.addedFeatures.length)&&this.watchUpdatingTracking.addPromise(this._updateServiceDataExtent(this.lifeCycleAbortController.signal))}).catch(b=>{if(!w.isAbortError(b))throw b;})};k._availableFieldsChanged=
function(a,b){f.isSome(this.tileFetcher)&&C(this.tileFetcher.availableFields,b)&&this.refetch()};k._requiredFieldsChanged=function(a,b){f.isSome(this.tileFetcher)&&C(this.tileFetcher.availableFields,b)&&this.restart()};k._createVertexLimitExceededQuery=function(a){const b=this.layerView.layer,c=b.createQuery();c.outStatistics=[new N({statisticType:"exceedslimit",maxVertexCount:a,outStatisticFieldName:"exceedslimit",maxPointCount:1E8,maxRecordCount:1E8})];b.capabilities.query.supportsCacheHint&&(c.cacheHint=
!0);return c};k._createDataInfoQuery=function(){const a=this.layerView.layer,b=a.createQuery();b.outSpatialReference=this.layerView.view.spatialReference;a.capabilities.query.supportsCacheHint&&(b.cacheHint=!0);return b};k._fullExtentIsAccurate=function(){const a=this.layerView.layer;if(a.definitionExpression)return!1;switch(a.type){case "feature":return L.isHostedAgolService(a.url);case "csv":case "geojson":case "ogc-feature":case "wfs":return!0}};k._updateServiceDataExtent=function(){var a=t._asyncToGenerator(function*(b){try{yield this._tryUpdateServiceDataExtent(b)}catch(c){w.isAbortError(c)||
this._set("serviceDataExtent",B.clone(this.layerView.fullExtentInLocalViewSpatialReference))}});return function(b){return a.apply(this,arguments)}}();k._tryUpdateServiceDataExtent=function(){var a=t._asyncToGenerator(function*(b){var c=this.layerView;const e=c.layer,n=e.capabilities.query.supportsExtent,h=B.clone(c.fullExtentInLocalViewSpatialReference),r=e.fullExtent,v=this._fullExtentIsAccurate(),g=this.serviceDataCount;n&&g<=d.FeatureTileController3DConstants.MAX_FEATURE_COUNT_FOR_EXTENT&&(!h||
!v)&&"queryExtent"in e?(c=this._createDataInfoQuery(),b=yield e.queryExtent(c,{timeout:d.FeatureTileController3DConstants.QUERY_EXTENT_TIMEOUT,signal:b}),this._set("serviceDataExtent",b.extent)):h?this._set("serviceDataExtent",h):f.isSome(r)?(b=yield M.projectGeometry(r,c.view.spatialReference,"portalItem"in e?e.portalItem:null,b),this._set("serviceDataExtent",b)):this._set("serviceDataExtent",null)});return function(b){return a.apply(this,arguments)}}();k._updateServiceDataCount=function(){var a=
t._asyncToGenerator(function*(b){const c=this.layerView.layer;if("queryFeatureCount"in c)if(b=yield z.result(c.queryFeatureCount(this._createDataInfoQuery(),{timeout:d.FeatureTileController3DConstants.QUERY_STATISTICS_TIMEOUT,signal:b})),!0===b.ok)this._set("serviceDataCount",b.value);else{if(w.isAbortError(b.error))throw b.error;this._set("serviceDataCount",d.FeatureTileController3DConstants.NO_SERVICE_DATA_COUNT)}else this._set("serviceDataCount",d.FeatureTileController3DConstants.NO_SERVICE_DATA_COUNT)});
return function(b){return a.apply(this,arguments)}}();k._updateVertexLimitExceeded=function(){var a=t._asyncToGenerator(function*(b,c){var e=this.vertexLimitInfo;if(f.isNone(e))this._set("vertexLimitExceeded",!1);else{var n=1<this.minimumNumberOfVerticesForGeometry;if(0>=e.primitivesPerFeature||n){var {primitivesPerFeature:h,primitivesPerCoordinate:r,maximumTotalNumberOfPrimitives:v}=e;0!==h&&f.isSome(b)&&(yield b);e=this.serviceDataCount;var g=e!==d.FeatureTileController3DConstants.NO_SERVICE_DATA_COUNT;
b=g?Math.ceil((v-e*h)/(r||1)):Math.ceil(v/(r||1));n&&(b=Math.min(b,5E6));if(g&&this.minimumNumberOfVerticesForGeometry*e>b)this._set("vertexLimitExceeded",!0);else if(this.supportsExceedsLimitQuery)if(c=yield z.result(this.layerView.layer.queryFeatures(this._createVertexLimitExceededQuery(b),{timeout:d.FeatureTileController3DConstants.QUERY_STATISTICS_TIMEOUT,signal:c})),!1===c.ok){if(w.isAbortError(c.error))throw c.error;this._set("vertexLimitExceeded",!1)}else(c=c.value.features[0])&&c.attributes?
this._set("vertexLimitExceeded",!!c.attributes.exceedslimit):this._set("vertexLimitExceeded",!1);else this._set("vertexLimitExceeded",this.maxTotalSnapshotVertices>b)}else this._set("vertexLimitExceeded",!1)}});return function(b,c){return a.apply(this,arguments)}}();k._fetchServiceDataInfo=function(){var a=t._asyncToGenerator(function*(){this._cancelFetchServiceDataInfo();let b=new AbortController;const c=b.signal;var e=this._updateServiceDataCount(c);e=w.eachAlways([e,this._updateVertexLimitExceeded(e,
c)]);const n=e.then(()=>this._updateServiceDataExtent(c)).catch(h=>{w.isAbortError(h)||y.error("#fetchServiceDataInfo()",h)}).then(()=>{n===this.fetchDataInfoPromise&&(this.fetchDataInfoAbortController=this.fetchDataInfoPromise=null);b=null});b&&(this.fetchDataInfoPromise=n);this.fetchDataInfoAbortController=b;return e.then(()=>{},()=>{})});return function(){return a.apply(this,arguments)}}();k._cancelFetchServiceDataInfo=function(){const a=this.fetchDataInfoAbortController;a&&(this.fetchDataInfoPromise=
this.fetchDataInfoAbortController=null,a.abort())};t._createClass(u,[{key:"extent",set:function(a){if(a&&!a.spatialReference.equals(this.layerView.view.spatialReference))y.error("#extent\x3d","extent needs to be in the same spatial reference as the view");else{var b=this._get("extent");b===a||b&&a&&b.equals(a)||(a=a?a.clone():null,this._set("extent",a))}}},{key:"updating",get:function(){return!!(f.isSome(this.tileFetcher)&&this.tileFetcher.updating||null!=this.fetchDataInfoPromise||"tiles"===this.mode&&
this.layerView.view.featureTiles&&this.layerView.view.featureTiles.updating||this.watchUpdatingTracking&&this.watchUpdatingTracking.updating)}},{key:"updatingTotal",get:function(){return this.updating&&f.isSome(this.tileFetcher)?this.tileFetcher.updatingTotal:0}},{key:"updatingRemaining",get:function(){return this.updating&&f.isSome(this.tileFetcher)?this.tileFetcher.updatingRemaining:0}},{key:"expectedFeatureDiff",get:function(){return this.updating&&f.isSome(this.tileFetcher)?this.tileFetcher.expectedFeatureDiff:
0}},{key:"memoryForUnusedFeatures",get:function(){return f.isSome(this.tileFetcher)?this.tileFetcher.memoryForUnusedFeatures:0}},{key:"maximumNumberOfFeaturesExceeded",get:function(){return!(!f.isSome(this.tileFetcher)||!this.tileFetcher.maximumNumberOfFeaturesExceeded)}},{key:"maximumNumberOfFeatures",get:function(){return f.isSome(this.displayFeatureLimit)?this.displayFeatureLimit.maximumNumberOfFeatures:0},set:function(a){a!==this.maximumNumberOfFeatures&&(null==a?this._clearOverride("maximumNumberOfFeatures"):
this._override("maximumNumberOfFeatures",a))}},{key:"hasMaximumNumberOfFeaturesOverride",get:function(){return this._isOverridden("maximumNumberOfFeatures")}},{key:"mode",get:function(){var a,b,c=this.layerView.layer;if("feature"===c.type&&f.isSome(c.infoFor3D))return"snapshot";if(!1===(null==(a=this.layerView.view.qualitySettings)?void 0:null==(b=a.graphics3D)?void 0:b.snapshotAvailable)||this.serviceDataCount===d.FeatureTileController3DConstants.NO_SERVICE_DATA_COUNT||this.vertexLimitExceeded)return"tiles";
a=(a=(a=this.layerView.view)&&a.featureTiles)&&a.tilingScheme;return c&&c.minScale&&this.serviceDataExtent&&a&&(c=this._approximateExtentSizeAtScale(c.minScale,a),(this.serviceDataExtent.width/c+this.serviceDataExtent.height/c)/2>d.FeatureTileController3DConstants.MAX_SNAPSHOT_MIN_SCALE_FACTOR)?"tiles":!this.maximumNumberOfFeatures||this.serviceDataCount<=this.maximumNumberOfFeatures?"snapshot":"tiles"}},{key:"maxTotalSnapshotVertices",get:function(){const a=this._get("maxTotalSnapshotVertices")||
0,b="snapshot"===this.mode&&f.isSome(this.tileFetcher)&&this.tileFetcher.totalVertices||0;return Math.max(a,b)}},{key:"tileDescriptors",get:function(){return"snapshot"===this.mode?new A([{id:"dummy-tile-full-extent",lij:[0,0,0]}]):this.layerView.view.featureTiles?this.layerView.view.featureTiles.tiles:new A}},{key:"test",get:function(){return{fetchDataInfoPromise:this.fetchDataInfoPromise,tileFetcher:this.tileFetcher}}},{key:"vertexLimitInfo",get:function(){if(f.isNone(this.displayFeatureLimit)||
f.isNone(this.displayFeatureLimit.averageSymbolComplexity))return null;const {averageSymbolComplexity:a,maximumTotalNumberOfPrimitives:b}=this.displayFeatureLimit,{primitivesPerCoordinate:c,primitivesPerFeature:e}=a,n=this._get("vertexLimitInfo");return f.isNone(n)||n.maximumTotalNumberOfPrimitives!==b||n.primitivesPerCoordinate!==c||n.primitivesPerFeature!==e?{primitivesPerCoordinate:c,primitivesPerFeature:e,maximumTotalNumberOfPrimitives:b}:n}},{key:"supportsExceedsLimitQuery",get:function(){const a=
this.layerView.layer;return a.capabilities&&a.capabilities.operations&&a.capabilities.operations.supportsExceedsLimitStatistics}},{key:"minimumNumberOfVerticesForGeometry",get:function(){switch(this.layerView.layer.geometryType){case "point":return 1;case "multipoint":return 1;case "polygon":return 4;case "polyline":return 2;case "multipatch":case "mesh":return 3;default:return 0}}},{key:"debug",get:function(){return{storedFeatures:f.isSome(this.tileFetcher)?this.tileFetcher.storedFeatures:0,totalFeatures:f.isSome(this.tileFetcher)?
this.tileFetcher.totalFeatures:0,totalVertices:f.isSome(this.tileFetcher)?this.tileFetcher.totalVertices:0}}}]);return u}(I.EsriPromiseMixin(E));l.__decorate([m.property({readOnly:!0})],d.FeatureTileController3D.prototype,"type",void 0);l.__decorate([m.property({constructOnly:!0})],d.FeatureTileController3D.prototype,"graphics",void 0);l.__decorate([m.property({constructOnly:!0})],d.FeatureTileController3D.prototype,"layerView",void 0);l.__decorate([m.property({constructOnly:!0})],d.FeatureTileController3D.prototype,
"context",void 0);l.__decorate([m.property()],d.FeatureTileController3D.prototype,"extent",null);l.__decorate([m.property()],d.FeatureTileController3D.prototype,"updating",null);l.__decorate([m.property({readOnly:!0})],d.FeatureTileController3D.prototype,"watchUpdatingTracking",void 0);l.__decorate([m.property()],d.FeatureTileController3D.prototype,"updatingTotal",null);l.__decorate([m.property()],d.FeatureTileController3D.prototype,"updatingRemaining",null);l.__decorate([m.property()],d.FeatureTileController3D.prototype,
"expectedFeatureDiff",null);l.__decorate([m.property()],d.FeatureTileController3D.prototype,"memoryForUnusedFeatures",null);l.__decorate([m.property()],d.FeatureTileController3D.prototype,"maximumNumberOfFeaturesExceeded",null);l.__decorate([m.property({readOnly:!0})],d.FeatureTileController3D.prototype,"serviceDataExtent",void 0);l.__decorate([m.property({readOnly:!0})],d.FeatureTileController3D.prototype,"serviceDataCount",void 0);l.__decorate([m.property({readOnly:!0})],d.FeatureTileController3D.prototype,
"vertexLimitExceeded",void 0);l.__decorate([m.property()],d.FeatureTileController3D.prototype,"displayFeatureLimit",void 0);l.__decorate([m.property({type:Number})],d.FeatureTileController3D.prototype,"maximumNumberOfFeatures",null);l.__decorate([m.property({readOnly:!0})],d.FeatureTileController3D.prototype,"mode",null);l.__decorate([m.property({readOnly:!0})],d.FeatureTileController3D.prototype,"maxTotalSnapshotVertices",null);l.__decorate([m.property({readOnly:!0,dependsOn:["mode"]})],d.FeatureTileController3D.prototype,
"tileDescriptors",null);l.__decorate([m.property()],d.FeatureTileController3D.prototype,"tileFetcher",void 0);l.__decorate([m.property()],d.FeatureTileController3D.prototype,"fetchDataInfoPromise",void 0);l.__decorate([m.property({readOnly:!0})],d.FeatureTileController3D.prototype,"vertexLimitInfo",null);d.FeatureTileController3D=l.__decorate([J.subclass("esri.layers.graphics.controllers.FeatureTileController3D")],d.FeatureTileController3D);d.FeatureTileController3DConstants=void 0;(function(q){q.NO_SERVICE_DATA_COUNT=
Infinity;q.MAX_SNAPSHOT_MIN_SCALE_FACTOR=5;q.reset=function(){q.MAX_FEATURE_COUNT_FOR_EXTENT=1E4;q.QUERY_STATISTICS_TIMEOUT=12E3;q.QUERY_EXTENT_TIMEOUT=1E4}})(d.FeatureTileController3DConstants||(d.FeatureTileController3DConstants={}));d.FeatureTileController3DConstants.reset();Object.defineProperties(d,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});