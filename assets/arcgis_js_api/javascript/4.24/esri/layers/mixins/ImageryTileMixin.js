// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.24/esri/copyright.txt for details.
//>>built
define("exports ../../chunks/_rollupPluginBabelHelpers ../../chunks/tslib.es6 ../../geometry ../../rasterRenderers ../../request ../../core/Logger ../../core/maybe ../../core/accessorSupport/decorators/aliasOf ../../core/arrayUtils ../../core/has ../../core/accessorSupport/ensureType ../../core/accessorSupport/decorators/property ../../core/accessorSupport/decorators/subclass ../../geometry/support/spatialReferenceUtils ../support/arcgisLayerUrl ../support/commonProperties ../support/DimensionalDefinition ../support/RasterJobHandler ../support/TileInfo ../support/rasterDatasets/multidimensionalUtils ../support/rasterFunctions/vectorFieldUtils ../../renderers/support/rasterRendererHelper ../../renderers/support/RasterSymbolizer ../../views/2d/engine/flow/dataUtils ../../geometry/Extent ../../geometry/SpatialReference".split(" "),
function(y,r,l,W,I,J,K,g,v,X,Y,Z,m,L,M,N,O,P,Q,z,x,R,u,S,T,U,V){const A=K.getLogger("esri.layers.mixins.ImageryTileMixin");y.ImageryTileMixin=h=>{h=function(B){function w(){var a=B.apply(this,arguments)||this;a._rasterJobHandler={instance:null,refCount:0,connectionPromise:null};a.bandIds=null;a.copyright=null;a.fullExtent=null;a.interpolation="nearest";a.multidimensionalDefinition=null;a.raster=null;a.rasterInfo=null;a.sourceJSON=null;a.spatialReference=null;a.tileInfo=null;a.symbolizer=null;return a}
r._inheritsLoose(w,B);var k=w.prototype;k.convertVectorFieldData=function(){var a=r._asyncToGenerator(function*(b,c){if(g.isNone(b))return null;const e=this._rasterJobHandler.instance,d=this.rasterInfo.dataType;return e?e.convertVectorFieldData({pixelBlock:b,dataType:d},c):R.convertVectorFieldData(b,d)});return function(b,c){return a.apply(this,arguments)}}();k.createFlowMesh=function(){var a=r._asyncToGenerator(function*(b,c){const e=this._rasterJobHandler.instance;return e?e.createFlowMesh(b,c):
T.createFlowMesh(b.meshType,b.simulationSettings,b.flowData,g.isSome(c.signal)?c.signal:(new AbortController).signal)});return function(b,c){return a.apply(this,arguments)}}();k.normalizeRasterFetchOptions=function(a){var {multidimensionalInfo:b}=this.rasterInfo;if(g.isNone(b))return a;let c=a.multidimensionalDefinition||this.multidimensionalDefinition;if(g.isNone(c)||!c.length)c=x.getDefaultMultidimensionalDefinition(this.raster.rasterInfo);var e=a.timeExtent||this.timeExtent;if(g.isSome(c)&&g.isSome(e)&&
(g.isSome(e.start)||g.isSome(e.end))){var d,t;c=c.map(f=>f.clone());b=null==(d=b.variables.find(({name:f})=>f===c[0].variableName))?void 0:null==(t=d.dimensions)?void 0:t.find(({name:f})=>"StdTime"===f);d=c.find(({dimensionName:f})=>"StdTime"===f);if(!b||!d)return{...a,multidimensionalDefinition:null};const {start:C,end:D}=e;e=g.isNone(C)?null:C.getTime();t=g.isNone(D)?null:D.getTime();const n=null!=e?e:t,p=null!=t?t:e;if(g.isSome(b.values))b=b.values.filter(f=>{if(Array.isArray(f)){if(n===p)return f[0]<=
n&&f[1]>=n;const q=f[0]>=n&&f[1]<=p||f[0]<n&&f[1]>p;return f[0]<=n&&f[1]>n||f[0]<p&&f[1]>=p||q}return n===p?f===n:f>=n&&f<=p}),b.length?(b=b.sort((f,q)=>{var E,F;if(n===p){var G,H;return(null!=(G=f[0])?G:f)-(null!=(H=q[0])?H:q)}f=Math.abs((null!=(E=f[1])?E:f)-p);q=Math.abs((null!=(F=q[1])?F:q)-p);return f-q})[0],d.values=[b]):c=null;else if(b.hasRegularIntervals&&b.extent){const [f,q]=b.extent;n>q||p<f?c=null:d.values=n===p?[n]:[Math.max(f,n),Math.min(q,p)]}}return{...a,multidimensionalDefinition:c}};
k.updateRenderer=function(){var a=r._asyncToGenerator(function*(){if(this.loaded&&JSON.stringify(this._cachedRendererJson)!==JSON.stringify(this.renderer)){var b=this._rasterJobHandler.instance;b&&(this.symbolizer.rendererJSON=u.normalizeRendererJSON(this.renderer.toJSON()),this.symbolizer.bind(),yield b.updateSymbolizer(this.symbolizer),this._cachedRendererJson=this.renderer.toJSON())}});return function(){return a.apply(this,arguments)}}();k.applyRenderer=function(){var a=r._asyncToGenerator(function*(b,
c){var e=b&&b.pixelBlock;if(!(g.isSome(e)&&e.pixels&&0<e.pixels.length))return null;yield this.updateRenderer();e=this._rasterJobHandler.instance;const {bandIds:d}=this;return e?yield e.symbolize({...b,simpleStretchParams:c,bandIds:d}):this.symbolizer.symbolize({...b,simpleStretchParams:c,bandIds:d})});return function(b,c){return a.apply(this,arguments)}}();k.getTileUrl=function(a,b,c){return"RasterTileServer"===this.raster.datasetFormat?`${this.url}/tile/${a}/${b}/${c}`:""};k.getCompatibleTileInfo=
function(a,b,c=!1){if(!this.loaded||g.isNone(b))return null;if(c&&a.equals(this.spatialReference))return this.tileInfo;c=M.getInfo(a);return z.create({size:256,spatialReference:a,origin:c?{x:c.origin[0],y:c.origin[1]}:{x:b.xmin,y:b.ymax}})};k.getCompatibleFullExtent=function(a){return this.loaded?this._compatibleFullExtent&&this._compatibleFullExtent.spatialReference.equals(a)?this._compatibleFullExtent:this._compatibleFullExtent=this.raster.computeExtent(a):null};k.fetchTile=function(){var a=r._asyncToGenerator(function*(b,
c,e,d={}){if(d.requestAsImageElement)return b=this.getTileUrl(b,c,e),J(b,{responseType:"image",query:{...this.refreshParameters,...this.raster.ioConfig.customFetchParameters},signal:d.signal}).then(t=>t.data);if(g.isSome(this.rasterInfo.multidimensionalInfo)&&(d=this.normalizeRasterFetchOptions(d),g.isNone(d.multidimensionalDefinition)))return{extent:this.raster.getTileExtentFromTileInfo(b,c,e,d.tileInfo||this.rasterInfo.storageInfo.tileInfo),pixelBlock:null};yield this._initJobHandler();"raster-shaded-relief"===
this.renderer.type&&(d={...d,buffer:{cols:1,rows:1}});return this.raster.fetchTile(b,c,e,d)});return function(b,c,e){return a.apply(this,arguments)}}();k.fetchPixels=function(){var a=r._asyncToGenerator(function*(b,c,e,d={}){if(g.isSome(this.rasterInfo.multidimensionalInfo)&&(d=this.normalizeRasterFetchOptions(d),g.isNone(d.multidimensionalDefinition)))return{extent:b,pixelBlock:null};yield this._initJobHandler();return this.raster.fetchPixels(b,c,e,d)});return function(b,c,e){return a.apply(this,
arguments)}}();k.identify=function(){var a=r._asyncToGenerator(function*(b,c={}){return!g.isSome(this.rasterInfo.multidimensionalInfo)||this.rasterInfo.hasMultidimensionalTranspose&&(x.isMultiSliceOrRangeDefinition(c.multidimensionalDefinition)||c.transposedVariableName||c.timeExtent)||(c=this.normalizeRasterFetchOptions(c),!g.isNone(c.multidimensionalDefinition))?this.raster.identify(b,c):{location:b,value:null}});return function(b){return a.apply(this,arguments)}}();k.increaseRasterJobHandlerUsage=
function(){this._rasterJobHandler.refCount++};k.decreaseRasterJobHandlerUsage=function(){this._rasterJobHandler.refCount--;0>=this._rasterJobHandler.refCount&&this._shutdownJobHandler()};k.hasStandardTime=function(){var a;const b=this.rasterInfo.multidimensionalInfo;if(g.isNone(b)||"standard-time"!==this.rasterInfo.dataType)return!1;const c=null==(a=this.multidimensionalDefinition[0])?void 0:a.variableName;return b.variables.some(e=>e.name===c&&e.dimensions.some(d=>"StdTime"===d.name))};k.getStandardTimeValue=
function(a){return(new Date(864E5*(a-25569))).toString()};k._configDefaultSettings=function(){this._configDefaultInterpolation();this.multidimensionalDefinition||(this.multidimensionalDefinition=x.getDefaultMultidimensionalDefinition(this.raster.rasterInfo));this._configDefaultRenderer()};k._initJobHandler=function(){if(null!=this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;const a=new Q;this._rasterJobHandler.connectionPromise=a.initialize().then(()=>{this._rasterJobHandler.instance=
a;this.raster.rasterJobHandler=a;this.renderer&&this.updateRenderer()}).catch(()=>null);return this._rasterJobHandler.connectionPromise};k._shutdownJobHandler=function(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy();this._rasterJobHandler.instance=null;this._rasterJobHandler.connectionPromise=null;this._rasterJobHandler.refCount=0;this._cachedRendererJson=this.raster.rasterJobHandler=null};k._configDefaultInterpolation=function(){if(null==this.interpolation){var a;const b=
u.getDefaultInterpolation(this.rasterInfo,this.raster.tileType,null==(a=this.sourceJSON)?void 0:a.defaultResamplingMethod);this._set("interpolation",b)}};k._configDefaultRenderer=function(){var a=this.raster.rasterInfo;this.bandIds||(this.bandIds=u.getDefaultBandCombination(a));if(!this.renderer){var b,c,e;const d=u.createDefaultRenderer(a,{bandIds:this.bandIds,variableName:g.isSome(this.multidimensionalDefinition)?null==(b=this.multidimensionalDefinition[0])?void 0:b.variableName:null});"WCSServer"===
this.raster.datasetFormat&&"raster-stretch"===d.type&&(1E24<(null==(c=a.statistics)?void 0:c[0].max)||-1E24>(null==(e=a.statistics)?void 0:e[0].min))&&(d.dynamicRangeAdjustment=!0,d.statistics=null,"none"===d.stretchType&&(d.stretchType="min-max"));this.renderer=d}this.symbolizer?(this.symbolizer.rendererJSON=u.normalizeRendererJSON(this.renderer.toJSON()),this.symbolizer.rasterInfo=a):this.symbolizer=new S({rendererJSON:this.renderer.toJSON(),rasterInfo:a});a=this.symbolizer.bind();a.success||A.warn("imagery-tile-mixin",
a.error||"The given renderer is not supported by the layer.")};r._createClass(w,[{key:"url",set:function(a){this._set("url",N.sanitizeUrl(a,A))}},{key:"renderer",set:function(a){this._set("renderer",a);this.updateRenderer()}}]);return w}(h);l.__decorate([m.property()],h.prototype,"_cachedRendererJson",void 0);l.__decorate([m.property()],h.prototype,"_compatibleFullExtent",void 0);l.__decorate([m.property()],h.prototype,"_rasterJobHandler",void 0);l.__decorate([m.property()],h.prototype,"bandIds",
void 0);l.__decorate([m.property({json:{origins:{service:{read:{source:"copyrightText"}}}}})],h.prototype,"copyright",void 0);l.__decorate([m.property({type:U,json:{read:!1}}),v.aliasOf("rasterInfo.extent")],h.prototype,"fullExtent",void 0);l.__decorate([m.property()],h.prototype,"interpolation",void 0);l.__decorate([m.property()],h.prototype,"ioConfig",void 0);l.__decorate([m.property({type:[P]})],h.prototype,"multidimensionalDefinition",void 0);l.__decorate([m.property()],h.prototype,"raster",void 0);
l.__decorate([m.property({readOnly:!0}),v.aliasOf("raster.rasterInfo")],h.prototype,"rasterInfo",void 0);l.__decorate([m.property()],h.prototype,"sourceJSON",void 0);l.__decorate([m.property({type:V,json:{read:!1}}),v.aliasOf("rasterInfo.spatialReference")],h.prototype,"spatialReference",void 0);l.__decorate([m.property({type:z,json:{read:!1}}),v.aliasOf("rasterInfo.storageInfo.tileInfo")],h.prototype,"tileInfo",void 0);l.__decorate([m.property(O.url)],h.prototype,"url",null);l.__decorate([m.property({types:I.rasterRendererTypes})],
h.prototype,"renderer",null);l.__decorate([m.property()],h.prototype,"symbolizer",void 0);return h=l.__decorate([L.subclass("esri.layers.ImageryTileMixin")],h)};Object.defineProperties(y,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});