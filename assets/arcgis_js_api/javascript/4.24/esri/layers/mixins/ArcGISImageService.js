// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.24/esri/copyright.txt for details.
//>>built
define("exports ../../chunks/_rollupPluginBabelHelpers ../../chunks/tslib.es6 ../../geometry ../../Graphic ../../rasterRenderers ../../request ../../core/Error ../../core/jsonMap ../../core/lang ../../core/Logger ../../core/maybe ../../core/promiseUtils ../../core/reactiveUtils ../../core/urlUtils ../../core/accessorSupport/decorators/aliasOf ../../core/accessorSupport/ensureType ../../core/accessorSupport/decorators/property ../../core/accessorSupport/decorators/reader ../../core/accessorSupport/decorators/subclass ../../core/accessorSupport/decorators/writer ../support/commonProperties ../support/DimensionalDefinition ../support/ExportImageServiceParameters ../support/Field ../support/FieldsIndex ../support/imageryRendererUtils ../support/MosaicRule ../support/PixelBlock ../support/rasterEnums ../support/RasterFunction ../support/RasterInfo ../support/RasterJobHandler ../support/rasterDatasets/multidimensionalUtils ../support/rasterFormats/RasterCodec ../support/rasterFunctions/vectorFieldUtils ../../renderers/support/rasterRendererHelper ../../renderers/support/RasterSymbolizer ../../rest/imageService ../../core/has ../support/source/DataLayerSource ../../rest/query/executeQueryJSON ../../core/unitUtils ../../geometry/support/spatialReferenceUtils ../graphics/featureConversionUtils ../../geometry/Extent ../../geometry/Geometry ../../geometry/Multipoint ../../geometry/Point ../../geometry/Polygon ../../geometry/Polyline ../../geometry/support/normalizeUtils ../../core/pbf ../../rest/support/FeatureSet ../../rest/support/Query ../../kernel ../../rest/query/support/AttachmentInfo ../../rest/support/AttachmentQuery ../../rest/query/executeForCount ../../rest/query/executeForIds ../../rest/support/RelationshipQuery ../../rest/support/TopFeaturesQuery ../../rest/imageService/fetchRasterInfo ../../rest/imageService/getCatalogItemRasterInfo ../../rest/support/ImageAngleParameters ../../rest/support/ImageHistogramParameters ../../rest/support/ImageIdentifyParameters ../../rest/support/ImagePixelLocationParameters ../../rest/support/ImageSampleParameters ../../views/2d/engine/flow/dataUtils ../../geometry/SpatialReference".split(" "),
function(Y,w,k,Qa,ja,R,B,C,ka,Z,la,u,ma,na,oa,M,D,l,A,pa,G,aa,qa,ra,H,sa,ta,I,ua,J,K,va,wa,xa,S,ya,N,za,E,Ra,Sa,Aa,Ta,Ua,Va,T,Wa,Xa,Ya,Ba,Za,$a,ab,Ca,U,bb,cb,db,Da,Ea,eb,fb,ba,Fa,Ga,ca,da,Ha,Ia,Ja,V){function Ka(g){if(!g)return null;g=JSON.stringify(g).match(/"rasterFunction":"(.*?")/gi);return(g=null==g?void 0:g.map(F=>F.replace('"rasterFunction":"',"").replace('"',"")))?g.join("/"):null}const ea=la.getLogger("esri.layers.mixins.ArcGISImageService"),W=ka.strict()({U1:"u1",U2:"u2",U4:"u4",U8:"u8",
S8:"s8",U16:"u16",S16:"s16",U32:"u32",S32:"s32",F32:"f32",F64:"f64",C64:"c64",C128:"c128",UNKNOWN:"unknown"}),La=new Set("png png8 png24 png32 jpg bmp gif jpgpng lerc tiff".split(" ")),Ma=l.ensureRange(D.ensureNumber,{min:0,max:255});Y.ArcGISImageService=g=>{g=function(F){function O(){var a=F.apply(this,arguments)||this;a._functionRasterInfos={};a._rasterJobHandler={instance:null,refCount:0,connectionPromise:null};a._defaultServiceMosaicRule=null;a._serviceSourceType=null;a._serviceSupportsMosaicRule=
null;a.rasterAttributeTableFieldPrefix="Raster.";a.adjustAspectRatio=null;a.bandCount=null;a.bandIds=void 0;a.capabilities=null;a.compressionQuality=void 0;a.compressionTolerance=.01;a.copyright=null;a.definitionExpression=null;a.exportImageServiceParameters=null;a.rasterInfo=null;a.fields=null;a.fullExtent=null;a.hasMultidimensions=!1;a.imageMaxHeight=4100;a.imageMaxWidth=4100;a.interpolation=void 0;a.minScale=0;a.maxScale=0;a.multidimensionalInfo=null;a.noData=null;a.noDataInterpretation=void 0;
a.objectIdField=null;a.geometryType="polygon";a.typeIdField=null;a.types=[];a.pixelSizeX=null;a.pixelSizeY=null;a.pixelFilter=null;a.raster=void 0;a.viewId=void 0;a.symbolizer=null;a.rasterAttributeTable=null;a.rasterFunctionInfos=null;a.serviceDataType=null;a.spatialReference=null;a.pixelType=null;a.serviceRasterInfo=null;a.sourceJSON=null;a.url=null;a.version=void 0;return a}w._inheritsLoose(O,F);var h=O.prototype;h.initialize=function(){this._set("exportImageServiceParameters",new ra.ExportImageServiceParameters({layer:this}))};
h.readDefaultServiceMosaicRule=function(a,b){return this._serviceSupportsMosaicRule?I.fromJSON(b):null};h.readServiceSourceType=function(a,b){return this._isMosaicDataset(b)?"mosaic-dataset":"raster-dataset"};h.readServiceSupportsMosaicRule=function(a,b){return this._isMosaicRuleSupported(b)};h.readBandIds=function(a,b){if(Array.isArray(a)&&0<a.length&&a.every(c=>"number"===typeof c))return a};h.readCapabilities=function(a,b){return this._readCapabilities(b)};h.writeCompressionQuality=function(a,
b,c){null!=a&&"lerc"!==this.format&&(b[c]=a)};h.writeCompressionTolerance=function(a,b,c){"lerc"===this.format&&null!=a&&(b[c]=a)};h.readFormat=function(a,b){return"esriImageServiceDataTypeVector-UV"===b.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===b.serviceDataType?"lerc":null!=this.pixelFilter?"lerc":"jpgpng"};h.readMinScale=function(a,b){return null!=b.minLOD&&null!=b.maxLOD?a:0};h.readMaxScale=function(a,b){return null!=b.minLOD&&null!=b.maxLOD?a:0};h.readMosaicRule=function(a,b){return(a=
a||b.mosaicRule)?I.fromJSON(a):this._isMosaicRuleSupported(b)?I.fromJSON(b):null};h.writeMosaicRule=function(a,b,c){a=this.mosaicRule;const d=this.definitionExpression;a?d&&d!==a.where&&(a=a.clone(),a.where=d):d&&(a=new I({where:d}));this._isValidCustomizedMosaicRule(a)&&(b[c]=a.toJSON())};h.writeNoData=function(a,b,c){null!=a&&"number"===typeof a&&(b[c]=Ma(a))};h.readObjectIdField=function(a,b){a||(a=(a=b.fields.filter(c=>"esriFieldTypeOID"===c.type||"oid"===c.type))&&a[0]&&a[0].name);return a};
h.readRenderer=function(a,b,c){var d,e;a=null==b?void 0:null==(d=b.layerDefinition)?void 0:null==(e=d.drawingInfo)?void 0:e.renderer;c=R.read(a,c);if(null==c)return null;"vector-field"===c.type&&b.symbolTileSize&&!a.symbolTileSize&&(c.symbolTileSize=b.symbolTileSize);ta.isSupportedRendererType(c)||ea.warn("ArcGISImageService","Imagery layer doesn't support given renderer type.");return c};h.writeRenderer=function(a,b,c){b.layerDefinition=b.layerDefinition||{};b.layerDefinition.drawingInfo=b.layerDefinition.drawingInfo||
{};b.layerDefinition.drawingInfo.renderer=a.toJSON();"vector-field"===a.type&&(b.symbolTileSize=a.symbolTileSize)};h.readRenderingRule=function(a,b){a=b.rasterFunctionInfos;return b.renderingRule||a&&a.length&&"None"!==a[0].name?this._isRFTJson(b.renderingRule)?K.fromJSON({rasterFunctionDefinition:b.renderingRule}):K.fromJSON(b.renderingRule||{rasterFunctionInfos:b.rasterFunctionInfos}):null};h.writeRenderingRule=function(a,b,c){a=a.toJSON();b[c]=a.rasterFunctionDefinition?a.rasterFunctionDefinition:
a};h.readSpatialReference=function(a,b){return(a=a||b.extent.spatialReference)?V.fromJSON(a):null};h.readPixelType=function(a){return W.fromJSON(a)||a};h.writePixelType=function(a,b,c){if(u.isNone(this.serviceRasterInfo)||this.pixelType!==this.serviceRasterInfo.pixelType)b[c]=W.toJSON(a)};h.readVersion=function(a,b){(a=b.currentVersion)||(a=b.hasOwnProperty("fields")||b.hasOwnProperty("timeInfo")?10:9.3);return a};h.applyFilter=function(a){let b=a;this.pixelFilter&&(b=this._clonePixelData(a),this.pixelFilter(b));
return b};h.applyRenderer=function(){var a=w._asyncToGenerator(function*(b,c){var d=b;if(!this._isPicture()&&this.renderer&&this.symbolizer&&!this.pixelFilter){d=JSON.stringify(this._cachedRendererJson)!==JSON.stringify(this.renderer.toJSON());const e=this._rasterJobHandler.instance,{bandIds:f}=this;e?(d&&(this.symbolizer.bind(),yield e.updateSymbolizer(this.symbolizer,c),this._cachedRendererJson=this.renderer.toJSON()),c=yield e.symbolize({bandIds:f,...b},c),d={extent:b.extent,pixelBlock:c}):d={extent:b.extent,
pixelBlock:this.symbolizer.symbolize({bandIds:f,...b})}}return d});return function(b,c){return a.apply(this,arguments)}}();h.destroy=function(){this._shutdownJobHandler()};h.increaseRasterJobHandlerUsage=function(){this._rasterJobHandler.refCount++};h.decreaseRasterJobHandlerUsage=function(){this._rasterJobHandler.refCount--;0>=this._rasterJobHandler.refCount&&this._shutdownJobHandler()};h.computeAngles=function(){var a=w._asyncToGenerator(function*(b,c){yield this._fetchCapabilities(null==c?void 0:
c.signal);if(!this.capabilities.operations.supportsComputeAngles)throw new C("imagery-layer:compute-angles","this operation is not supported on the input image service");b=D.ensureClass(Ga,b).clone();return E.computeAngles(this.url,b,this._getRequestOptions(c))});return function(b,c){return a.apply(this,arguments)}}();h.computePixelSpaceLocations=function(){var a=w._asyncToGenerator(function*(b,c){yield this._fetchCapabilities(null==c?void 0:c.signal);if(!this.capabilities.operations.supportsComputePixelLocation)throw new C("imagery-layer:compute-pixel-space-locations",
"this operation is not supported on the input image service");b=D.ensureClass(Ha,b).clone();return E.computePixelSpaceLocations(this.url,b,this._getRequestOptions(c))});return function(b,c){return a.apply(this,arguments)}}();h.computeHistograms=function(){var a=w._asyncToGenerator(function*(b,c){yield this._fetchCapabilities(null==c?void 0:c.signal);if(!this.capabilities.operations.supportsComputeHistograms)throw new C("imagery-layer:compute-histograms","this operation is not supported on the input image service");
b=D.ensureClass(ca,b).clone();const {raster:d,mosaicRule:e,renderingRule:f}=this;f&&null==b.renderingRule&&(b.renderingRule=f);e&&null==b.mosaicRule&&(b.mosaicRule=e);d&&null==b.raster&&(b.raster=d);return E.computeHistograms(this.url,b,this._getRequestOptions(c))});return function(b,c){return a.apply(this,arguments)}}();h.computeStatisticsHistograms=function(){var a=w._asyncToGenerator(function*(b,c){yield this._fetchCapabilities(null==c?void 0:c.signal);if(!this.capabilities.operations.supportsComputeStatisticsHistograms)throw new C("imagery-layer:compute-statistics-histograms",
"this operation is not supported on the input image service");b=D.ensureClass(ca,b).clone();const {raster:d,mosaicRule:e,renderingRule:f}=this;f&&null==b.renderingRule&&(b.renderingRule=f);e&&null==b.mosaicRule&&(b.mosaicRule=e);d&&null==b.raster&&(b.raster=d);return E.computeStatisticsHistograms(this.url,b,this._getRequestOptions(c))});return function(b,c){return a.apply(this,arguments)}}();h.getField=function(a){const {fieldsIndex:b}=this;return u.isSome(b)?b.get(a):void 0};h.getFieldDomain=function(a,
b){return(a=this.getField(a))?a.domain:null};h.fetchImage=function(a,b,c,d={}){if(null==a||null==b||null==c)return Promise.reject(new C("imagery-layer:fetch-image","Insufficient parameters for requesting an image. A valid extent, width and height values are required."));const e=this.renderer||this.symbolizer?this.generateRasterInfo(this.renderingRule,{signal:d.signal}):null;return ma.when(e).then(f=>{f&&(this.rasterInfo=f);f={imageServiceParameters:this.getExportImageServiceParameters(a,b,c,d.timeExtent),
imageProps:{extent:a,width:b,height:c,format:this.format},requestAsImageElement:d.requestAsImageElement&&!this.pixelFilter||!1,signal:d.signal};return this._requestArrayBuffer(f)})};h.fetchKeyProperties=function(a){return B(this.parsedUrl.path+"/keyProperties",{query:this._getQueryParams({renderingRule:10.3<=this.version?null==a?void 0:a.renderingRule:null})}).then(b=>b.data)};h.fetchRasterAttributeTable=function(a){return 10.1>this.version?Promise.reject(new C("#fetchRasterAttributeTable()","Failed to get rasterAttributeTable")):
B(this.parsedUrl.path+"/rasterAttributeTable",{query:this._getQueryParams({renderingRule:10.3<=this.version?null==a?void 0:a.renderingRule:null})}).then(b=>Ca.fromJSON(b.data))};h.getCatalogItemRasterInfo=function(a,b){const c=this._getQueryParams();return Fa.getCatalogItemRasterInfo(this.parsedUrl.path,a,{...b,query:c})};h.getCatalogItemICSInfo=function(){var a=w._asyncToGenerator(function*(b,c){var {data:d}=yield B(this.parsedUrl.path+"/"+b+"/info/ics",{query:this._getQueryParams(),...c});if(d=
d&&d.ics){var e=null;try{e=(yield B(this.parsedUrl.path+"/"+b+"/info",{query:this._getQueryParams(),...c})).data.extent}catch{}if(!e||!e.spatialReference)return{ics:d,icsToPixelTransform:null,icsExtent:null,northDirection:null};var f=10.7<=this.version?B(this.parsedUrl.path+"/"+b+"/info/icstopixel",{query:this._getQueryParams(),...c}).then(z=>z.data).catch(()=>({})):{},n=e.spatialReference,p={geometries:JSON.stringify({geometryType:"esriGeometryEnvelope",geometries:[e]}),inSR:n.wkid||JSON.stringify(n),
outSR:"0:"+b};p=B(this.parsedUrl.path+"/project",{query:this._getQueryParams(p),...c}).then(z=>z.data).catch(()=>({}));var q=(e.xmin+e.xmax)/2,m=(e.ymax-e.ymin)/6;e=e.ymin+m;var r=[];for(let z=0;5>z;z++)r.push({x:q,y:e+m*z});b={geometries:JSON.stringify({geometryType:"esriGeometryPoint",geometries:r}),inSR:n.wkid||JSON.stringify(n),outSR:"0:"+b};c=B(this.parsedUrl.path+"/project",{query:this._getQueryParams(b),...c}).then(z=>z.data).catch(()=>({}));f=yield Promise.all([f,p,c]);c=f[0].ipxf;if(null==
c){var v,t,x;b=null==(v=d.geodataXform)?void 0:v.xf_0;"topup"===(null==b?void 0:null==(t=b.name)?void 0:t.toLowerCase())&&6===(null==b?void 0:null==(x=b.coefficients)?void 0:x.length)&&(c={affine:{name:"ics [sensor: Frame] to pixel (column, row) transformation",coefficients:b.coefficients,cellsizeRatio:0,type:"GeometricXform"}})}if(v=T.fromJSON(f[1]&&f[1].geometries&&f[1].geometries[0]))v.spatialReference=new V({wkid:0,imageCoordinateSystem:d});t=f[2].geometries?f[2].geometries.filter(z=>null!=z&&
null!=z.x&&null!=z.y&&"NaN"!==z.x&&"NaN"!==z.y):[];x=t.length;if(3>x)return{ics:d,icsToPixelTransform:c,icsExtent:v,northDirection:null};n=p=b=f=0;for(q=0;q<x;q++)f+=t[q].x,b+=t[q].y,p+=t[q].x*t[q].x,n+=t[q].x*t[q].y;x=(x*n-f*b)/(x*p-f*f);f=0;b=t[4].x>t[0].x;t=t[4].y>t[0].y;Infinity===x?f=t?90:270:0===x?f=b?0:180:0<x?f=b?180*Math.atan(x)/Math.PI:180*Math.atan(x)/Math.PI+180:0>x&&(f=t?180+180*Math.atan(x)/Math.PI:360+180*Math.atan(x)/Math.PI);return{ics:d,icsToPixelTransform:c,icsExtent:v,northDirection:f}}});
return function(b,c){return a.apply(this,arguments)}}();h.generateRasterInfo=function(){var a=w._asyncToGenerator(function*(b,c){var d;if((!b||"none"===(null==b?void 0:null==(d=b.functionName)?void 0:d.toLowerCase())||this._isVectorFieldResampleFunction(b))&&u.isSome(this.serviceRasterInfo))return this.serviceRasterInfo;d=Ka(b);if(this._functionRasterInfos[d])return this._functionRasterInfos[d];b=this._generateRasterInfo(b,c);this._functionRasterInfos[d]=b;try{return yield b}catch{return this._functionRasterInfos[d]=
null}});return function(b,c){return a.apply(this,arguments)}}();h.getExportImageServiceParameters=function(a,b,c,d){var e;a=a.clone().shiftCentralMeridian();const f=E.getImageSpatialReferenceQueryParameter(a.spatialReference,this.parsedUrl.path);u.isSome(this.serviceRasterInfo)&&this.pixelType!==this.serviceRasterInfo.pixelType&&(this.exportImageServiceParameters.pixelType=this.pixelType);const n=this.exportImageServiceParameters.toJSON(),{bandIds:p,noData:q}=n;var {renderingRule:m}=n,r=null==(e=
this.renderingRule)?void 0:e.rasterFunctionDefinition;e=!this.renderer||"raster-stretch"===this.renderer.type;null!=p&&p.length&&this._hasRenderingRule(this.renderingRule)&&!r&&e?(r={rasterFunction:"ExtractBand",rasterFunctionArguments:{BandIds:p}},"Stretch"===m.rasterFunction?(r.rasterFunctionArguments.Raster=m.rasterFunctionArguments.Raster,m.rasterFunctionArguments.Raster=r):"Colormap"===m.rasterFunction?(e=m.rasterFunctionArguments.Raster,"Stretch"===(null==e?void 0:e.rasterFunction)?(r.rasterFunctionArguments.Raster=
e.rasterFunctionArguments.Raster,e.rasterFunctionArguments.Raster=r):(r.rasterFunctionArguments.Raster=e,m.rasterFunctionArguments.Raster=r)):(r.rasterFunctionArguments.Raster=m,m=r),n.bandIds=void 0):n.bandIds=null==p?void 0:p.join(",");q instanceof Array&&0<q.length&&(n.noData=q.join(","));r=this._serviceSupportsMosaicRule?this._combineMosaicRuleWithTimeExtent(this.exportImageServiceParameters.mosaicRule,d):null;n.mosaicRule=r&&JSON.stringify(r);n.renderingRule=this._getRenderingRuleString(K.fromJSON(m));
m={};if(d){const {start:v,end:t}=d.toJSON();if(v&&t&&v===t)m.time=""+v;else if(null!=v||null!=t)m.time=`${null==v?"null":v},${null==t?"null":t}`}return{bbox:a.xmin+","+a.ymin+","+a.xmax+","+a.ymax,bboxSR:f,imageSR:f,size:b+","+c,...n,...m}};h.getSamples=function(){var a=w._asyncToGenerator(function*(b,c){yield this._fetchCapabilities(null==c?void 0:c.signal);if(!this.capabilities.operations.supportsGetSamples)throw new C("imagery-layer:get-samples","getSamples operation is not supported on the input image service");
b=D.ensureClass(Ia,b).clone();const {raster:d}=this;d&&null==b.raster&&(b.raster=d);return E.getSamples(this.url,b,this._getRequestOptions(c))});return function(b,c){return a.apply(this,arguments)}}();h.identify=function(){var a=w._asyncToGenerator(function*(b,c){yield this._fetchCapabilities(null==c?void 0:c.signal);if(!this.capabilities.operations.supportsIdentify)throw new C("imagery-layer:query-rasters","query operation is not supported on the input image service");b=D.ensureClass(da,b).clone();
const {raster:d,mosaicRule:e,renderingRule:f}=this;f&&null==b.renderingRule&&(b.renderingRule=f);if(e&&null==b.mosaicRule){const n=this._combineMosaicRuleWithTimeExtent(e,b.timeExtent);b.mosaicRule=u.unwrap(n)}d&&null==b.raster&&(b.raster=d);return E.identify(this.url,b,this._getRequestOptions(c))});return function(b,c){return a.apply(this,arguments)}}();h.createQuery=function(){const a=new U;a.outFields=["*"];a.returnGeometry=!0;a.where=this.definitionExpression||"1\x3d1";return a};h.queryRasters=
function(){var a=w._asyncToGenerator(function*(b,c){({query:b,requestOptions:c}=yield this._prepareForQuery(b,c));return Aa.executeQueryJSON(this.url,b,c)});return function(b,c){return a.apply(this,arguments)}}();h.queryObjectIds=function(){var a=w._asyncToGenerator(function*(b,c){({query:b,requestOptions:c}=yield this._prepareForQuery(b,c));return Ea.executeForIds(this.url,b,c)});return function(b,c){return a.apply(this,arguments)}}();h.queryRasterCount=function(){var a=w._asyncToGenerator(function*(b,
c){({query:b,requestOptions:c}=yield this._prepareForQuery(b,c));return Da.executeForCount(this.url,b,c)});return function(b,c){return a.apply(this,arguments)}}();h.queryVisibleRasters=function(){var a=w._asyncToGenerator(function*(b,c){if(!b)throw new C("imagery-layer: query-visible-rasters","missing query parameter");const {pixelSize:d,returnDomainValues:e,returnTopmostRaster:f,showNoDataRecords:n}=c||{pixelSize:null,returnDomainValues:!1,returnTopmostRaster:!1,showNoDataRecords:!1};let p=!1;var q=
null,m=null;const r=this.rasterFunctionNamesIndex;u.isSome(b.outFields)&&(p=b.outFields.some(y=>!y.toLowerCase().includes("raster.servicepixelvalue")),10.4<=this.version&&(m=b.outFields.filter(y=>y.toLowerCase().includes("raster.servicepixelvalue")&&24<y.length).map(y=>{y=y.slice(25);return[this._updateRenderingRulesFunctionName(y,r),y]}),q=m.map(y=>new K({functionName:y[0]})),m=m.map(y=>y[1]),0===q.length?this.renderingRule?(q.push(this.renderingRule),m.push(this.renderingRule.functionName)):q=null:
this.renderingRule&&!q.some(y=>y.functionName===this.renderingRule.functionName)&&(q.push(this.renderingRule),m.push(this.renderingRule.functionName))));const v=u.isNone(b.outSpatialReference)||b.outSpatialReference.equals(this.spatialReference),t=b.timeExtent||this.timeExtent,x=this._combineMosaicRuleWithTimeExtent(this.exportImageServiceParameters.mosaicRule,t);q=this._getQueryParams({geometry:b.geometry,timeExtent:t,mosaicRule:x,renderingRule:10.4>this.version?this.renderingRule:null,renderingRules:q,
pixelSize:d,returnCatalogItems:p,returnGeometry:v,raster:this.raster,maxItemCount:f?1:null});delete q.f;q=new da(q);try{var z,fa;yield this.generateRasterInfo(this.renderingRule);const y=yield E.identify(this.url,q,{signal:null==c?void 0:c.signal,query:{...this.customParameters}}),ha=b.outFields,Na=y.value.toLowerCase().includes("nodata");if(!(p&&!v&&(null==y?0:null==(z=y.catalogItems)?0:z.features.length))||!n&&Na)return this._processVisibleRastersResponse(y,{returnDomainValues:e,templateRRFunctionNames:m,
showNoDataRecords:n,templateFields:ha});const P=this.objectIdField||"ObjectId",ia=y.catalogItems.features,Oa=ia.map(Q=>{var L;return null==(L=Q.attributes)?void 0:L[P]}),Pa=new U({objectIds:Oa,returnGeometry:!0,outSpatialReference:b.outSpatialReference,outFields:[P]}),X=yield this.queryRasters(Pa);null!=X&&null!=(fa=X.features)&&fa.length&&X.features.forEach(Q=>{ia.forEach(L=>{L.attributes[P]===Q.attributes[P]&&(L.geometry=new Ba(Q.geometry),u.isSome(b.outSpatialReference)&&(L.geometry.spatialReference=
b.outSpatialReference))})});return this._processVisibleRastersResponse(y,{returnDomainValues:e,templateRRFunctionNames:m,showNoDataRecords:n,templateFields:ha})}catch{throw new C("imagery-layer:query-visible-rasters","encountered error when querying visible rasters");}});return function(b,c){return a.apply(this,arguments)}}();h.fetchVariableStatisticsHistograms=function(){var a=w._asyncToGenerator(function*(b,c){var d=B(this.parsedUrl.path+"/statistics",{query:this._getQueryParams({variable:b}),signal:c}).then(e=>
{var f;return null==(f=e.data)?void 0:f.statistics});b=B(this.parsedUrl.path+"/histograms",{query:this._getQueryParams({variable:b}),signal:c}).then(e=>{var f;return null==(f=e.data)?void 0:f.histograms});d=yield Promise.all([d,b]);d[0]&&d[0].forEach(e=>{e.avg=e.mean;e.stddev=e.standardDeviation});return{statistics:d[0]||null,histograms:d[1]||null}});return function(b,c){return a.apply(this,arguments)}}();h.createFlowMesh=function(){var a=w._asyncToGenerator(function*(b,c){const d=this._rasterJobHandler.instance;
return d?d.createFlowMesh(b,c):Ja.createFlowMesh(b.meshType,b.simulationSettings,b.flowData,u.isSome(c.signal)?c.signal:(new AbortController).signal)});return function(b,c){return a.apply(this,arguments)}}();h._fetchService=function(){var a=w._asyncToGenerator(function*(b){yield this._fetchServiceInfo(b);u.isSome(this.serviceRasterInfo)&&!this.rasterInfo&&(this.rasterInfo=this.serviceRasterInfo);var c=this.sourceJSON;c=u.isSome(this.serviceRasterInfo)?Promise.resolve(this.serviceRasterInfo):ba.fetchServiceRasterInfo(this.parsedUrl.path,
c,{signal:b,query:this._getQueryParams()}).then(e=>{this._set("serviceRasterInfo",e);return e});b=this._hasRenderingRule(this.renderingRule)?this.generateRasterInfo(this.renderingRule,{signal:b}):null;const d=this._getRasterFunctionInfos();return Promise.all([c,b,d]).then(e=>{e[1]?this._set("rasterInfo",e[1]):this._set("rasterInfo",e[0]);e[2]&&this._set("rasterFunctionInfos",e[2]);this.renderer&&!this._isSupportedRenderer(this.renderer)&&(this._set("renderer",null),ea.warn("ArcGISImageService","Switching to the default renderer. Renderer applied is not valid for this Imagery Layer"));
this._set("renderer",this._configRenderer(this.renderer));this.own(na.watch(()=>this.renderingRule,f=>{(this.renderer||this.symbolizer||this.popupEnabled&&this.popupTemplate)&&this.generateRasterInfo(f).then(n=>{n&&(this.rasterInfo=n)})}));({serviceRasterInfo:e}=this);u.isSome(e)&&e.multidimensionalInfo&&this._updateMultidimensionalDefinition(e)})});return function(b){return a.apply(this,arguments)}}();h._combineMosaicRuleWithTimeExtent=function(a,b){var c=this.timeInfo;if(u.isNone(a)||u.isNone(this.multidimensionalInfo)||
u.isNone(b)||u.isNone(null==c?void 0:c.startField))return a;const {startField:d}=c,e=this.multidimensionalInfo.variables.some(m=>m.dimensions.some(r=>r.name===d))?d:"StdTime";a=a.clone();if("mosaic-dataset"===this._serviceSourceType){var f;a.multidimensionalDefinition=null==(f=a.multidimensionalDefinition)?void 0:f.filter(m=>m.dimensionName!==e);return this._cleanupMultidimensionalDefinition(a)}a.multidimensionalDefinition=a.multidimensionalDefinition||[];c=a.multidimensionalDefinition.filter(m=>
m.dimensionName===e);f=u.isSome(b.start)?b.start.getTime():null;b=u.isSome(b.end)?b.end.getTime():null;const n=null==f||null==b||f===b,p=n?[f||b]:[[f,b]],q=10.8<=this.version;c.length?c.forEach(m=>{m.dimensionName===e&&(q?(m.dimensionName=null,m.isSlice=null,m.values=null):(m.isSlice=n,m.values=p))}):q||(b=a.multidimensionalDefinition.filter(m=>null!=m.variableName&&null==m.dimensionName),b.length?b.forEach(m=>{m.dimensionName=e;m.isSlice=n;m.values=p}):a.multidimensionalDefinition.push(new qa({variableName:"",
dimensionName:e,isSlice:n,values:p})));return this._cleanupMultidimensionalDefinition(a)};h._cleanupMultidimensionalDefinition=function(a){if(u.isNone(a))return null;a.multidimensionalDefinition&&(a.multidimensionalDefinition=a.multidimensionalDefinition.filter(b=>!(!b.variableName&&!b.dimensionName)),0===a.multidimensionalDefinition.length&&(a.multidimensionalDefinition=null));return"mosaic-dataset"!==this._serviceSourceType&&null==a.multidimensionalDefinition?null:a};h._prepareForQuery=function(){var a=
w._asyncToGenerator(function*(b,c){var d;yield this._fetchCapabilities(null==(d=c)?void 0:d.signal);if(!this.capabilities.operations.supportsQuery)throw new C("imagery-layer:query-rasters","query operation is not supported on the input image service");b=u.isSome(b)?D.ensureClass(U,b):this.createQuery();c=this._getRequestOptions(c);this.raster&&(c.query={...c.query,raster:this.raster});return{query:b,requestOptions:c}});return function(b,c){return a.apply(this,arguments)}}();h._initJobHandler=function(){var a=
w._asyncToGenerator(function*(){if(null!=this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;const b=new wa;this._rasterJobHandler.connectionPromise=b.initialize().then(()=>{this._rasterJobHandler.instance=b},()=>null);yield this._rasterJobHandler.connectionPromise});return function(){return a.apply(this,arguments)}}();h._shutdownJobHandler=function(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy();this._rasterJobHandler.instance=null;
this._rasterJobHandler.connectionPromise=null;this._rasterJobHandler.refCount=0;this._cachedRendererJson=null};h._isSupportedRenderer=function(a){const {rasterInfo:b,renderingRule:c}=this;return"unique-value"===a.type&&this._hasRenderingRule(c)&&1===b.bandCount&&["u8","s8"].includes(b.pixelType)||N.getSupportedRendererTypes(this.rasterInfo).includes(this.renderer.type)};h._fetchCapabilities=function(){var a=w._asyncToGenerator(function*(b){if(this.capabilities)return this.capabilities;yield this._fetchServiceInfo(b);
return this.capabilities});return function(b){return a.apply(this,arguments)}}();h._fetchServiceInfo=function(){var a=w._asyncToGenerator(function*(b){var c;let d=this.sourceJSON;if(!d){const {data:e,ssl:f}=yield B(this.parsedUrl.path,{query:this._getQueryParams(),signal:b});this.sourceJSON=d=e;f&&(this.url=this.url.replace(/^http:/i,"https:"))}if(-1<(null==(c=d.capabilities)?void 0:c.toLowerCase().split(",").map(e=>e.trim()).indexOf("tilesonly")))throw new C("imagery-layer:fetch-service-info","use ImageryTileLayer to open tiles-only image services");
this.read(d,{origin:"service",url:this.parsedUrl})});return function(b){return a.apply(this,arguments)}}();h._isMosaicDataset=function(a){var b;return a.serviceSourceType?"esriImageServiceSourceTypeMosaicDataset"===a.serviceSourceType:0<(null==(b=a.fields)?void 0:b.length)};h._isMosaicRuleSupported=function(a){var b;if(!a)return!1;const c=this._isMosaicDataset(a);a=10.71<=a.currentVersion&&a.hasMultidimensions&&a.timeInfo&&!(a.objectIdField&&1<(null==(b=a.fields)?void 0:b.length));return c||a};h._isVectorFieldResampleFunction=
function(a){if(u.isNone(a))return!1;const {functionName:b,functionArguments:c}=a;a="resample"===(null==b?void 0:b.toLowerCase());const d=(null==c?void 0:c.ResampleType)||(null==c?void 0:c.resampleType);return a&&(7===d||10===d)};h._isPicture=function(){return!this.format||this.format.includes("jpg")||this.format.includes("png")};h._configRenderer=function(a){if(!this._isPicture()&&!this.pixelFilter||this._isVectorDataSet()){if(!this.bandIds&&3<=this.rasterInfo.bandCount){const d=N.getDefaultBandCombination(this.rasterInfo);
!d||3===this.rasterInfo.bandCount&&0===d[0]&&1===d[1]&&2===d[2]||(this.bandIds=d)}if(!a){var b,c;a=N.createDefaultRenderer(this.rasterInfo,{bandIds:this.bandIds,variableName:this.renderingRule?null:null==(b=this.mosaicRule)?void 0:null==(c=b.multidimensionalDefinition)?void 0:c[0].variableName})}b=N.normalizeRendererJSON(a.toJSON());this.symbolizer?(this.symbolizer.rendererJSON=b,this.symbolizer.rasterInfo=this.rasterInfo):this.symbolizer=new za({rendererJSON:b,rasterInfo:this.rasterInfo});this.symbolizer.bind().success||
(this.symbolizer=null)}return a};h._clonePixelData=function(a){return null==a?a:{extent:a.extent&&a.extent.clone(),pixelBlock:u.isSome(a.pixelBlock)&&a.pixelBlock.clone()}};h._getQueryParams=function(a){u.isSome(null==a?void 0:a.renderingRule)&&"string"!==typeof a.renderingRule&&(a.renderingRule=this._getRenderingRuleString(a.renderingRule));const {raster:b,viewId:c}=this;return{raster:b,viewId:c,f:"json",...a,...this.customParameters}};h._getRequestOptions=function(a){return{...a,query:{...null==
a?void 0:a.query,...this.customParameters}}};h._decodePixelBlock=function(a,b,c){return this._rasterJobHandler.instance?this._rasterJobHandler.instance.decode({data:a,options:b}):S.decode(a,b,c)};h._getRasterFunctionInfos=function(){var a=w._asyncToGenerator(function*(b){const c=this.sourceJSON.rasterFunctionInfos;if(this.serviceRasterInfo)return c;if(c&&10.3<=this.version){var d;return 1===c.length&&"none"===c[0].name.toLowerCase()?c:null==(d=(yield B(this.parsedUrl.path+"/rasterFunctionInfos",{query:this._getQueryParams(),
signal:b})).data)?void 0:d.rasterFunctionInfos}return null});return function(b){return a.apply(this,arguments)}}();h._requestArrayBuffer=function(){var a=w._asyncToGenerator(function*(b){var c;const {imageProps:d,requestAsImageElement:e,signal:f}=b;if(e&&!this.pixelFilter&&-1<(null==(c=d.format)?void 0:c.indexOf("png")))return{imageElement:(yield B(this.parsedUrl.path+"/exportImage",{responseType:"image",query:this._getQueryParams({f:"image",...b.imageServiceParameters}),signal:f})).data,params:d};
c=this._initJobHandler();b=B(this.parsedUrl.path+"/exportImage",{responseType:"array-buffer",query:this._getQueryParams({f:"image",...b.imageServiceParameters}),signal:f});b=(yield Promise.all([b,c]))[0].data;var n=c=d.format||"jpgpng";"bsq"!==n&&"bip"!==n&&(n=S.getFormat(b));if(!n)throw new C("imagery-layer:fetch-image","unsupported format signature "+String.fromCharCode.apply(null,new Uint8Array(b)));n="gif"===c||"bmp"===c||c.includes("png")&&("png"===n||"jpg"===n);const p={signal:f};return{pixelData:{pixelBlock:yield n?
S.decode(b,{useCanvas:!0,...d},p):this._decodePixelBlock(b,{width:d.width,height:d.height,planes:null,pixelType:null,noDataValue:null,format:c},p),extent:d.extent},params:d}});return function(b){return a.apply(this,arguments)}}();h._generateRasterInfo=function(a,b){const c=this._getQueryParams();return ba.generateRasterInfo(this.parsedUrl.path,a,{...b,query:c})};h._isValidCustomizedMosaicRule=function(a){var b;return a&&JSON.stringify(a.toJSON())!==JSON.stringify(null==(b=this._defaultServiceMosaicRule)?
void 0:b.toJSON())};h._updateMultidimensionalDefinition=function(a){if(!this._isValidCustomizedMosaicRule(this.mosaicRule)&&(a=xa.getDefaultMultidimensionalDefinition(a),u.isSome(a)&&0<a.length)){this.mosaicRule=this.mosaicRule||new I;const b=this.mosaicRule.multidimensionalDefinition;if(!b||b&&0>=b.length)this.mosaicRule.multidimensionalDefinition=a}};h._processVisibleRastersResponse=function(a,b){b=b||{};const c=a.value,{templateRRFunctionNames:d,showNoDataRecords:e,returnDomainValues:f,templateFields:n}=
b;b=a.processedValues;var p=a.catalogItems&&a.catalogItems.features;let q=a.properties&&a.properties.Values&&a.properties.Values.map(x=>x.replace(/ /gi,", "))||[];var m=this.objectIdField||"ObjectId",r="string"===typeof c&&c.toLowerCase().includes("nodata");a=[];!c||p||r||(p={},p[m]=0,p=new ja(this.fullExtent,null,p),q=[c],p=[p]);if(!p)return[];this._updateResponseFieldNames(p,n);r&&!e&&(p=[]);for(m=0;m<p.length;m++){r=p[m];if(null!=c){var v=q[m];var t=this.renderingRule&&b&&0<b.length&&d&&0<d.length&&
d.includes(this.renderingRule.functionName)?b[d.indexOf(this.renderingRule.functionName)]:c;if("nodata"===v.toLowerCase()&&!e)continue;r.attributes["Raster.ItemPixelValue"]=v;r.attributes["Raster.ServicePixelValue"]=t;this._updateFeatureWithMagDirValues(r,v);const x=this.fields&&0<this.fields.length;t=this.renderingRule&&u.isSome(this.serviceRasterInfo)&&this.serviceRasterInfo.attributeTable?x?v:c:t;this.renderingRule||(t=x?v:c);this._updateFeatureWithRasterAttributeTableValues(r,t)}r.sourceLayer=
r.layer=this;f&&this._updateFeatureWithDomainValues(r);if(d&&b&&d.length===b.length)for(v=0;v<d.length;v++)r.attributes["Raster.ServicePixelValue."+d[v]]=b[v];a.push(p[m])}return a};h._updateFeatureWithRasterAttributeTableValues=function(a,b){var c=this.rasterInfo&&this.rasterInfo.attributeTable||u.isSome(this.serviceRasterInfo)&&this.serviceRasterInfo.attributeTable;const d=c&&c.features;if(d){c=c.fields;var e=c.map(p=>p.name).filter(p=>"value"===p.toLowerCase()),f=e&&e[0];if(f){var n=d.filter(p=>
p.attributes[f]===(null!=b?parseInt(b,10):null));n&&n[0]&&c.forEach(p=>{a.attributes[this.rasterAttributeTableFieldPrefix+p.name]=n[0].attributes[p.name]})}}};h._updateFeatureWithMagDirValues=function(a,b){if(this._isVectorDataSet()){var c=b.split(/,\s*/).map(d=>parseFloat(d));b=c.map(d=>[d]);c=c.map(d=>({minValue:d,maxValue:d,noDataValue:null}));b=new ua({height:1,width:1,pixelType:"f32",pixels:b,statistics:c});null!=this.pixelFilter&&this.pixelFilter({pixelBlock:b,extent:new T(0,0,0,0,this.spatialReference)});
b="esriImageServiceDataTypeVector-MagDir"===this.serviceDataType?[b.pixels[0][0],b.pixels[1][0]]:ya.uvComponentToVector([b.pixels[0][0],b.pixels[1][0]]);a.attributes["Raster.Magnitude"]=b[0];a.attributes["Raster.Direction"]=b[1]}};h._updateFeatureWithDomainValues=function(a){const b=this.fields&&this.fields.filter(c=>c.domain&&"coded-value"===c.domain.type);null!=b&&b.forEach(c=>{const d=a.attributes[c.name];if(null!=d){const e=c.domain.codedValues.find(f=>f.code===d);e&&(a.attributes[c.name]=e.name)}})};
h._updateResponseFieldNames=function(a,b){if(b&&!(1>b.length)){var c=this.fieldsIndex;u.isNone(c)||a.forEach(d=>{if(d&&d.attributes)for(const e of b)if(c.has(e)){const f=c.get(e).name;f!==e&&(d.attributes[e]=d.attributes[f],delete d.attributes[f])}})}};h._getRenderingRuleString=function(a){if(this._hasRenderingRule(a)){var b;a=a.toJSON();a=null!=(b=a.rasterFunctionDefinition)?b:a;if(a.thumbnail||a.thumbnailEx)a.thumbnail=a.thumbnailEx=null;return JSON.stringify(a)}return null};h._hasRenderingRule=
function(a){return a&&a.functionName&&"none"!==a.functionName.toLowerCase()};h._updateRenderingRulesFunctionName=function(a,b){if(a&&!(1>a.length)){if("Raw"===a)return a.replace("Raw","None");var c=a.toLowerCase().replace(/ /gi,"_");return b.has(c)?b.get(c):a}};h._isRFTJson=function(a){return a&&a.name&&a.arguments&&a.function&&a.hasOwnProperty("functionType")};h._isVectorDataSet=function(){return"esriImageServiceDataTypeVector-UV"===this.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===
this.serviceDataType};h._readCapabilities=function(a){const b=a.capabilities?a.capabilities.toLowerCase().split(",").map(m=>m.trim()):["image","catalog"],{currentVersion:c,advancedQueryCapabilities:d,maxRecordCount:e}=a,f=b.includes("image"),n="esriImageServiceDataTypeElevation"===a.serviceDataType,p=!!(a.spatialReference||a.extent&&a.extent.spatialReference),q=b.includes("edit");return{data:{supportsAttachment:!1},operations:{supportsComputeHistograms:f,supportsExportImage:f,supportsIdentify:f,supportsMeasure:b.includes("mensuration")&&
p,supportsDownload:b.includes("download"),supportsQuery:b.includes("catalog")&&a.fields&&0<a.fields.length,supportsGetSamples:10.2<=c&&f,supportsProject:10.3<=c&&f,supportsComputeStatisticsHistograms:10.4<=c&&f,supportsQueryBoundary:10.6<=c&&f,supportsCalculateVolume:10.7<=c&&n,supportsComputePixelLocation:10.7<=c&&b.includes("catalog"),supportsComputeAngles:10.91<=c,supportsAdd:q,supportsDelete:q,supportsEditing:q,supportsUpdate:q,supportsCalculate:!1,supportsTruncate:!1,supportsValidateSql:!1,supportsChangeTracking:!1,
supportsQueryAttachments:!1,supportsResizeAttachments:!1,supportsSync:!1,supportsExceedsLimitStatistics:!1,supportsQueryAnalytics:!1,supportsQueryTopFeatures:!1},query:{maxRecordCount:e,maxRecordCountFactor:void 0,supportsStatistics:!(null==d||!d.supportsStatistics),supportsOrderBy:!(null==d||!d.supportsOrderBy),supportsDistinct:!(null==d||!d.supportsDistinct),supportsPagination:!(null==d||!d.supportsPagination),supportsStandardizedQueriesOnly:!(null==d||!d.useStandardizedQueries),supportsPercentileStatistics:!(null==
d||!d.supportsPercentileStatistics),supportsCentroid:!(null==d||!d.supportsReturningGeometryCentroid),supportsDistance:!(null==d||!d.supportsQueryWithDistance),supportsExtent:!(null==d||!d.supportsReturningQueryExtent),supportsGeometryProperties:!(null==d||!d.supportsReturningGeometryProperties),supportsHavingClause:!(null==d||!d.supportsHavingClause),supportsQuantization:!1,supportsQuantizationEditMode:!1,supportsQueryGeometry:!1,supportsResultType:!1,supportsMaxRecordCountFactor:!1,supportsSqlExpression:!1,
supportsTopFeaturesQuery:!1,supportsQueryByOthers:!1,supportsHistoricMoment:!1,supportsFormatPBF:!1,supportsDisjointSpatialRelationship:!1,supportsCacheHint:!1,supportsSpatialAggregationStatistics:!1,supportedSpatialAggregationStatistics:{envelope:!1,centroid:!1,convexHull:!1},supportsDefaultSpatialReference:!(null==d||!d.supportsDefaultSR),supportsCompactGeometry:!1,standardMaxRecordCount:void 0,tileMaxRecordCount:void 0}}};w._createClass(O,[{key:"rasterFunctionNamesIndex",get:function(){const a=
new Map;if(!this.rasterFunctionInfos||u.isSome(this.rasterFunctionInfos)&&1>this.rasterFunctionInfos.length)return a;u.isSome(this.rasterFunctionInfos)&&this.rasterFunctionInfos.forEach(b=>{a.set(b.name.toLowerCase().replace(/ /gi,"_"),b.name)});return a}},{key:"fieldsIndex",get:function(){return this.fields?new sa(this.fields):null}},{key:"format",set:function(a){a&&La.has(a.toLowerCase())&&this._set("format",a.toLowerCase())}},{key:"mosaicRule",set:function(a){a&&a.mosaicMethod&&(a=I.fromJSON({...a.toJSON(),
mosaicMethod:a.mosaicMethod,mosaicOperation:a.mosaicOperation}));this._set("mosaicRule",a)}},{key:"parsedUrl",get:function(){return this.url?oa.urlToObject(this.url):null}},{key:"renderer",set:function(a){this.loaded&&(a=this._configRenderer(a));this._set("renderer",a)}},{key:"rasterFields",get:function(){const a=this.rasterAttributeTableFieldPrefix||"Raster.";var b=new H({name:"Raster.ItemPixelValue",alias:"Item Pixel Value",domain:null,editable:!1,length:50,type:"string"});const c=new H({name:"Raster.ServicePixelValue",
alias:"Service Pixel Value",domain:null,editable:!1,length:50,type:"string"}),d=new H({name:"Raster.ServicePixelValue.Raw",alias:"Raw Service Pixel Value",domain:null,editable:!1,length:50,type:"string"});let e=this.fields?Z.clone(this.fields):[];e.push(c);this.capabilities.operations.supportsQuery&&this.fields&&0<this.fields.length&&e.push(b);10.4<=this.version&&u.isSome(this.rasterFunctionInfos)&&this.rasterFunctionInfos.some(f=>"none"===f.name.toLowerCase())&&e.push(d);u.isSome(this.rasterFunctionInfos)&&
this.rasterFunctionInfos.filter(f=>"none"!==f.name.toLowerCase()).forEach(f=>{e.push(new H({name:"Raster.ServicePixelValue."+f.name,alias:f.name,domain:null,editable:!1,length:50,type:"string"}))});this._isVectorDataSet()&&(e.push(new H({name:"Raster.Magnitude",alias:"Magnitude",domain:null,editable:!1,type:"double"})),e.push(new H({name:"Raster.Direction",alias:"Direction",domain:null,editable:!1,type:"double"})));(b=this.rasterInfo.attributeTable&&this.rasterInfo.attributeTable.fields||null)&&0<
b.length&&(b=b.filter(f=>"esriFieldTypeOID"!==f.type&&"value"!==f.name.toLowerCase()).map(f=>{const n=Z.clone(f);n.name=a+f.name;return n}),e=e.concat(b));return e}},{key:"renderingRule",set:function(a){a&&a.rasterFunction&&(a=K.fromJSON({...a.toJSON(),rasterFunction:a.rasterFunction,rasterFunctionArguments:a.rasterFunctionArguments}));this._set("renderingRule",a)}}]);return O}(g);k.__decorate([l.property()],g.prototype,"_functionRasterInfos",void 0);k.__decorate([l.property()],g.prototype,"_rasterJobHandler",
void 0);k.__decorate([l.property({dependsOn:["_serviceSupportsMosaicRule"]})],g.prototype,"_defaultServiceMosaicRule",void 0);k.__decorate([A.reader("_defaultServiceMosaicRule",["defaultMosaicMethod"])],g.prototype,"readDefaultServiceMosaicRule",null);k.__decorate([l.property()],g.prototype,"_cachedRendererJson",void 0);k.__decorate([l.property({readOnly:!0})],g.prototype,"_serviceSourceType",void 0);k.__decorate([A.reader("_serviceSourceType",["serviceSourceType","fields"])],g.prototype,"readServiceSourceType",
null);k.__decorate([l.property({readOnly:!0})],g.prototype,"_serviceSupportsMosaicRule",void 0);k.__decorate([A.reader("_serviceSupportsMosaicRule",["currentVersion","fields"])],g.prototype,"readServiceSupportsMosaicRule",null);k.__decorate([l.property()],g.prototype,"rasterAttributeTableFieldPrefix",void 0);k.__decorate([l.property({readOnly:!0})],g.prototype,"rasterFunctionNamesIndex",null);k.__decorate([l.property()],g.prototype,"adjustAspectRatio",void 0);k.__decorate([l.property({readOnly:!0}),
M.aliasOf("serviceRasterInfo.bandCount")],g.prototype,"bandCount",void 0);k.__decorate([l.property({type:[D.Integer],json:{write:!0}})],g.prototype,"bandIds",void 0);k.__decorate([A.reader("bandIds")],g.prototype,"readBandIds",null);k.__decorate([l.property({readOnly:!0,json:{read:!1}})],g.prototype,"capabilities",void 0);k.__decorate([A.reader("service","capabilities",["capabilities","currentVersion","serviceDataType"])],g.prototype,"readCapabilities",null);k.__decorate([l.property({type:Number})],
g.prototype,"compressionQuality",void 0);k.__decorate([G.writer("compressionQuality")],g.prototype,"writeCompressionQuality",null);k.__decorate([l.property({type:Number})],g.prototype,"compressionTolerance",void 0);k.__decorate([G.writer("compressionTolerance")],g.prototype,"writeCompressionTolerance",null);k.__decorate([l.property({json:{read:{source:"copyrightText"}}})],g.prototype,"copyright",void 0);k.__decorate([l.property({type:String,json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,
allowNull:!0}}})],g.prototype,"definitionExpression",void 0);k.__decorate([l.property({readOnly:!0,constructOnly:!0})],g.prototype,"exportImageServiceParameters",void 0);k.__decorate([l.property()],g.prototype,"rasterInfo",void 0);k.__decorate([l.property({readOnly:!0,type:[H]})],g.prototype,"fields",void 0);k.__decorate([l.property({readOnly:!0})],g.prototype,"fieldsIndex",null);k.__decorate([l.property({type:"png png8 png24 png32 jpg bmp gif jpgpng lerc tiff".split(" "),json:{write:!0}})],g.prototype,
"format",null);k.__decorate([A.reader("service","format",["serviceDataType"])],g.prototype,"readFormat",null);k.__decorate([l.property({type:T})],g.prototype,"fullExtent",void 0);k.__decorate([l.property({readOnly:!0})],g.prototype,"hasMultidimensions",void 0);k.__decorate([l.property({json:{read:{source:"maxImageHeight"}}})],g.prototype,"imageMaxHeight",void 0);k.__decorate([l.property({json:{read:{source:"maxImageWidth"}}})],g.prototype,"imageMaxWidth",void 0);k.__decorate([l.property({type:String,
json:{type:J.interpolationKebab.jsonValues,read:J.interpolationKebab.read,write:J.interpolationKebab.write}})],g.prototype,"interpolation",void 0);k.__decorate([l.property()],g.prototype,"minScale",void 0);k.__decorate([A.reader("service","minScale")],g.prototype,"readMinScale",null);k.__decorate([l.property()],g.prototype,"maxScale",void 0);k.__decorate([A.reader("service","maxScale")],g.prototype,"readMaxScale",null);k.__decorate([l.property({type:I})],g.prototype,"mosaicRule",null);k.__decorate([A.reader("mosaicRule",
["mosaicRule","defaultMosaicMethod"])],g.prototype,"readMosaicRule",null);k.__decorate([G.writer("mosaicRule")],g.prototype,"writeMosaicRule",null);k.__decorate([l.property({readOnly:!0}),M.aliasOf("serviceRasterInfo.multidimensionalInfo")],g.prototype,"multidimensionalInfo",void 0);k.__decorate([l.property({json:{type:D.Integer}})],g.prototype,"noData",void 0);k.__decorate([G.writer("noData")],g.prototype,"writeNoData",null);k.__decorate([l.property({type:String,json:{type:J.noDataInterpretationKebab.jsonValues,
read:J.noDataInterpretationKebab.read,write:J.noDataInterpretationKebab.write}})],g.prototype,"noDataInterpretation",void 0);k.__decorate([l.property({type:String,readOnly:!0,json:{read:{source:["fields"]}}})],g.prototype,"objectIdField",void 0);k.__decorate([A.reader("objectIdField")],g.prototype,"readObjectIdField",null);k.__decorate([l.property({})],g.prototype,"geometryType",void 0);k.__decorate([l.property({})],g.prototype,"typeIdField",void 0);k.__decorate([l.property({})],g.prototype,"types",
void 0);k.__decorate([l.property({readOnly:!0})],g.prototype,"parsedUrl",null);k.__decorate([l.property({readOnly:!0}),M.aliasOf("serviceRasterInfo.pixelSize.x")],g.prototype,"pixelSizeX",void 0);k.__decorate([l.property({readOnly:!0}),M.aliasOf("serviceRasterInfo.pixelSize.y")],g.prototype,"pixelSizeY",void 0);k.__decorate([l.property({type:Function})],g.prototype,"pixelFilter",void 0);k.__decorate([l.property()],g.prototype,"raster",void 0);k.__decorate([l.property()],g.prototype,"viewId",void 0);
k.__decorate([l.property({types:R.rasterRendererTypes,json:{name:"layerDefinition.drawingInfo.renderer",origins:{"web-scene":{types:R.websceneRasterRendererTypes,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy(F){return{enabled:F&&"vector-field"!==F.type&&"flow"!==F.type}}}}}}})],g.prototype,"renderer",null);k.__decorate([A.reader("renderer")],g.prototype,"readRenderer",null);k.__decorate([G.writer("renderer")],g.prototype,"writeRenderer",null);k.__decorate([l.property()],g.prototype,
"symbolizer",void 0);k.__decorate([l.property(aa.opacity)],g.prototype,"opacity",void 0);k.__decorate([l.property({readOnly:!0}),M.aliasOf("serviceRasterInfo.attributeTable")],g.prototype,"rasterAttributeTable",void 0);k.__decorate([l.property({readOnly:!0})],g.prototype,"rasterFields",null);k.__decorate([l.property({constructOnly:!0})],g.prototype,"rasterFunctionInfos",void 0);k.__decorate([l.property({type:K})],g.prototype,"renderingRule",null);k.__decorate([A.reader("renderingRule",["renderingRule",
"rasterFunctionInfos"])],g.prototype,"readRenderingRule",null);k.__decorate([G.writer("renderingRule")],g.prototype,"writeRenderingRule",null);k.__decorate([l.property()],g.prototype,"serviceDataType",void 0);k.__decorate([l.property({readOnly:!0,type:V})],g.prototype,"spatialReference",void 0);k.__decorate([A.reader("spatialReference",["spatialReference","extent"])],g.prototype,"readSpatialReference",null);k.__decorate([l.property({json:{type:W.jsonValues}})],g.prototype,"pixelType",void 0);k.__decorate([A.reader("pixelType")],
g.prototype,"readPixelType",null);k.__decorate([G.writer("pixelType")],g.prototype,"writePixelType",null);k.__decorate([l.property({constructOnly:!0,type:va})],g.prototype,"serviceRasterInfo",void 0);k.__decorate([l.property()],g.prototype,"sourceJSON",void 0);k.__decorate([l.property(aa.url)],g.prototype,"url",void 0);k.__decorate([l.property({readOnly:!0})],g.prototype,"version",void 0);k.__decorate([A.reader("version",["currentVersion","fields","timeInfo"])],g.prototype,"readVersion",null);return g=
k.__decorate([pa.subclass("esri.layers.mixins.ArcGISImageService")],g)};Object.defineProperties(Y,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});