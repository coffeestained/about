// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.24/esri/copyright.txt for details.
//>>built
define("exports ../../core/mathUtils ../../core/maybe ../../chunks/vec3 ../../chunks/vec3f64 ../../chunks/sphere ./vector ./vectorStacks ../../views/3d/support/mathUtils".split(" "),function(e,J,K,g,t,C,y,m,L){function z(a=q){return[a[0],a[1],a[2],a[3]]}function D(a,b){return A(b[0],b[1],b[2],b[3],a)}function A(a,b,c,d,h=z()){h[0]=a;h[1]=b;h[2]=c;h[3]=d;return h}function E(a,b,c){var d=b[0]*b[0]+b[1]*b[1]+b[2]*b[2];d=1E-5<Math.abs(d-1)&&1E-12<d?1/Math.sqrt(d):1;c[0]=b[0]*d;c[1]=b[1]*d;c[2]=b[2]*d;
c[3]=-(c[0]*a[0]+c[1]*a[1]+c[2]*a[2]);return c}function F(a,b,c,d=z()){var h=c[0]-b[0],f=c[1]-b[1],k=c[2]-b[2];c=a[0]-b[0];const G=a[1]-b[1],H=a[2]-b[2];b=f*H-k*G;k=k*c-h*H;h=h*G-f*c;f=b*b+k*k+h*h;f=1E-5<Math.abs(f-1)&&1E-12<f?1/Math.sqrt(f):1;d[0]=b*f;d[1]=k*f;d[2]=h*f;d[3]=-(d[0]*a[0]+d[1]*a[1]+d[2]*a[2]);return d}function B(a,b,c,d,h){if(3>a.count)return!1;a.getVec(c,u);let f=d,k=!1;for(;f<a.count-1&&!k;)a.getVec(f,r),f++,k=!g.exactEquals(u,r);if(!k)return!1;f=Math.max(f,h);for(k=!1;f<a.count&&
!k;)a.getVec(f,p),f++,g.subtract(v,u,r),g.normalize(v,v),g.subtract(w,r,p),g.normalize(w,w),k=!g.exactEquals(u,p)&&!g.exactEquals(r,p)&&.99619469809>Math.abs(g.dot(v,w));if(!k)return 0===c&&1===d&&2===h?!1:B(a,b,0,1,2);F(u,r,p,b);return!0}function I(a,b,c){a=g.scale(m.sv3d.get(),a,g.dot(a,b));g.subtract(c,b,a);return c}function n(a,b){return g.dot(a,b)+a[3]}function x(a,b,c,d,h){const f=g.dot(a,c);if(0===f)return!1;a=-(g.dot(a,b)+a[3])/f;d&l.CLAMP&&(a=J.clamp(a,0,1));if(!(d&l.INFINITE_MIN)&&0>a||
!(d&l.INFINITE_MAX)&&1<a)return!1;g.add(h,b,g.scale(h,c,a));return!0}const u=t.create(),r=t.create(),p=t.create(),v=t.create(),w=t.create(),q=[0,0,1,0];var l;(function(a){a[a.NONE=0]="NONE";a[a.CLAMP=1]="CLAMP";a[a.INFINITE_MIN=4]="INFINITE_MIN";a[a.INFINITE_MAX=8]="INFINITE_MAX"})(l||(l={}));const M=l.INFINITE_MIN|l.INFINITE_MAX,N=l.INFINITE_MAX;e.UP=q;e.clip=function(a,b){const c=g.dot(a,b.ray.direction);a=-n(a,b.ray.origin);if(0>a&&0<=c)return!1;if(-1E-6<c&&1E-6>c)return 0<a;if((0>a||0>c)&&!(0>
a&&0>c))return!0;a/=c;0<c?a<b.c1&&(b.c1=a):a>b.c0&&(b.c0=a);return b.c0<=b.c1};e.clipInfinite=function(a,b){const c=g.dot(a,b.ray.direction);a=-n(a,b.ray.origin);if(-1E-6<c&&1E-6>c)return 0<a;a/=c;0<c?a<b.c1&&(b.c1=a):a>b.c0&&(b.c0=a);return b.c0<=b.c1};e.copy=D;e.create=z;e.distance=function(a,b){return Math.abs(n(a,b))};e.fromManyPoints=function(a,b){return B(a,b,0,1,2)};e.fromManyPointsSampleAt=B;e.fromNormalAndOffset=function(a,b,c){g.copy(c,a);c[3]=b;return c};e.fromPoints=F;e.fromPositionAndNormal=
E;e.fromValues=A;e.fromVectorsAndPoint=function(a,b,c,d){g.cross(p,b,a);return E(c,p,d)};e.intersectLine=function(a,b,c,d){c=g.subtract(m.sv3d.get(),c,b);return x(a,b,c,M,d)};e.intersectLineSegment=function(a,b,c){return x(a,b.origin,b.vector,l.NONE,c)};e.intersectLineSegmentClamp=function(a,b,c){return x(a,b.origin,b.vector,l.CLAMP,c)};e.intersectRay=function(a,b,c){return K.isSome(b)?x(a,b.origin,b.direction,N,c):!1};e.isAABBFullyInside=function(a,b){const c=b[0],d=b[1],h=b[2],f=b[3],k=b[4];b=b[5];
return 0<=a[0]*(0<a[0]?c:f)+a[1]*(0<a[1]?d:k)+a[2]*(0<a[2]?h:b)+a[3]};e.isPointInside=function(a,b){return 0<=n(a,b)};e.isPointOutside=function(a,b){return 0>n(a,b)};e.isSphereFullyInside=function(a,b){return 0<=n(a,C.getCenter(b))-b[3]};e.isSphereFullyOutside=function(a,b){return 0>n(a,C.getCenter(b))+b[3]};e.negate=function(a,b){b[0]=-a[0];b[1]=-a[1];b[2]=-a[2];b[3]=-a[3];return b};e.normal=function(a){return a};e.projectPoint=function(a,b,c){const d=g.scale(m.sv3d.get(),a,-a[3]);b=g.subtract(m.sv3d.get(),
b,d);a=I(a,b,m.sv3d.get());g.add(c,a,d);return c};e.projectPointLocal=function(a,b,c,d){var h=m.sv3d.get(),f=m.sv3d.get();L.tangentFrame(a,h,f);b=g.subtract(m.sv3d.get(),c,b);h=y.projectPointSignedLength(h,b);f=y.projectPointSignedLength(f,b);a=y.projectPointSignedLength(a,b);return g.set(d,h,f,a)};e.projectVector=I;e.setOffsetFromPoint=function(a,b,c){b!==a&&D(a,b);a[3]=-g.dot(a,c);return a};e.signedDistance=n;e.wrap=function(a=q[0],b=q[1],c=q[2],d=q[3]){return A(a,b,c,d,m.sv4d.get())};Object.defineProperties(e,
{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});