// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.24/esri/copyright.txt for details.
//>>built
define("../../chunks/_rollupPluginBabelHelpers ../../chunks/tslib.es6 ../../core/colorUtils ../../core/JSONSupport ../../core/Logger ../../core/maybe ../../core/accessorSupport/decorators/property ../../core/arrayUtils ../../core/has ../../core/accessorSupport/ensureType ../../core/accessorSupport/decorators/subclass ../../layers/support/RasterInfo ../../layers/support/rasterFunctions/pixelUtils ../../layers/support/rasterFunctions/stretchUtils ../../layers/support/rasterFunctions/surfaceUtils ./colorRampUtils".split(" "),
function(J,C,K,y,L,r,D,Q,R,S,M,N,t,u,E,G){function O(x,z){const {attributeTable:n,bandCount:a}=x;return r.isNone(n)||1<a||z&&null==n.fields.find(b=>b.name.toLowerCase()===z.toLowerCase())?!1:!0}function P(x){const {bandCount:z,colormap:n}=x;return r.isSome(n)&&n.length&&1===z}function H(x){return t.isValidPixelBlock(x)&&0!==x.validPixelCount}const I=L.getLogger("esri.renderers.support.RasterSymbolizer");y=function(x){function z(a){return x.call(this,a)||this}J._inheritsLoose(z,x);var n=z.prototype;
n.bind=function(){const {rendererJSON:a}=this;if(!a)return{success:!1};this.lookup={rendererJSON:{}};let b;switch(a.type){case "uniqueValue":b=this._updateUVRenderer(a);break;case "rasterColormap":b=this._updateColormapRenderer(a);break;case "rasterStretch":b=this._updateStretchRenderer(a);break;case "classBreaks":b=this._updateClassBreaksRenderer(a);break;case "rasterShadedRelief":b=this._updateShadedReliefRenderer(a);break;case "vectorField":b=this._updateVectorFieldRenderer();break;case "flowRenderer":b=
this._updateFlowRenderer()}return b};n.symbolize=function(a){let b=a&&a.pixelBlock;if(!H(b))return b;if(a.simpleStretchParams&&"rasterStretch"===this.rendererJSON.type)return this.simpleStretch(b,a.simpleStretchParams);try{3<b.pixels.length&&(b=t.extractBands(b,[0,1,2]));let d;switch(this.rendererJSON.type){case "uniqueValue":case "rasterColormap":d=this._symbolizeColormap(b);break;case "classBreaks":d=this._symbolizeClassBreaks(b);break;case "rasterStretch":d=this._symbolizeStretch(b,a.bandIds);
break;case "rasterShadedRelief":({extent:a}=a),d=this._symbolizeShadedRelief(b,{isGCS:a.spatialReference.isGeographic,resolution:{x:(a.xmax-a.xmin)/b.width,y:(a.ymax-a.ymin)/b.height}})}return d}catch(d){return I.error("symbolize",d.message),b}};n.simpleStretch=function(a,b){if(!H(a))return a;try{return 3<a.pixels.length&&(a=t.extractBands(a,[0,1,2])),u.stretch(a,b)}catch(d){return I.error("symbolize",d.message),a}};n.generateWebGLParameters=function(a){if(["uniqueValue","rasterColormap","classBreaks"].includes(this.rendererJSON.type)){var b;
const {indexedColormap:f,offset:g}=(null==(b=this.lookup)?void 0:b.colormapLut)||{};return{colormap:f,colormapOffset:g,type:"lut"}}const {pixelBlock:d,isGCS:e,resolution:h,bandIds:c}=a;({rendererJSON:a}=this);return"rasterStretch"===a.type?this._generateStretchWebGLParams(d,a,c):"rasterShadedRelief"===a.type?this._generateShadedReliefWebGLParams(a,e,h):"vectorField"===a.type?this._generateVectorFieldWebGLParams(a):null};n._isLUTChanged=function(a){if(!this.lookup||!this.lookup.rendererJSON)return!0;
if("colorRamp"in this.rendererJSON){const b=this.rendererJSON.colorRamp;if(a)return JSON.stringify(b)!==JSON.stringify(this.lookup.rendererJSON.colorRamp);({...this.rendererJSON});({...this.lookup.rendererJSON})}return JSON.stringify(this.rendererJSON)!==JSON.stringify(this.lookup.rendererJSON)};n._symbolizeColormap=function(a){return this._isLUTChanged()&&!this.bind().success?a:t.colorize(a,this.lookup.colormapLut)};n._symbolizeClassBreaks=function(a){const {canUseIndexedLUT:b}=this._analyzeClassBreaks(this.rendererJSON);
return this._isLUTChanged()&&!this.bind().success?a:b?t.colorize(a,this.lookup.colormapLut):t.remapColor(a,this.lookup.remapLut)};n._symbolizeStretch=function(a,b){const {rasterInfo:d}=this,{pixelType:e,bandCount:h}=d,c=this.rendererJSON,f=["u8","u16","s8","s16"].includes(e);let g;var {dra:k}=c;({gamma:m}=this.lookup);if("histogramEqualization"===c.stretchType){var l=k?null:this.lookup.histogramLut;b=u.getStretchCutoff(c,{rasterInfo:d,pixelBlock:a,bandIds:b,returnHistogramLut:!l});var m=u.stretch(a,
{...b,gamma:m});m=t.lookupPixels(m,{lut:k?b.histogramLut:l,offset:0})}else if(f){var q;if(k)k=u.getStretchCutoff(c,{rasterInfo:d,pixelBlock:a,bandIds:b}),g=u.createStretchLUT({pixelType:e,...k,gamma:m});else{if(this._isLUTChanged()&&!this.bind().success)return a;g=this.lookup?this.lookup.stretchLut:null}if(!g)return a;1<h&&(null==b?void 0:b.length)===(null==(l=r.unwrap(a))?void 0:l.pixels.length)&&(null==(q=g)?void 0:q.lut.length)===h&&(g={lut:b.map(p=>g.lut[p]),offset:g.offset});m=t.lookupPixels(a,
g)}else k=u.getStretchCutoff(c,{rasterInfo:d,pixelBlock:a,bandIds:b}),m=u.stretch(a,{...k,gamma:m});if(c.colorRamp){if(this._isLUTChanged(!0)&&!this.bind().success)return a;m=t.colorize(m,this.lookup.colormapLut)}return m};n._symbolizeShadedRelief=function(a,b){var d,e,h=this.rendererJSON;b=E.hillshade(a,{...h,...b});if(!h.colorRamp||this._isLUTChanged(!0)&&!this.bind().success)return b;h=this.lookup?this.lookup.hsvMap:null;if(!h)return b;const c=null!=(d=null==(e=r.unwrap(this.rasterInfo.statistics))?
void 0:e[0])?d:{min:0,max:8E3};E.tintHillshade(b,a,h,c);return b};n._isVectorFieldData=function(){const {bandCount:a,dataType:b}=this.rasterInfo;return 2===a&&("vector-magdir"===b||"vector-uv"===b)};n._updateVectorFieldRenderer=function(){return this._isVectorFieldData()?{success:!0}:{success:!1,error:`Unsupported data type "${this.rasterInfo.dataType}"; VectorFieldRenderer only supports "vector-magdir" and "vector-uv".`}};n._updateFlowRenderer=function(){return this._isVectorFieldData()?{success:!0}:
{success:!1,error:`Unsupported data type "${this.rasterInfo.dataType}"; FlowRenderer only supports "vector-magdir" and "vector-uv".`}};n._updateUVRenderer=function(a){const {bandCount:b,attributeTable:d,pixelType:e}=this.rasterInfo,h=a.field1;if(!h)return{success:!1,error:"Unsupported renderer; missing UniqueValueRenderer.field."};const c=a.defaultSymbol;var f=1===b&&["u8","s8"].includes(e);if(!O(this.rasterInfo,h)&&!f)return{success:!1,error:"Unsupported data; UniqueValueRenderer is only supported on single band data with a valid raster attribute table."};
const g=[];if(d){const k=d.fields.find(l=>"value"===l.name.toLowerCase());if(!k)return{success:!1,error:"Unsupported data; the data's raster attribute table does not have a value field."};d.features.forEach(l=>{var m,q=a.uniqueValueInfos.find(p=>String(p.value)===String(l.attributes[h]));(q=null==q?void 0:null==(m=q.symbol)?void 0:m.color)?g.push([l.attributes[k.name]].concat(q)):c&&g.push([l.attributes[k.name]].concat(c.color))})}else{if("value"!==h.toLowerCase())return{success:!1,error:'Unsupported renderer; UniqueValueRenderer.field must be "Value" when raster attribute table is not availalbe.'};
a.uniqueValueInfos.forEach(k=>{var l;const m=null==k?void 0:null==(l=k.symbol)?void 0:l.color;m?g.push([parseInt(""+k.value,10)].concat(m)):c&&g.push([parseInt(""+k.value,10)].concat(c.color))})}if(0===g.length)return{success:!1,error:"Invalid UniqueValueRenderer. Cannot find matching records in the raster attribute table."};f=t.createColormapLUT({colormap:g});this.lookup={rendererJSON:a,colormapLut:f};this.canRenderInWebGL=!0;return{success:!0}};n._updateColormapRenderer=function(a){if(!P(this.rasterInfo))return{success:!1,
error:"Unsupported data; the data source does not have a colormap."};var b=a.colormapInfos.map(d=>[d.value].concat(d.color)).sort((d,e)=>d[0]-e[0]);if(!b||0===b.length)return{success:!1,error:"Unsupported renderer; ColormapRenderer must have meaningful colormapInfos."};b=t.createColormapLUT({colormap:b});this.lookup={rendererJSON:a,colormapLut:b};this.canRenderInWebGL=!0;return{success:!0}};n._updateShadedReliefRenderer=function(a){{const {bandCount:d,dataType:e,pixelType:h}=this.rasterInfo;var b=
"elevation"===e||"generic"===e&&1===d&&("s16"===h||"f32"===h||"f64"===h)}if(!b)return{success:!1,error:`Unsupported data type "${this.rasterInfo.dataType}"; ShadedReliefRenderer only supports "elevation", or single band float/s16 data.`};if(a.colorRamp){b=G.convertColorRampToColormap(a.colorRamp,256,!0);b=t.createColormapLUT({colormap:b});const d=[],e=b.indexedColormap;for(let h=0;h<e.length;h+=4){const c=K.toHSV({r:e[h],g:e[h+1],b:e[h+2]});d.push([c.h/60,c.s/100,255*c.v/100])}this.lookup={rendererJSON:a,
colormapLut:b,hsvMap:d}}else this.lookup=null;this.canRenderInWebGL=!0;return{success:!0}};n._analyzeClassBreaks=function(a){const {attributeTable:b,pixelType:d}=this.rasterInfo,e=r.isSome(b)?b.fields.find(f=>"value"===f.name.toLowerCase()):null,h=r.isSome(b)?b.fields.find(f=>f.name.toLowerCase()===a.field.toLowerCase()):null,c=null!=e&&null!==h;return{canUseIndexedLUT:["u8","u16","s8","s16"].includes(d)||c,tableValueField:e,tableBreakField:h}};n._updateClassBreaksRenderer=function(a){var {attributeTable:b}=
this.rasterInfo;const {canUseIndexedLUT:d,tableValueField:e,tableBreakField:h}=this._analyzeClassBreaks(a);var c=a.classBreakInfos;if(null==c||!c.length)return{success:!1,error:"Unsupported renderer; missing or invalid ClassBreaksRenderer.classBreakInfos."};c=c.sort((m,q)=>m.classMaxValue-q.classMaxValue);var f=c[c.length-1],g=a.minValue;if(!d){var k=[];for(b=0;b<c.length;b++){var l;k.push({value:null!=(l=c[b].classMinValue)?l:g,mappedColor:c[b].symbol.color});g=c[b].classMaxValue}k.push({value:f.classMaxValue,
mappedColor:f.symbol.color});this.lookup={rendererJSON:a,remapLut:k};this.canRenderInWebGL=!1;return{success:!0}}l=[];if(null!=e&&null!==h&&e!==h){f=e.name;const m=h.name,q=c[c.length-1],{classMaxValue:p}=q;g=a.minValue;for(k of b.features){b=k.attributes[f];const v=k.attributes[m],B=v===p?q:v<g?null:c.find(({classMaxValue:A})=>A>v);B&&l.push([b].concat(B.symbol.color))}}else{g=Math.floor(a.minValue);for(k=0;k<c.length;k++){for(b=c[k];g<b.classMaxValue;g++)l.push([g].concat(b.symbol.color));g=Math.ceil(b.classMaxValue)}f.classMaxValue===
g&&l.push([f.classMaxValue].concat(f.symbol.color))}c=t.createColormapLUT({colormap:l,fillUnspecified:!1});this.lookup={rendererJSON:a,colormapLut:c};this.canRenderInWebGL=!0;return{success:!0}};n._isHistogramRequired=function(a){return"percentClip"===a||"histogramEqualization"===a};n._isValidRasterStatistics=function(a){return r.isSome(a)&&0<a.length&&null!=a[0].min&&null!=a[0].max};n._updateStretchRenderer=function(a){var b,d,e;let {stretchType:h,dra:c}=a;if(!("none"===h||null!=(b=a.statistics)&&
b.length||this._isValidRasterStatistics(this.rasterInfo.statistics)||c))return{success:!1,error:"Unsupported renderer; StretchRenderer.statistics is required when dynamic range adjustment is not used."};var f=r.unwrap(a.histograms||this.rasterInfo.histograms);!this._isHistogramRequired(a.stretchType)||null!=f&&f.length||c||(h="minMax");const {computeGamma:g,useGamma:k,colorRamp:l}=a;({gamma:b}=a);if(k&&g&&(null==(d=b)||!d.length)){var m;b=null!=(m=a.statistics)&&m.length?a.statistics:r.unwrap(this.rasterInfo.statistics);
b=u.computeGammaValues(this.rasterInfo.pixelType,b)}m=this.rasterInfo.pixelType;d=!c&&["u8","u16","s8","s16"].includes(m);"histogramEqualization"===h?(f=f.map(q=>u.createHistogramEqualizationLUT(q)),this.lookup={rendererJSON:a,histogramLut:f}):d&&(f=u.getStretchCutoff(a,{rasterInfo:this.rasterInfo}),f=u.createStretchLUT({pixelType:m,...f,gamma:k?b:null}),this.lookup={rendererJSON:a,stretchLut:f});l&&(f=G.convertColorRampToColormap(l,256,!0),this.lookup||(this.lookup={rendererJSON:a}),this.lookup.colormapLut=
t.createColormapLUT({colormap:f}),this.lookup.rendererJSON=a);this.lookup.gamma=k&&null!=(e=b)&&e.length?b:null;this.canRenderInWebGL=!0;return{success:!0}};n._generateStretchWebGLParams=function(a,b,d){let e=null,h=null;var c=this.lookup&&this.lookup.colormapLut;b.colorRamp&&c&&(e=c.indexedColormap,h=c.offset);"histogramEqualization"===b.stretchType&&(b={...b,stretchType:"minMax"});({gamma:c}=this.lookup);const f=!!(b.useGamma&&c&&c.some(B=>1!==B)),{minCutOff:g,maxCutOff:k,outMin:l,outMax:m}=u.getStretchCutoff(b,
{rasterInfo:this.rasterInfo,pixelBlock:a,bandIds:d});var q=0;r.isSome(a)&&(q=a.getPlaneCount(),2===q&&(a=a.clone(),a.statistics=[a.statistics[0]],a.pixels=[a.pixels[0]]));a=Math.min(3,(null==d?void 0:d.length)||q||this.rasterInfo.bandCount);d=new Float32Array(a);q=e||f?1:255;let p;for(p=0;p<a;p++)d[p]=(m-l)/(k[p]-g[p])/q;const v=new Float32Array(a);if(f)for(p=0;p<a;p++)v[p]=1<c[p]?2<c[p]?6.5+(c[p]-2)**2.5:6.5+100*(2-c[p])**4:1;return{bandCount:a,outMin:l/q,outMax:m/q,minCutOff:g,maxCutOff:k,factor:d,
useGamma:f,gamma:f?c:[1,1,1],gammaCorrection:f?v:[1,1,1],colormap:e,colormapOffset:h,stretchType:b.stretchType,type:"stretch"}};n._generateShadedReliefWebGLParams=function(a,b,d){var e,h,c;let f=null,g=null;const k=this.lookup&&this.lookup.colormapLut;a.colorRamp&&k&&(f=k.indexedColormap,g=k.offset);b=E.calculateHillshadeParams({...a,isGCS:b,resolution:d});d=null==(e=r.unwrap(this.rasterInfo.statistics))?void 0:e[0];return{...b,minValue:null!=(h=null==d?void 0:d.min)?h:0,maxValue:null!=(c=null==d?
void 0:d.max)?c:8E3,hillshadeType:"traditional"===a.hillshadeType?0:1,type:"hillshade",colormap:f,colormapOffset:g}};n._generateVectorFieldWebGLParams=function(a){var b,d,e,h,c,f,g,k;const {style:l,inputUnit:m,outputUnit:q,visualVariables:p,symbolTileSize:v,flowRepresentation:B}=a;let A;var w=null!=(b=null==(d=this.rasterInfo.statistics)?void 0:d[0].min)?b:0;b=null!=(e=null==(h=this.rasterInfo.statistics)?void 0:h[0].max)?e:50;e=null!=(c=null==p?void 0:p.find(F=>"sizeInfo"===F.type))?c:{type:"sizeInfo",
field:"Magnitude",maxDataValue:b,maxSize:.8*v,minDataValue:w,minSize:.2*v};c=null!=(f=e.minDataValue)?f:w;w=null!=(g=e.maxDataValue)?g:b;g=r.isSome(e.maxSize)&&r.isSome(e.minSize)?[e.minSize/v,e.maxSize/v]:[.2,.8];"wind_speed"===l&&(g[0]=g[1]=(g[0]+g[1])/2);f=r.isSome(c)&&r.isSome(w)?[c,w]:null;if("classified_arrow"===l)if(r.isSome(c)&&r.isSome(w)&&r.isSome(e))for(A=[],c=(e.maxDataValue-e.minDataValue)/5,w=0;6>w;w++)A.push(e.minDataValue+c*w);else A=[0,1E-6,3.5,7,10.5,14];e="flow_to"===B===("ocean_current_kn"===
l||"ocean_current_m"===l)?0:Math.PI;c=null==p?void 0:p.find(F=>"rotationInfo"===F.type);a=(null==(k=this.rasterInfo.storageInfo)?0:k.tileInfo)&&"vector-uv"===this.rasterInfo.dataType?"geographic":(null==c?void 0:c.rotationType)||a.rotationType;return{breakValues:A,dataRange:f,inputUnit:m,outputUnit:q,symbolTileSize:v,symbolPercentRange:g,style:l||"single_arrow",rotation:e,rotationType:a,type:"vectorField"}};return z}(y.JSONSupport);C.__decorate([D.property({json:{write:!0}})],y.prototype,"rendererJSON",
void 0);C.__decorate([D.property({type:N,json:{write:!0}})],y.prototype,"rasterInfo",void 0);C.__decorate([D.property({json:{write:!0}})],y.prototype,"lookup",void 0);C.__decorate([D.property()],y.prototype,"canRenderInWebGL",void 0);return y=C.__decorate([M.subclass("esri.renderers.support.RasterSymbolizer")],y)});