// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.24/esri/copyright.txt for details.
//>>built
define("exports ../../../chunks/_rollupPluginBabelHelpers ../../../core/Error ../../../renderers/support/rasterRendererHelper ./adapters/ImageryLayerAdapter ./adapters/ImageryTileLayerAdapter".split(" "),function(d,g,q,h,t,r){function f(a){var b;if("raster-layer-adapter"===a.type)return a;const e=null==(b=k[a.type])?void 0:b.adapter;return null==e?null:new e({layer:a})}function l(){l=g._asyncToGenerator(function*(a){var b;a=yield m(a);const e=f(a.layer);var c=yield e.generateRasterInfo(a);a=h.getSupportedRendererTypes(c).map(u=>
v[u]);const w=h.createDefaultRenderer(c);({bandCount:c}=c);1<c&&a.push("raster-rgb");!a.includes("raster-class-breaks")&&1===c&&10.3<=(null==(b=e.layer)?void 0:b.version)&&a.push("raster-class-breaks");return{supportedTypes:a,defaultRenderer:w}});return l.apply(this,arguments)}function n(){n=g._asyncToGenerator(function*(a){a=yield m(a);a=yield f(a.layer).generateRasterInfo(a);return h.getDefaultBandCombination(a)});return n.apply(this,arguments)}function m(a){return p.apply(this,arguments)}function p(){p=
g._asyncToGenerator(function*(a){var {layer:b}=a;if(!b)throw new q("raster-renderer-creator:missing-parameters","'layer' parameter is required");b=f(b);if(null==b)throw new q("raster-renderer-creator:invalid-parameters","'layer' must be one of these types: "+x.join(", "));yield b.load();yield b.updateRasterInfo({renderingRule:a.renderingRule,signal:a.signal});return{...a,layer:b}});return p.apply(this,arguments)}const k={imagery:{adapter:t,label:"ImageryLayer"},"imagery-tile":{adapter:r,label:"ImageryTileLayer"},
wcs:{adapter:r,label:"WCSLayer"}},v={"raster-stretch":"raster-stretch","unique-value":"raster-unique-value","raster-rgb":"raster-rgb","class-breaks":"raster-class-breaks","raster-colormap":"raster-colormap","raster-shaded-relief":"raster-shaded-relief","vector-field":"raster-vector-field",flow:"raster-flow"},x=Object.keys(k).map(a=>k[a].label);d.createRasterLayerAdapter=f;d.getDefaultBandCombination=function(a){return n.apply(this,arguments)};d.getSupportedRendererInfo=function(a){return l.apply(this,
arguments)};d.processRasterRendererParameters=m;Object.defineProperties(d,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});