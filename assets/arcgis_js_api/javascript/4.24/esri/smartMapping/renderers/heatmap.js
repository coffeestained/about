// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.24/esri/copyright.txt for details.
//>>built
define("exports ../../chunks/_rollupPluginBabelHelpers ../../Color ../../renderers/ClassBreaksRenderer ../../renderers/DictionaryRenderer ../../renderers/DotDensityRenderer ../../renderers/HeatmapRenderer ../../renderers/PieChartRenderer ../../renderers/Renderer ../../renderers/SimpleRenderer ../../renderers/UniqueValueRenderer ../../renderers/support/jsonUtils ../../core/Error ../../core/maybe ../../renderers/support/HeatmapColorStop ../../renderers/support/heatmapUtils ./support/utils ../statistics/heatmapStatistics ../support/utils ../support/adapters/support/layerUtils ../symbology/heatmap".split(" "),
function(y,l,z,U,V,W,F,X,Y,Z,aa,ba,A,q,m,G,r,H,I,g,t){function J(a){return u.apply(this,arguments)}function u(){u=l._asyncToGenerator(function*(a){if(!(a&&a.layer&&a.view))throw new A("heatmap-renderer:missing-parameters","'layer' and 'view' parameters are required");const {blurRadius:c,radius:d,minRatio:b,maxRatio:n,fadeToTransparent:p}=a;a={...a};a.radius=null==d?null==c?18:G.gaussianBlurRadiusPxToKernelDensityRadiusPt(c):d;a.minRatio=null==b?.01:b;a.maxRatio=null==n?1:n;a.fadeToTransparent=null==
p?!0:p;var e=[g.LayerType.CSVLayer,g.LayerType.FeatureLayer,g.LayerType.OGCFeatureLayer,g.LayerType.GeoJSONLayer,g.LayerType.WFSLayer],f=g.createLayerAdapter(a.layer,e);a.layer=f;if(!f)throw new A("heatmap-renderer:invalid-parameters","'layer' must be one of these types: "+g.getLayerTypeLabels(e).join(", "));e=q.isSome(a.signal)?{signal:a.signal}:null;yield f.load(e);e=yield I.getFieldsList({field:a.field});if(f=r.verifyBasicFieldValidity(f,e,"heatmap-renderer:invalid-parameters"))throw f;return a});
return u.apply(this,arguments)}function K(a){return v.apply(this,arguments)}function v(){v=l._asyncToGenerator(function*(a){let c=a.scheme,d=null;var b=null;b=yield r.getBasemapInfo(a.basemap,a.view);d=q.isSome(b.basemapId)?b.basemapId:null;b=q.isSome(b.basemapTheme)?b.basemapTheme:null;if(c)return{scheme:t.cloneScheme(c),basemapId:d,basemapTheme:b};if(a=t.getSchemes({basemap:d,basemapTheme:b}))c=a.primaryScheme,d=a.basemapId,b=a.basemapTheme;return{scheme:c,basemapId:d,basemapTheme:b}});return v.apply(this,
arguments)}function L(a,c){return w.apply(this,arguments)}function w(){w=l._asyncToGenerator(function*(a,c){const {fieldOffset:d}=a,{field:b,basemap:n,radius:p,minRatio:e,maxRatio:f,fadeToTransparent:M,heatmapScheme:N,view:O}=c,{scheme:B,basemapId:P,basemapTheme:Q}=yield K({basemap:n,scheme:N,view:O});var k=B.colors;const C=k.length,D=(c=!a.count)?[0,.04]:[a.min,a.max],R=(f-e)/(C-1),h=k[0],E=[new m({ratio:0,color:new z([h.r,h.g,h.b,0])}),new m({ratio:.01,color:new z([h.r,h.g,h.b,0])}),new m({ratio:M?
e:.01,color:h})];r.createColors(k,C).forEach((S,T)=>{E.push(new m({ratio:e+R*T,color:S}))});k=new F({radius:p,colorStops:E,field:b,minDensity:D[0],maxDensity:D[1]});null!=d&&(k.fieldOffset=d);return{renderer:k,statistics:a,defaultValuesUsed:c,scheme:t.cloneScheme(B),basemapId:P,basemapTheme:Q}});return w.apply(this,arguments)}function x(){x=l._asyncToGenerator(function*(a){a=yield J(a);const c=a.statistics?a.statistics:yield H({layer:a.layer,field:a.field,fieldOffset:a.fieldOffset,radius:a.radius,
view:a.view,signal:a.signal});return L(c,a)});return x.apply(this,arguments)}y.createRenderer=function(a){return x.apply(this,arguments)};Object.defineProperties(y,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});